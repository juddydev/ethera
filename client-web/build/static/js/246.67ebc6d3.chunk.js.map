{"version":3,"file":"static/js/246.67ebc6d3.chunk.js","mappings":"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","sources":["pages/Owner/NewAppModal.tsx","../node_modules/@mui/material/esm/useMediaQuery/useMediaQuery.js","pages/Owner/DeletAppModal.tsx","pages/Owner/EditAppModal.tsx","pages/Owner/RotateModal.tsx","components/RegisterCompanyModal.tsx","pages/Owner/Apps.tsx","pages/Owner/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { useFormik } from \"formik\";\nimport TextField from \"@mui/material/TextField\";\nimport { useStoreState } from \"../../store\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport * as http from \"../../http\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { Button } from \"@mui/material\";\n\ntype TProps = {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nexport default function NewAppModal({ open, setOpen }: TProps) {\n  const fileRef = React.useRef<HTMLInputElement>(null);\n  const setApp = useStoreState((state) => state.setApp);\n  const [loading, setLoading] = useState(false);\n  const [preview, setPreview] = useState<string>(\"\");\n\n  const formik = useFormik({\n    initialValues: {\n      appName: \"\",\n      appDescription: \"\",\n      appGoogleId: \"\",\n      defaultAccessProfileOpen: false,\n      defaultAccessAssetsOpen: false,\n      usersCanFree: false,\n      newUserTokenGift: 0,\n      coinsDayliBonus: 0,\n    },\n    validate: (values) => {\n      const errors: Record<string, string> = {};\n\n      if (!values.appName) {\n        errors.appName = \"Required\";\n      }\n\n      return errors;\n    },\n    onSubmit: ({\n      appName,\n      appDescription,\n      appGoogleId,\n      defaultAccessAssetsOpen,\n      defaultAccessProfileOpen,\n      usersCanFree,\n    }) => {\n      setLoading(true);\n      const fd = new FormData();\n      let file;\n      if (fileRef.current) {\n        const files = fileRef.current.files;\n        if (files) {\n          file = files[0];\n        }\n      }\n\n      if (file) {\n        fd.append(\"file\", file);\n      }\n\n      fd.append(\"appName\", appName);\n      fd.append(\"appDescription\", appDescription);\n      fd.append(\"appGoogleId\", appGoogleId);\n      fd.append(\"defaultAccessAssetsOpen\", defaultAccessAssetsOpen.toString());\n      fd.append(\n        \"defaultAccessProfileOpen\",\n        defaultAccessProfileOpen.toString()\n      );\n      fd.append(\"usersCanFree\", usersCanFree.toString());\n\n      http\n        .createApp(fd)\n        .then((response) => {\n          setApp(response.data.app);\n          setOpen(false);\n        })\n        .finally(() => setLoading(false));\n    },\n  });\n\n  const onImage = (event: any) => {\n    const input = event.target as HTMLInputElement;\n\n    if (input.files) {\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n        if (e) {\n          if (e.target?.result) {\n            setPreview(e.target.result as string);\n          }\n        }\n      };\n      reader.readAsDataURL(input.files[0]);\n    }\n  };\n  const onClose = () => {\n    setOpen(false);\n    setPreview(\"\");\n  };\n  return (\n    <Dialog onClose={onClose} open={open}>\n      <Box sx={{ padding: 1, minWidth: 500 }}>\n        <IconButton\n          sx={{ position: \"absolute\", top: 0, right: 0 }}\n          disabled={loading}\n          onClick={() => setOpen(false)}\n        >\n          <CloseIcon />\n        </IconButton>\n        <DialogTitle sx={{ padding: 1 }}>New App</DialogTitle>\n        <Box sx={{ width: \"100%\", padding: 1 }}>\n          <form onSubmit={formik.handleSubmit} style={{ width: \"100%\" }}>\n            <Box>\n              <TextField\n                sx={{ width: \"100%\" }}\n                error={!!formik.touched.appName && !!formik.errors.appName}\n                margin=\"dense\"\n                label=\"App Name\"\n                name=\"appName\"\n                variant=\"outlined\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.appName}\n              />\n            </Box>\n            <Box>\n              <TextField\n                sx={{ width: \"100%\" }}\n                margin=\"dense\"\n                label=\"Google Client Id\"\n                name=\"appGoogleId\"\n                variant=\"outlined\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.appGoogleId}\n              />\n            </Box>\n            <Box sx={{ display: \"flex\", justifyContent: \"space-between\", mt: 1 }}>\n              <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n                <FormControlLabel\n                  checked={formik.values.defaultAccessProfileOpen}\n                  name=\"Default Access Profile Open\"\n                  control={\n                    <Checkbox\n                      onChange={(e) =>\n                        formik.setFieldValue(\n                          \"defaultAccessProfileOpen\",\n                          e.target.checked\n                        )\n                      }\n                    />\n                  }\n                  label={\"Default Access Profile Open\"}\n                  labelPlacement=\"end\"\n                  onChange={formik.handleChange}\n                />\n                <FormControlLabel\n                  checked={formik.values.defaultAccessAssetsOpen}\n                  name=\"Default Access Assets Open\"\n                  control={\n                    <Checkbox\n                      onChange={(e) =>\n                        formik.setFieldValue(\n                          \"defaultAccessAssetsOpen\",\n                          e.target.checked\n                        )\n                      }\n                    />\n                  }\n                  label={\"Default Access Assets Open\"}\n                  labelPlacement=\"end\"\n                />\n                <FormControlLabel\n                  checked={formik.values.usersCanFree}\n                  name=\"Users can free\"\n                  control={\n                    <Checkbox\n                      onChange={(e) =>\n                        formik.setFieldValue(\"usersCanFree\", e.target.checked)\n                      }\n                    />\n                  }\n                  label={\"Users can free\"}\n                  labelPlacement=\"end\"\n                />\n              </Box>\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <input\n                  onChange={onImage}\n                  ref={fileRef}\n                  type=\"file\"\n                  accept=\"image/*\"\n                  style={{ display: \"none\" }}\n                />\n                {preview ? (\n                  <Box\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      width: \"100%\",\n                      cursor: \"pointer\",\n                    }}\n                    onClick={() => fileRef.current?.click()}\n                  >\n                    <img\n                      src={preview}\n                      style={{\n                        width: 200,\n                        height: '100%',\n                        objectFit: \"cover\",\n                        borderRadius: 10,\n                      }}\n                      alt={\"test\"}\n                    />\n                  </Box>\n                ) : (\n                  <Button\n                    variant=\"text\"\n                    onClick={() => fileRef.current?.click()}\n                  >\n                    upload image\n                  </Button>\n                )}\n              </Box>\n            </Box>\n            <LoadingButton\n              loading={loading}\n              variant=\"contained\"\n              style={{ marginTop: \"15px\", width: \"100%\" }}\n              type=\"submit\"\n              disabled={loading}\n            >\n              Create App\n            </LoadingButton>\n          </form>\n        </Box>\n      </Box>\n    </Dialog>\n  );\n}\n","import * as React from 'react';\nimport { getThemeProps, useThemeWithoutDefault as useTheme } from '@mui/system';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n\n/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && supportMatchMedia) {\n      return matchMedia(query).matches;\n    }\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    }\n\n    // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    let active = true;\n    if (!supportMatchMedia) {\n      return undefined;\n    }\n    const queryList = matchMedia(query);\n    const updateMatch = () => {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n    updateMatch();\n    // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n    queryList.addListener(updateMatch);\n    return () => {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia, supportMatchMedia]);\n  return match;\n}\n\n// eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseSyncExternalStore = React['useSyncExternalStore' + ''];\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n      mediaQueryList.addListener(notify);\n      return () => {\n        mediaQueryList.removeListener(notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\nexport default function useMediaQuery(queryInput, options = {}) {\n  const theme = useTheme();\n  // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, '');\n\n  // TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n  return match;\n}","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { useTheme } from '@mui/material/styles';\nimport * as http from '../../http'\nimport { useStoreState } from '../../store'\n\ntype TProps = {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  app?: {\n    appName: string\n    _id: string\n  } | null;\n};\n\nexport default function DeletAppModal(props: TProps) {\n  const [loading, setLoading] = React.useState(false)\n  const deleteApp = useStoreState(state => state.deleteApp)\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n  const onDelete = () => {\n    if (props.app && props.app?._id) {\n      setLoading(true)\n      http.deleteApp(props.app._id)\n        .then(() => {\n          deleteApp(props.app?._id as string)\n          props.setOpen(false)\n        })\n        .finally(() => setLoading(false))\n    }\n  }\n\n  return (\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={props.open}\n        onClose={() => props.setOpen(false)}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          Are you sure want to remove application {props.app?.appName}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Your app clients(mobile, web) will not be able to send requests to Platform API after deleting the app\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button disabled={loading} variant=\"contained\" autoFocus onClick={() => props.setOpen(false)}>\n            Cancel\n          </Button>\n          <LoadingButton variant=\"contained\" loading={loading} color=\"error\" onClick={onDelete} autoFocus>\n            Delete\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { useFormik } from \"formik\";\nimport TextField from \"@mui/material/TextField\";\nimport { useStoreState } from \"../../store\";\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport * as http from '../../http'\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\n\ntype TProps = {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  app: {\n    _id: string,\n    appName: string,\n    appDescription: string,\n    appGoogleId: string,\n    defaultAccessProfileOpen: boolean,\n    defaultAccessAssetsOpen: boolean,\n    usersCanFree: boolean,\n  }\n};\n\nexport default function EditAppModal({ open, setOpen, app }: TProps) {\n  const fileRef = React.useRef<HTMLInputElement>(null);\n  const [loading, setLoading] = useState(false)\n  const updateApp = useStoreState(state => state.updateApp)\n\n  const formik = useFormik({\n    initialValues: {\n      appName: app.appName,\n      appDescription: app.appDescription ? app.appDescription : '',\n      appGoogleId: app.appGoogleId ? app.appGoogleId : '',\n      defaultAccessProfileOpen: app.defaultAccessProfileOpen,\n      defaultAccessAssetsOpen: app.defaultAccessAssetsOpen,\n      usersCanFree: app.usersCanFree\n    },\n    validate: (values) => {\n      const errors: Record<string, string> = {};\n\n      if (!values.appName) {\n        errors.appName = \"Required\";\n      }\n\n      return errors;\n    },\n    onSubmit: ({\n      appName,\n      appDescription,\n      appGoogleId,\n      defaultAccessAssetsOpen,\n      defaultAccessProfileOpen,\n      usersCanFree\n    }) => {\n      setLoading(true);\n      const fd = new FormData();\n      let file;\n      if (fileRef.current) {\n        const files = fileRef.current.files;\n        if (files) {\n          file = files[0];\n        }\n      }\n\n      if (file) {\n        fd.append(\"file\", file);\n      }\n\n      fd.append(\"appName\", appName);\n      fd.append(\"appDesctription\", appDescription);\n      fd.append(\"appGoogleId\", appGoogleId);\n      fd.append(\"defaultAccessAssetsOpen\", defaultAccessAssetsOpen.toString());\n      fd.append(\"defaultAccessProfileOpen\", defaultAccessProfileOpen.toString());\n      fd.append(\"usersCanFree\", usersCanFree.toString());\n\n      http.updateApp(app._id, fd)\n        .then(response => {\n          updateApp(response.data.app)\n          setOpen(false)\n        })\n        .finally(() => setLoading(false))\n    }\n  });\n\n  return (\n    <Dialog onClose={() => setOpen(false)} open={open}>\n      <Box>\n        <DialogTitle\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          Edit App\n          <IconButton disabled={loading} onClick={() => setOpen(false)}>\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <Box sx={{ width: \"100%\", typography: \"body1\", padding: 1 }}>\n        <form onSubmit={formik.handleSubmit}>\n          <Box>\n            <TextField\n              error={\n                formik.touched.appName && formik.errors.appName ? true : false\n              }\n              helperText={\n                formik.touched.appName && formik.errors.appName\n                  ? formik.errors.appName\n                  : \"\"\n              }\n              margin=\"dense\"\n              label=\"App Name\"\n              name=\"appName\"\n              variant=\"standard\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.appName}\n            />\n          </Box>\n          <Box>\n            <TextField\n              margin=\"dense\"\n              label=\"Google Client Id\"\n              name=\"appGoogleId\"\n              variant=\"standard\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.appGoogleId}\n            />\n          </Box>\n          <Box style={{ display: \"inline-flex\", flexDirection: \"column\" }}>\n            <FormControlLabel\n              checked={formik.values.defaultAccessProfileOpen}\n              name=\"defaultAccessProfileOpen\"\n              control={\n                <Checkbox\n                  onChange={(e) =>\n                    formik.setFieldValue(\n                      \"defaultAccessProfileOpen\",\n                      e.target.checked\n                    )\n                  }\n                />\n              }\n              label=\"defaultAccessProfileOpen\"\n              labelPlacement=\"end\"\n              onChange={formik.handleChange}\n            />\n            <FormControlLabel\n              checked={formik.values.defaultAccessAssetsOpen}\n              name=\"defaultAccessAssetsOpen\"\n              control={\n                <Checkbox\n                  onChange={(e) =>\n                    formik.setFieldValue(\n                      \"defaultAccessAssetsOpen\",\n                      e.target.checked\n                    )\n                  }\n                />\n              }\n              label=\"defaultAccessAssetsOpen\"\n              labelPlacement=\"end\"\n            />\n            <FormControlLabel\n              checked={formik.values.usersCanFree}\n              name=\"usersCanFree\"\n              control={\n                <Checkbox\n                  onChange={(e) =>\n                    formik.setFieldValue(\"usersCanFree\", e.target.checked)\n                  }\n                />\n              }\n              label=\"usersCanFree\"\n              labelPlacement=\"end\"\n            />\n\n            <input ref={fileRef} type=\"file\" accept=\"image/*\"></input>\n            <LoadingButton\n              loading={loading}\n              variant=\"contained\"\n              style={{ marginTop: \"15px\" }}\n              type=\"submit\"\n            >\n              Update App\n            </LoadingButton>\n          </Box>\n        </form>\n        </Box>\n      </Box>\n    </Dialog>\n  );\n}\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { useTheme } from '@mui/material/styles';\nimport * as http from '../../http'\nimport { useStoreState } from '../../store'\n\ntype TProps = {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  app?: {\n    appName: string\n    _id: string\n  } | null;\n};\n\nexport default function RotateModal(props: TProps) {\n  const [loading, setLoading] = React.useState(false)\n  const updateApp = useStoreState(state => state.updateApp)\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n  const onRotate = () => {\n    if (props.app && props.app?._id) {\n      setLoading(true)\n      http.rotateAppJwt(props.app._id)\n        .then((response) => {\n          updateApp(response.data.app)\n          props.setOpen(false)\n        })\n        .finally(() => setLoading(false))\n    }\n  }\n\n  return (\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={props.open}\n        onClose={() => props.setOpen(false)}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          Are you sure want to rotate JWT for application {props.app?.appName}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            You will need to update your app clients(mobile, web) with new App Jwt\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button disabled={loading} variant=\"contained\" autoFocus onClick={() => props.setOpen(false)}>\n            Cancel\n          </Button>\n          <LoadingButton variant=\"contained\" loading={loading} color=\"error\" onClick={onRotate} autoFocus>\n            Rotate\n          </LoadingButton>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { LoadingButton } from \"@mui/lab\";\nimport {\n  Dialog,\n  Box,\n  DialogTitle,\n  IconButton,\n  TextField,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Alert,\n  Button,\n  Typography,\n} from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport { agreeWithTerms } from \"../http\";\nimport Tnc from \"../pages/Signon/Tnc\";\nimport { useStoreState } from \"../store\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { useSnackbar } from \"../context/SnackbarContext\";\n\nexport interface IRegisterCompanyModal {\n  open: boolean;\n  onClose: () => void;\n  afterSubmit?: () => void\n}\n\nexport const RegisterCompanyModal: React.FC<IRegisterCompanyModal> = ({\n  open,\n  onClose,\n  afterSubmit\n}) => {\n  const user = useStoreState((state) => state.user);\n  const setUser = useStoreState((state) => state.setUser);\n\n  const [termsOpen, setTermsOpen] = useState(false);\n  const [termsAccepted, setTermsAccepted] = useState(false);\n  const {showSnackbar} = useSnackbar()\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      companyName: \"\",\n    },\n    onSubmit: async ({ companyName }) => {\n      setLoading(true);\n      try {\n        const res = await agreeWithTerms(companyName);\n        setUser({ ...user, isAgreeWithTerms: true });\n        onClose()\n        afterSubmit()\n      } catch (error) {\n        console.log(error);\n        showSnackbar('error', 'Something went wrong')\n      }\n      setLoading(false);\n    },\n  });\n  return (\n    <Dialog onClose={onClose} maxWidth={false} open={open}>\n      <Box style={{ width: \"400px\" }}>\n        <IconButton\n          sx={{ position: \"absolute\", top: 0, right: 0 }}\n          disabled={loading}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n        <DialogTitle\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            paddingLeft: 1,\n          }}\n        >\n          Owner Registration\n        </DialogTitle>\n        <Box sx={{ width: \"100%\", typography: \"body1\", padding: 1 }}>\n          <form onSubmit={formik.handleSubmit}>\n            <TextField\n              margin=\"dense\"\n              label=\"Company Name\"\n              name=\"companyName\"\n              type=\"text\"\n              fullWidth\n              inputProps={{\n                autoComplete: \"off\",\n              }}\n              variant=\"standard\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={\n                formik.touched.companyName && Boolean(formik.errors.companyName)\n              }\n              helperText={\n                formik.touched.companyName && formik.errors.companyName\n                  ? formik.errors.companyName\n                  : \"\"\n              }\n            />\n\n            <FormGroup>\n              <FormControlLabel\n                value=\"I agree to the terms and conditions\"\n                control={\n                  <Checkbox\n                    checked={termsAccepted}\n                    onChange={(e) => setTermsAccepted(e.target.checked)}\n                  />\n                }\n                label=\"I agree to the terms and conditions\"\n                labelPlacement=\"end\"\n              />\n            </FormGroup>\n            {/* <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"flex-end\",\n                flexDirection: \"column\",\n                width: \"100%\",\n              }}\n            >\n              <Typography\n                onClick={(e) => {\n                  setTermsOpen(true);\n                }}\n                sx={{\n                  textDecoration: \"underline\",\n                  cursor: \"pointer\",\n                  fontSize: 10,\n                }}\n              >\n                Terms and Conditions\n              </Typography>\n            </Box> */}\n            {!!error && <Alert severity=\"error\">{error}</Alert>}\n            <Box sx={{ margin: 2, display: \"flex\", justifyContent: \"center\" }}>\n              <LoadingButton\n                loading={loading}\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={loading || !termsAccepted}\n              >\n                Register\n              </LoadingButton>\n            </Box>\n          </form>\n        </Box>\n      </Box>\n      <Dialog\n        onClose={() => setTermsOpen(false)}\n        maxWidth={false}\n        open={termsOpen}\n      >\n        <Box sx={{ width: 800 }}>\n          <Tnc\n            setTermsOpen={(isOpen: boolean) => setTermsOpen(isOpen)}\n            firstName={user.firstName}\n            lastName={user.lastName}\n            email={user.lastName}\n            company=\"company\"\n          />\n        </Box>\n      </Dialog>\n    </Dialog>\n  );\n};\n","import React, { useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport { IconButton, Tooltip, Typography } from \"@mui/material\";\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\nimport { useStoreState } from \"../../store\";\nimport NoDataImage from \"../../components/NoDataImage\";\nimport NewAppModal from \"./NewAppModal\";\nimport DeleteAppModal from \"./DeletAppModal\";\nimport EditAppModal from \"./EditAppModal\";\nimport RotateModal from \"./RotateModal\";\nimport { RegisterCompanyModal } from \"../../components/RegisterCompanyModal\";\nimport { coinsMainName } from \"../../config/config\";\n\nconst COINS_TO_CREATE_APP = 10000;\n\nexport default function BasicTable() {\n  const apps = useStoreState((state) => state.apps);\n  const user = useStoreState((state) => state.user);\n  const [open, setOpen] = useState(false);\n  const [companyModalOpen, setCompanyModalOpen] = useState(false);\n  const mainCoinBalance = useStoreState((state) =>\n    state.balance.find((el) => el.tokenName === coinsMainName)\n  );\n  const isEnoughCoinsToCreateApp =\n    +mainCoinBalance.balance >= COINS_TO_CREATE_APP;\n  const [showDelete, setShowDelete] = useState(false);\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRotate, setShowRotate] = useState(false);\n  const [currentApp, setCurrentApp] = useState({\n    _id: \"\",\n    appName: \"\",\n    appDescription: \"\",\n    appGoogleId: \"\",\n    defaultAccessProfileOpen: false,\n    defaultAccessAssetsOpen: false,\n    usersCanFree: false,\n  });\n\n  const onDelete = (app: any) => {\n    setCurrentApp(app);\n    setShowDelete(true);\n  };\n\n  const onEdit = (app: any) => {\n    setCurrentApp(app);\n    setShowEdit(true);\n  };\n\n  const onRotateJwt = (app: any) => {\n    setCurrentApp(app);\n    setShowRotate(true);\n  };\n  const onAddApp = () => {\n    if (!user.isAgreeWithTerms) {\n      setCompanyModalOpen(true);\n      return;\n    }\n    setOpen(true);\n  };\n\n  return (\n    <TableContainer component={Paper} style={{ margin: \"0 auto\" }}>\n      <Box style={{ display: \"flex\", alignItems: \"center\" }}>\n        <Typography variant=\"h6\" style={{ margin: \"16px\" }}>\n          Apps\n        </Typography>\n        <Tooltip\n          title={\n            !isEnoughCoinsToCreateApp\n              ? \"You don't have enough coins to create the app.\"\n              : \"\"\n          }\n        >\n          <span>\n            <IconButton\n              disabled={isEnoughCoinsToCreateApp}\n              onClick={onAddApp}\n              size=\"large\"\n            >\n              <AddCircleIcon fontSize=\"large\"></AddCircleIcon>\n            </IconButton>\n          </span>\n        </Tooltip>\n      </Box>\n      {apps.length === 0 && (\n        <Box\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <NoDataImage></NoDataImage>\n          <Typography style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n            You have not created any apps.\n          </Typography>\n        </Box>\n      )}\n\n      {apps.length > 0 && (\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell width={200}>Application Name</TableCell>\n              <TableCell align=\"right\">Is Assets Open</TableCell>\n              <TableCell align=\"right\">Is Profile Open</TableCell>\n              <TableCell align=\"right\">Is Users Can Free</TableCell>\n              <TableCell align=\"right\">Created</TableCell>\n              <TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {apps.map((app) => (\n              <TableRow\n                key={app._id}\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {app.appName}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {app.defaultAccessAssetsOpen.toString()}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {app.defaultAccessProfileOpen.toString()}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {app.usersCanFree.toString()}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {new Date(app.createdAt).toDateString()}\n                </TableCell>\n                <TableCell align=\"right\">\n                  <Box style={{ display: \"flex\", flexDirection: \"column\" }}>\n                    <a\n                      href=\"/\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        onDelete(app);\n                      }}\n                    >\n                      Delete\n                    </a>\n                    <a\n                      href={`data:text/json;chatset=utf-8,${encodeURIComponent(\n                        JSON.stringify({ appJwt: app.appToken })\n                      )}`}\n                      style={{ display: \"none\" }}\n                      download=\"data.json\"\n                      id={`app-jwt-${app._id}`}\n                    >\n                      download jwt\n                    </a>\n                    <a\n                      href=\"/\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        const el = document.querySelector(\n                          `#app-jwt-${app._id}`\n                        ) as HTMLElement;\n                        el?.click();\n                      }}\n                    >\n                      Download App JWT\n                    </a>\n                    <a\n                      href=\"/\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        onRotateJwt(app);\n                      }}\n                    >\n                      Rotate App Jwt\n                    </a>\n                    <a\n                      href=\"/\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        onEdit(app);\n                      }}\n                    >\n                      Edit\n                    </a>\n                  </Box>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )}\n      <NewAppModal open={open} setOpen={setOpen} />\n      <RegisterCompanyModal\n        onClose={() => setCompanyModalOpen(false)}\n        open={companyModalOpen}\n        afterSubmit={() => setOpen(true)}\n      />\n      <DeleteAppModal\n        app={currentApp}\n        open={showDelete}\n        setOpen={setShowDelete}\n      />\n      <RotateModal\n        app={currentApp}\n        open={showRotate}\n        setOpen={setShowRotate}\n      />\n      {showEdit && (\n        <EditAppModal app={currentApp} open={showEdit} setOpen={setShowEdit} />\n      )}\n    </TableContainer>\n  );\n}\n","import * as React from \"react\";\nimport { useStoreState } from \"../../store\";\nimport { useHistory } from \"react-router-dom\";\nimport Apps from \"./Apps\";\nimport Box from \"@mui/material/Box\";\nimport Users from \"./Users\";\nimport { Container } from \"@mui/material\";\n\nexport default function Owner() {\n  return (\n    <div style={{ backgroundColor: \"#edf0f4\", padding: \"20px\" }}>\n      <Container maxWidth={\"lg\"}>\n        <Box style={{ marginTop: \"20px\" }}>\n          <Apps />\n        </Box>\n\n        <Box style={{ marginTop: \"20px\" }}>\n          <Users />\n        </Box>\n      </Container>\n    </div>\n  );\n}\n"],"names":["NewAppModal","open","setOpen","fileRef","React","setApp","useStoreState","state","useState","loading","setLoading","preview","setPreview","formik","useFormik","initialValues","appName","appDescription","appGoogleId","defaultAccessProfileOpen","defaultAccessAssetsOpen","usersCanFree","newUserTokenGift","coinsDayliBonus","validate","values","errors","onSubmit","file","fd","FormData","current","files","append","toString","http","then","response","data","app","finally","Dialog","onClose","Box","sx","padding","minWidth","IconButton","position","top","right","disabled","onClick","Close","DialogTitle","width","handleSubmit","style","TextField","error","touched","margin","label","name","variant","onChange","handleChange","onBlur","handleBlur","value","display","justifyContent","mt","flexDirection","FormControlLabel","checked","control","Checkbox","e","setFieldValue","target","labelPlacement","alignItems","event","input","reader","FileReader","onload","result","readAsDataURL","ref","type","accept","cursor","click","src","height","objectFit","borderRadius","alt","Button","LoadingButton","marginTop","useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","supportMatchMedia","window","matches","match","setMatch","useEnhancedEffect","active","queryList","updateMatch","addListener","removeListener","maybeReactUseSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","getServerSnapshot","mediaQueryList","notify","getSnapshot","subscribe","useMediaQuery","queryInput","options","theme","useTheme","getThemeProps","props","replace","useMediaQueryImplementation","undefined","DeletAppModal","deleteApp","fullScreen","breakpoints","down","id","DialogContent","DialogContentText","DialogActions","autoFocus","color","_id","EditAppModal","updateApp","typography","helperText","RotateModal","RegisterCompanyModal","afterSubmit","user","setUser","termsOpen","setTermsOpen","termsAccepted","setTermsAccepted","showSnackbar","useSnackbar","companyName","agreeWithTerms","isAgreeWithTerms","console","log","maxWidth","paddingLeft","fullWidth","inputProps","autoComplete","Boolean","FormGroup","Alert","severity","Tnc","isOpen","firstName","lastName","email","company","BasicTable","apps","companyModalOpen","setCompanyModalOpen","isEnoughCoinsToCreateApp","balance","find","el","tokenName","coinsMainName","showDelete","setShowDelete","showEdit","setShowEdit","showRotate","setShowRotate","currentApp","setCurrentApp","TableContainer","component","Paper","Typography","Tooltip","title","size","AddCircle","fontSize","length","NoDataImage","marginBottom","Table","TableHead","TableRow","TableCell","align","TableBody","map","border","scope","Date","createdAt","toDateString","href","preventDefault","onDelete","encodeURIComponent","JSON","stringify","appJwt","appToken","download","document","querySelector","onRotateJwt","onEdit","Owner","backgroundColor","Container","Users"],"sourceRoot":""}
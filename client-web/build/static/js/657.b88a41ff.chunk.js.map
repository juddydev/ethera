{"version":3,"file":"static/js/657.b88a41ff.chunk.js","mappings":"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","sources":["componets/Chat/Messages/Message.tsx","componets/Chat/Messages/SystemMessage.tsx","pages/ChatInRoom/Chat.tsx","pages/ChatInRoom/index.tsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\nimport { Message as KitMessage, MessageModel, Button, MessageSeparator } from \"@chatscope/chat-ui-kit-react\";\r\nimport { differenceInHours, format, formatDistance, subDays } from \"date-fns\";\r\nimport {TMessageHistory, useStoreState} from \"../../../store\";\r\nimport {useHistory} from \"react-router\";\r\nimport {\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle, IconButton, Menu, MenuItem, TextField, useMediaQuery,\r\n  useTheme\r\n} from \"@mui/material\";\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport Box from \"@mui/material/Box\";\r\nimport {getPublicProfile, transferCoin} from \"../../../http\";\r\nimport xmpp from \"../../../xmpp\";\r\nimport {TProfile} from \"../../../pages/Profile/types\";\r\n\r\nexport interface IMessage {\r\n  message: TMessageHistory;\r\n  userJid: string;\r\n  position: {\r\n    type: string;\r\n    position: MessageModel['position'];\r\n    separator?: string;\r\n  };\r\n  is?: string;\r\n  buttonSender: any\r\n}\r\n\r\nexport interface IButtons {\r\n  name: string;\r\n  notDisplayedValue: string;\r\n  value: string\r\n}\r\n\r\ntype IDialog = \"transfer\" | \"direct\" | \"ban\";\r\n\r\nexport const Message: React.FC<IMessage> = ({\r\n  message,\r\n  userJid,\r\n  position,\r\n  buttonSender\r\n}) => {\r\n  const firstName = message.data.senderFirstName;\r\n  const lastName = message.data.senderLastName;\r\n  const messageJid = message.data.senderJID;\r\n  const history = useHistory();\r\n  const [buttons, setButtons] = useState<IButtons[]>();\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [dialogMenuType, setDialogMenuType] = useState<IDialog>(\"transfer\");\r\n  const openMenu = Boolean(anchorEl);\r\n  const handleClickMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const [coinAmount, setCoinAmount] = useState(\"\");\r\n  const balance = useStoreState((store) => store.balance);\r\n  const coinData = balance.filter(el => !el.tokenType && el.contractAddress.length > 10)\r\n  const [profile, setProfile] = useState<TProfile>();\r\n  const user = useStoreState((store) => store.user);\r\n\r\n  const openDialogMenu = (type: IDialog) => {\r\n    setAnchorEl(null)\r\n    setOpenDialog(true);\r\n    setDialogMenuType(type);\r\n  }\r\n\r\n  const sendCoins = () => {\r\n    // @ts-ignore\r\n    transferCoin(coinData[0].tokenName, coinData[0].tokenSymbol, Number(coinAmount), message.data.senderWalletAddress).then(result => {\r\n      console.log('Transfer success => ', result)\r\n\r\n      let userAvatar = \"\";\r\n      if (profile?.profileImage) {\r\n        userAvatar = profile?.profileImage;\r\n      }\r\n\r\n      xmpp.sendMessage(\r\n          message.roomJID,\r\n          user.firstName,\r\n          user.lastName,\r\n          userAvatar,\r\n          user.walletAddress,\r\n          \"\",\r\n          null\r\n      );\r\n\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(message.data.quickReplies){\r\n      setButtons(JSON.parse(message.data.quickReplies));\r\n    }\r\n    getPublicProfile(user.walletAddress).then((result) => {\r\n      setProfile(result.data.result);\r\n    });\r\n  }, [])\r\n\r\n  return (\r\n  <div is={\"Message\"}>\r\n    {position.separator ?\r\n      <MessageSeparator>\r\n        {position.separator}\r\n      </MessageSeparator> : null\r\n    }\r\n    <KitMessage\r\n      key={message.key}\r\n      model={{\r\n        sender: firstName + \" \" + lastName,\r\n        direction: String(userJid).split(\"/\")[0] === String(messageJid).split(\"/\")[0] ? \"outgoing\" : \"incoming\",\r\n        position: position.position,\r\n      }}\r\n      avatarPosition={String(userJid).split(\"/\")[0] === String(messageJid).split(\"/\")[0] ? \"tr\" : \"tl\"}\r\n      avatarSpacer={position.type !== \"first\" && position.type !== \"single\"}\r\n    >\r\n      {(position.type === \"first\" || position.type === \"single\") && (\r\n        <img\r\n          style={{\r\n            borderRadius: \"50%\",\r\n            boxSizing: \"border-box\",\r\n            width: \"42px\",\r\n            height: \"42px\",\r\n            cursor: \"pointer\"\r\n          }}\r\n          onClick={() => history.push(\"/profile/\"+message.data.senderWalletAddress)}\r\n          is={\"Avatar\"}\r\n          src={message.data.photoURL}\r\n          onError={({ currentTarget }) => {\r\n            currentTarget.onerror = null;\r\n            currentTarget.src =\r\n              \"https://icotar.com/initials/\" + firstName + \" \" + lastName;\r\n          }}\r\n          alt={firstName}\r\n        />\r\n      )}\r\n\r\n      <KitMessage.CustomContent>\r\n        {(position.type === \"first\" || position.type === \"single\") && (\r\n            <span style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>\r\n              <strong style={{cursor: \"pointer\"}} onClick={() => history.push(\"/profile/\" + message.data.senderWalletAddress)}>\r\n                {firstName} {lastName}\r\n                <br />\r\n              </strong>\r\n              {String(userJid).split(\"/\")[0] !== String(messageJid).split(\"/\")[0] ?\r\n                  <IconButton\r\n                      aria-label=\"more\"\r\n                      id=\"long-button\"\r\n                      aria-controls={openMenu ? 'long-menu' : undefined}\r\n                      aria-expanded={openMenu ? 'true' : undefined}\r\n                      aria-haspopup=\"true\"\r\n                      onClick={handleClickMenu}\r\n                  >\r\n                    <MoreVertIcon />\r\n                  </IconButton>\r\n              :null\r\n              }\r\n            </span>\r\n        )}\r\n\r\n        {message.data.isMediafile && message.data.mimetype.split(\"/\")[0] === \"image\"?\r\n           <KitMessage.ImageContent src={message.data.location} alt={message.data.originalName} width={200} />\r\n            :null\r\n        }\r\n\r\n        {message.data.isMediafile && message.data.mimetype.split(\"/\")[0] === \"application\"?\r\n            <a target=\"_blank\" href={message.data.location}>\r\n              <KitMessage.ImageContent src={message.data.locationPreview} alt={message.data.originalName} width={150} />\r\n              {message.data.mimetype.split(\"/\")[1]}\r\n            </a>\r\n            :null\r\n        }\r\n\r\n        {message.data.isMediafile && message.data.mimetype.split(\"/\")[0] === \"video\" ?\r\n            <video controls width=\"200px\">\r\n              <source src={message.data.location} type={message.data.mimetype} title={message.data.originalName}/>\r\n              Sorry, your browser doesn't support videos.\r\n            </video>\r\n            : null\r\n        }\r\n\r\n        {!message.data.isMediafile ?\r\n            message.body\r\n            : null\r\n        }\r\n      </KitMessage.CustomContent>\r\n\r\n      {(position.type === \"last\" || position.type === \"single\") && (\r\n        <KitMessage.Footer\r\n          sentTime={\r\n            differenceInHours(new Date(), new Date(message.date)) > 5\r\n              ? format(new Date(message.date), \"h:mm:ss a\")\r\n              : formatDistance(subDays(new Date(message.date), 0), new Date(), {\r\n                  addSuffix: true,\r\n                })\r\n          }\r\n        />\r\n      )}\r\n    </KitMessage>\r\n        {buttons ?\r\n            <div style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              width: \"max-content\",\r\n              marginLeft: \"45px\"\r\n            }}>\r\n              {buttons.map((button, index) => {\r\n                return (\r\n                  <Button onClick={() => buttonSender(button)} key={index} border>{button.name}</Button>\r\n                );\r\n             })}\r\n            </div>\r\n          : null}\r\n    <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={openMenu}\r\n        onClose={() => setAnchorEl(null)}\r\n        MenuListProps={{\r\n          'aria-labelledby': 'basic-button',\r\n        }}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n    >\r\n      <MenuItem onClick={() => openDialogMenu(\"transfer\")}>Transfer coins</MenuItem>\r\n      <MenuItem onClick={() => setAnchorEl(null)}>Direct message</MenuItem>\r\n      <MenuItem onClick={() => setAnchorEl(null)}>Ban this user</MenuItem>\r\n    </Menu>\r\n\r\n    <Dialog\r\n        fullScreen={fullScreen}\r\n        open={openDialog}\r\n        onClose={() => setOpenDialog(true)}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n    >\r\n      <DialogContent>\r\n        {dialogMenuType === \"transfer\" ?\r\n            <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n              Rewards <strong>{coinData[0].tokenName}</strong> with coins\r\n              <TextField id=\"outlined-basic\" label=\"Outlined\" type={\"number\"} variant=\"outlined\" value={coinAmount} onChange={event => setCoinAmount(event.target.value)} />\r\n              <Button onClick={sendCoins}>Send</Button>\r\n            </div>\r\n        :null\r\n        }\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setOpenDialog(false)} autoFocus>\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  </div>\r\n  );\r\n};\r\n","import {TMessageHistory} from \"../../../store\";\r\nimport React from \"react\";\r\n\r\nexport interface IMessage {\r\n    message: TMessageHistory;\r\n    userJid: string;\r\n    is?: string;\r\n}\r\n\r\nexport const SystemMessage: React.FC<IMessage> = ({message, userJid}) => {\r\n    return (\r\n        <div style={{\r\n            textAlign: \"center\",\r\n            color: \"#6ea9d7\",\r\n            fontSize: \".8em\",\r\n            boxSizing: \"border-box\",\r\n            fontFamily: \"Helvetica Neue,Segoe UI,Helvetica,Arial,sans-serif\"\r\n        }} key={message.key}>\r\n            {message.body}\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useRef, useState} from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport xmpp from \"../../xmpp\";\r\nimport { TMessageHistory, useStoreState } from \"../../store\";\r\nimport {getPublicProfile, uploadFile} from \"../../http\";\r\nimport { TProfile } from \"../Profile/types\";\r\nimport BookmarkRemoveIcon from \"@mui/icons-material/BookmarkRemove\";\r\nimport { differenceInHours, format, formatDistance, subDays } from \"date-fns\";\r\n\r\nimport {\r\n  MainContainer,\r\n  Avatar,\r\n  ChatContainer,\r\n  MessageList,\r\n  MessageInput,\r\n  Conversation,\r\n  ConversationList,\r\n  Sidebar,\r\n  Search,\r\n  ConversationHeader,\r\n  TypingIndicator,\r\n  MessageModel,\r\n} from \"@chatscope/chat-ui-kit-react\";\r\nimport {Message} from \"../../componets/Chat/Messages/Message\";\r\nimport {SystemMessage} from \"../../componets/Chat/Messages/SystemMessage\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  useMediaQuery,\r\n  useTheme\r\n} from \"@mui/material\";\r\n\r\ntype IMessagePosition = {\r\n  position: MessageModel[\"position\"];\r\n  type: string;\r\n  separator?: string;\r\n};\r\n\r\nconst getPosition = (\r\n  arr: TMessageHistory[],\r\n  message: TMessageHistory,\r\n  index: number\r\n) => {\r\n  const previousJID = arr[index - 1]?.data.senderJID?.split(\"/\")[0];\r\n  const nextJID = arr[index + 1]?.data.senderJID?.split(\"/\")[0];\r\n  const currentJID = message.data.senderJID?.split(\"/\")[0];\r\n\r\n  let result: IMessagePosition = {\r\n    position: \"single\",\r\n    type: \"single\",\r\n  };\r\n\r\n  if(arr[index - 1] && message){\r\n    if(format(new Date(arr[index - 1]?.date), \"dd\") !== format(new Date(message.date), \"dd\")){\r\n      result.separator = format(new Date(message.date), \"EEEE, dd LLLL yyyy\");\r\n    }\r\n  }\r\n\r\n  if (previousJID !== currentJID && nextJID !== currentJID) {\r\n    return result;\r\n  }\r\n\r\n  if (previousJID !== currentJID && nextJID === currentJID) {\r\n    result.position = \"first\";\r\n    result.type = \"first\";\r\n    return result;\r\n  }\r\n\r\n  if (previousJID === currentJID && nextJID === currentJID) {\r\n    result.position = \"normal\";\r\n    result.type = \"normal\";\r\n    return result;\r\n  }\r\n\r\n  if (previousJID === currentJID && nextJID !== currentJID) {\r\n    result.position = \"single\";\r\n    result.type = \"last\";\r\n    return result;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport function ChatInRoom() {\r\n  const messages = useStoreState((state) => state.historyMessages);\r\n  const user = useStoreState((store) => store.user);\r\n  const useChatRooms = useStoreState((store) => store.userChatRooms);\r\n  const loaderArchive = useStoreState((store) => store.loaderArchive);\r\n  const currentUntrackedChatRoom = useStoreState((store) => store.currentUntrackedChatRoom);\r\n  const [profile, setProfile] = useState<TProfile>();\r\n  const [myMessage, setMyMessage] = useState(\"\");\r\n  const [currentRoom, setCurrentRoom] = useState(\"\");\r\n  const [roomData, setRoomData] = useState<{\r\n    jid: string;\r\n    name: string;\r\n    room_background: string;\r\n    room_thumbnail: string;\r\n    users_cnt: string;\r\n  }>({\r\n    jid: \"\",\r\n    name: \"\",\r\n    room_background: \"\",\r\n    room_thumbnail: \"\",\r\n    users_cnt: \"\",\r\n  });\r\n  const fileRef = useRef(null);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [showDialogTxt, setShowDialogTxt] = useState(false);\r\n  const [dialogTxt, setDialogTxt] = useState<{headline: string, description: string}>({headline: \"\", description: \"\"});\r\n\r\n  const onYReachStart = () => {\r\n    if (loaderArchive) {\r\n      return;\r\n    } else {\r\n      const lastMessageID = messages.filter(\r\n        (item: any) => item.roomJID === currentRoom\r\n      )[0].id;\r\n      xmpp.getPaginatedArchive(currentRoom, String(lastMessageID), 10);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPublicProfile(user.walletAddress).then((result) => {\r\n      setProfile(result.data.result);\r\n    });\r\n  }, []);\r\n\r\n  const chooseRoom = (jid: string) => {\r\n    setCurrentRoom(jid);\r\n    setRoomData(useChatRooms.filter((e) => e.jid === jid)[0]);\r\n    useStoreState.getState().clearCounterChatRoom(jid);\r\n    useStoreState.getState().setCurrentUntrackedChatRoom(jid);\r\n\r\n    const filteredMessages = messages.filter(\r\n      (item: any) => item.roomJID === jid\r\n    );\r\n\r\n    if (!loaderArchive && filteredMessages.length <= 10 && filteredMessages.length > 0) {\r\n      const lastMessageID = filteredMessages[0].id;\r\n      xmpp.getPaginatedArchive(jid, String(lastMessageID), 10);\r\n    }\r\n  };\r\n\r\n  const getConversationInfo = (roomJID: string) => {\r\n    const messagesInRoom = messages\r\n      .filter((item: any) => item.roomJID === roomJID)\r\n      .slice(-1);\r\n    if (loaderArchive && messagesInRoom.length <= 0) {\r\n      return \"Loading...\";\r\n    }\r\n\r\n    if (messagesInRoom.length > 0) {\r\n      return messagesInRoom[0].body;\r\n    }\r\n    return \"No messages yet\";\r\n  };\r\n\r\n  const getLastActiveTime = (roomJID: string) => {\r\n    const messagesInRoom = messages\r\n      .filter((item: any) => item.roomJID === roomJID)\r\n      .slice(-1);\r\n    if (messagesInRoom.length <= 0) {\r\n      return \"\";\r\n    }\r\n\r\n    if (differenceInHours(new Date(), new Date(messagesInRoom[0].date)) > 1) {\r\n      return format(new Date(messagesInRoom[0].date), \"hh:mm\");\r\n    } else {\r\n      return formatDistance(\r\n        subDays(new Date(messagesInRoom[0].date), 0),\r\n        new Date(),\r\n        { addSuffix: true }\r\n      );\r\n    }\r\n  };\r\n\r\n  const sendMessage = (button: any) => {\r\n    let userAvatar = \"\";\r\n    if (profile?.profileImage) {\r\n      userAvatar = profile?.profileImage;\r\n    }\r\n\r\n    xmpp.sendMessage(\r\n      currentRoom,\r\n      user.firstName,\r\n      user.lastName,\r\n      userAvatar,\r\n      user.walletAddress,\r\n      typeof button === 'object' ? button.value : myMessage,\r\n        typeof button === 'object' ? button.notDisplayedValue : null\r\n    );\r\n  };\r\n\r\n  const sendFile = (file: File) => {\r\n    setDialogTxt({headline: \"File is loading, please wait...\", description: \"\"})\r\n    setOpenDialog(true);\r\n\r\n    const formData = new FormData();\r\n    formData.append('files', file);\r\n\r\n    uploadFile(formData).then(result => {\r\n      let userAvatar = \"\";\r\n      if (profile?.profileImage) {\r\n        userAvatar = profile?.profileImage;\r\n      }\r\n\r\n      result.data.results.map(async (item: any) => {\r\n        const data = {\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          walletAddress: user.walletAddress,\r\n          chatName: roomData.name,\r\n          userAvatar: userAvatar,\r\n          createdAt: item.createdAt,\r\n          expiresAt: item.expiresAt,\r\n          fileName: item.filename,\r\n          isVisible: item.isVisible,\r\n          location: item.location,\r\n          locationPreview: item.locationPreview,\r\n          mimetype: item.mimetype,\r\n          originalName: item.originalname,\r\n          ownerKey: item.ownerKey,\r\n          size: item.size,\r\n          duration: item?.duration,\r\n          updatedAt: item.updatedAt,\r\n          userId: item.userId,\r\n          waveForm: \"\",\r\n          attachmentId: item._id,\r\n          wrappable: true,\r\n        };\r\n        xmpp.sendMediaMessageStanza(currentRoom, data);\r\n        setOpenDialog(false);\r\n      });\r\n    }).catch(error => {\r\n      console.log(error);\r\n      setDialogTxt({headline: \"Error\", description: \"An error occurred while uploading the file\"})\r\n      setShowDialogTxt(true);\r\n    })\r\n    fileRef.current.value = \"\";\r\n  }\r\n\r\n  const setMessage = (value) => {\r\n    setMyMessage(value);\r\n    xmpp.isComposing(user.walletAddress, roomData.jid, user.firstName+\" \"+user.lastName);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      xmpp.pausedComposing(user.walletAddress, roomData.jid)\r\n    }, 1000);\r\n    return () => clearTimeout(timeoutId);\r\n  }, [myMessage]);\r\n\r\n  useEffect(() => {\r\n    if(currentUntrackedChatRoom){\r\n      chooseRoom(currentUntrackedChatRoom);\r\n    }\r\n\r\n    window.onblur = () => {\r\n      useStoreState.getState().setCurrentUntrackedChatRoom(\"\");\r\n    }\r\n\r\n    window.onfocus = () => {\r\n      if(currentRoom){\r\n        useStoreState.getState().setCurrentUntrackedChatRoom(currentRoom);\r\n        useStoreState.getState().clearCounterChatRoom(currentRoom);\r\n      }\r\n    }\r\n  }, [currentRoom])\r\n\r\n  return (\r\n    <Box style={{ height: \"500px\" }}>\r\n      <MainContainer responsive>\r\n        <Sidebar position=\"left\" scrollable={false}>\r\n          <Search placeholder=\"Search...\" />\r\n          <ConversationList loading={loaderArchive}>\r\n            {useChatRooms.map((room) => (\r\n              <Conversation\r\n                active={room.jid === currentRoom}\r\n                key={room.jid}\r\n                unreadCnt={room.unreadMessages}\r\n                onClick={() => chooseRoom(room.jid)}\r\n                name={room.name}\r\n                info={getConversationInfo(room.jid)}\r\n                lastActivityTime={getLastActiveTime(room.jid)}\r\n              >\r\n                <Avatar\r\n                  src={\r\n                    room.room_background !== \"none\"\r\n                      ? room.room_background\r\n                      : \"https://icotar.com/initials/\" + room.name\r\n                  }\r\n                />\r\n              </Conversation>\r\n            ))}\r\n          </ConversationList>\r\n        </Sidebar>\r\n\r\n        <ChatContainer>\r\n          {!!roomData.name && (\r\n            <ConversationHeader>\r\n              <ConversationHeader.Back />\r\n              {messages.filter((item: any) => item.roomJID === currentRoom)\r\n                .length > 0 && (\r\n                <ConversationHeader.Content\r\n                  userName={roomData.name}\r\n                  info={\r\n                    \"Active \" +\r\n                    formatDistance(\r\n                      subDays(\r\n                        new Date(\r\n                          messages\r\n                            .filter((item: any) => item.roomJID === currentRoom)\r\n                            .slice(-1)[0].date\r\n                        ),\r\n                        0\r\n                      ),\r\n                      new Date(),\r\n                      { addSuffix: true }\r\n                    )\r\n                  }\r\n                />\r\n              )}\r\n              <ConversationHeader.Actions>\r\n                <BookmarkRemoveIcon />\r\n              </ConversationHeader.Actions>\r\n            </ConversationHeader>\r\n          )}\r\n          <MessageList\r\n            loadingMore={loaderArchive}\r\n            onYReachStart={onYReachStart}\r\n            typingIndicator={\r\n              !!useChatRooms.filter((e) => e.jid === currentRoom)[0]\r\n                ?.composing && (\r\n                <TypingIndicator\r\n                  content={\r\n                    useChatRooms.filter((e) => e.jid === currentRoom)[0]\r\n                      ?.composing\r\n                  }\r\n                />\r\n              )\r\n            }\r\n          >\r\n            {messages\r\n              .filter((item: any) => item.roomJID === currentRoom)\r\n              .map((message, index, arr) => {\r\n                const position = getPosition(arr, message, index);\r\n                if(message.data.isSystemMessage === \"false\") {\r\n                  return (\r\n                      <Message\r\n                          key={message.id}\r\n                          is={\"Message\"}\r\n                          position={position}\r\n                          message={message}\r\n                          userJid={xmpp.client?.jid?.toString()}\r\n                          buttonSender={sendMessage}\r\n                      />\r\n                  );\r\n                }else{\r\n                  return (\r\n                      <SystemMessage\r\n                          is={\"Message\"}\r\n                          message={message}\r\n                          userJid={xmpp.client?.jid?.toString()}\r\n                      />\r\n                  );\r\n                }\r\n              })}\r\n            {messages.length <= 0 ||\r\n              (!currentRoom && (\r\n                <MessageList.Content\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                    height: \"100%\",\r\n                    textAlign: \"center\",\r\n                    fontSize: \"1.2em\",\r\n                  }}\r\n                >\r\n                  {!loaderArchive ? (\r\n                    <span>\r\n                      {!currentRoom &&\r\n                        \"To get started, please select a chat room.\"}\r\n                    </span>\r\n                  ) : (\r\n                    \"Loading...\"\r\n                  )}\r\n                </MessageList.Content>\r\n              ))}\r\n            {!loaderArchive &&\r\n              currentRoom &&\r\n              messages.filter((item: any) => item.roomJID === currentRoom)\r\n                .length <= 0 && (\r\n                <MessageList.Content\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                    height: \"100%\",\r\n                    textAlign: \"center\",\r\n                    fontSize: \"1.2em\",\r\n                  }}\r\n                >\r\n                  Message list is empty\r\n                </MessageList.Content>\r\n              )}\r\n          </MessageList>\r\n          {!!roomData.name && (\r\n              <div is={\"MessageInput\"}>\r\n                <MessageInput\r\n                    placeholder=\"Type message here\"\r\n                    onChange={setMessage}\r\n                    onSend={sendMessage}\r\n                    onAttachClick={() => fileRef.current.click()}\r\n                />\r\n                <input type='file' name=\"file\" id='file' onChange={event => sendFile(event.target.files[0])} ref={fileRef} style={{display: 'none'}}/>\r\n              </div>\r\n          )}\r\n        </ChatContainer>\r\n      </MainContainer>\r\n\r\n      <Dialog\r\n          fullScreen={fullScreen}\r\n          open={openDialog}\r\n          onClose={() => setOpenDialog(true)}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n          {dialogTxt.headline}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {showDialogTxt && dialogTxt.description.length > 0 ?\r\n              <DialogContentText>\r\n                {dialogTxt.description}\r\n              </DialogContentText>\r\n          :\r\n              <Box sx={{ display: 'flex', justifyContent: 'center' }}>\r\n                <CircularProgress />\r\n              </Box>\r\n          }\r\n        </DialogContent>\r\n        {showDialogTxt ?\r\n          <DialogActions>\r\n            <Button onClick={() => setOpenDialog(false)} autoFocus>\r\n              Close\r\n          </Button>\r\n        </DialogActions>\r\n        :null\r\n        }\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useStoreState } from \"../../store\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ChatInRoom } from \"./Chat\";\r\n\r\nexport default function Chat() {\r\n    const user = useStoreState((state) => state.user);\r\n    const messages = useStoreState((state) => state.messages);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (!user.firstName) {\r\n            history.push(\"/\");\r\n        }\r\n    }, [user.firstName, history]);\r\n    return (\r\n        <Container maxWidth=\"xl\" style={{ height: \"calc(100vh - 68px)\" }}>\r\n            <Box>Chat</Box>\r\n            <Box>{messages.length}</Box>\r\n            <ChatInRoom />\r\n        </Container>\r\n    );\r\n}\r\n"],"names":["Message","message","userJid","position","buttonSender","firstName","data","senderFirstName","lastName","senderLastName","messageJid","senderJID","history","useHistory","useState","buttons","setButtons","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","openDialog","setOpenDialog","React","anchorEl","setAnchorEl","dialogMenuType","setDialogMenuType","openMenu","Boolean","coinAmount","setCoinAmount","coinData","useStoreState","store","balance","filter","el","tokenType","contractAddress","length","profile","setProfile","user","useEffect","quickReplies","JSON","parse","getPublicProfile","walletAddress","then","result","is","separator","model","sender","direction","String","split","avatarPosition","avatarSpacer","type","style","borderRadius","boxSizing","width","height","cursor","onClick","push","senderWalletAddress","src","photoURL","onError","currentTarget","onerror","alt","display","justifyContent","alignItems","IconButton","id","undefined","event","MoreVert","isMediafile","mimetype","location","originalName","target","href","locationPreview","controls","title","body","sentTime","differenceInHours","Date","date","format","formatDistance","subDays","addSuffix","key","flexDirection","marginLeft","map","button","index","border","name","Menu","open","onClose","MenuListProps","anchorOrigin","vertical","horizontal","MenuItem","Dialog","DialogContent","tokenName","TextField","label","variant","value","onChange","transferCoin","tokenSymbol","Number","console","log","userAvatar","profileImage","xmpp","roomJID","catch","error","DialogActions","autoFocus","SystemMessage","textAlign","color","fontSize","fontFamily","ChatInRoom","messages","state","historyMessages","useChatRooms","userChatRooms","loaderArchive","currentUntrackedChatRoom","myMessage","setMyMessage","currentRoom","setCurrentRoom","jid","room_background","room_thumbnail","users_cnt","roomData","setRoomData","fileRef","useRef","showDialogTxt","setShowDialogTxt","headline","description","dialogTxt","setDialogTxt","chooseRoom","e","clearCounterChatRoom","setCurrentUntrackedChatRoom","filteredMessages","item","lastMessageID","getConversationInfo","messagesInRoom","slice","getLastActiveTime","sendMessage","notDisplayedValue","timeoutId","setTimeout","clearTimeout","window","onblur","onfocus","Box","responsive","scrollable","placeholder","loading","room","active","unreadCnt","unreadMessages","info","lastActivityTime","userName","BookmarkRemove","loadingMore","onYReachStart","typingIndicator","composing","content","arr","previousJID","nextJID","currentJID","getPosition","isSystemMessage","toString","onSend","onAttachClick","current","click","file","formData","FormData","append","uploadFile","results","chatName","createdAt","expiresAt","fileName","filename","isVisible","originalname","ownerKey","size","duration","updatedAt","userId","waveForm","attachmentId","_id","wrappable","sendFile","files","ref","DialogTitle","DialogContentText","sx","CircularProgress","Button","Chat","Container","maxWidth"],"sourceRoot":""}
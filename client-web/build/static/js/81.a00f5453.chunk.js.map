{"version":3,"file":"static/js/81.a00f5453.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@firebase/util/src/crypt.ts","../node_modules/@firebase/util/src/environment.ts","../node_modules/@firebase/util/src/defaults.ts","../node_modules/@firebase/util/src/deferred.ts","../node_modules/@firebase/util/src/errors.ts","../node_modules/@firebase/util/src/obj.ts","../node_modules/@firebase/util/src/utf8.ts","../node_modules/@firebase/util/src/exponential_backoff.ts","../node_modules/@firebase/util/src/compat.ts","../node_modules/@mui/icons-material/ArrowDownward.js","../node_modules/@mui/icons-material/ArrowUpward.js","../node_modules/@mui/icons-material/QrCode.js","../node_modules/@mui/material/esm/Card/cardClasses.js","../node_modules/@mui/material/esm/Card/Card.js","../node_modules/@mui/material/esm/internal/svg-icons/Cancel.js","../node_modules/@mui/material/esm/Chip/chipClasses.js","../node_modules/@mui/material/esm/Chip/Chip.js","../node_modules/@mui/material/esm/ListItemText/ListItemText.js","../node_modules/@firebase/analytics/src/constants.ts","../node_modules/@firebase/analytics/src/logger.ts","../node_modules/@firebase/analytics/src/helpers.ts","../node_modules/@firebase/analytics/src/errors.ts","../node_modules/@firebase/analytics/src/get-config.ts","../node_modules/@firebase/analytics/src/functions.ts","../node_modules/@firebase/analytics/src/initialize-analytics.ts","../node_modules/@firebase/analytics/src/factory.ts","../node_modules/@firebase/analytics/src/api.ts","../node_modules/@firebase/analytics/src/index.ts","../node_modules/firebase/app/index.ts","../node_modules/@firebase/messaging/src/util/constants.ts","../node_modules/@firebase/messaging/src/interfaces/internal-message-payload.ts","../node_modules/@firebase/messaging/src/helpers/array-base64-translator.ts","../node_modules/@firebase/messaging/src/helpers/migrate-old-database.ts","../node_modules/@firebase/messaging/src/internals/idb-manager.ts","../node_modules/@firebase/messaging/src/util/errors.ts","../node_modules/@firebase/messaging/src/internals/requests.ts","../node_modules/@firebase/messaging/src/internals/token-manager.ts","../node_modules/@firebase/messaging/src/helpers/externalizePayload.ts","../node_modules/@firebase/messaging/src/helpers/is-console-message.ts","../node_modules/@firebase/messaging/src/helpers/logToFirelog.ts","../node_modules/@firebase/messaging/src/helpers/extract-app-config.ts","../node_modules/@firebase/messaging/src/messaging-service.ts","../node_modules/@firebase/messaging/src/helpers/registerDefaultSw.ts","../node_modules/@firebase/messaging/src/helpers/updateSwReg.ts","../node_modules/@firebase/messaging/src/helpers/updateVapidKey.ts","../node_modules/@firebase/messaging/src/api/getToken.ts","../node_modules/@firebase/messaging/src/helpers/logToScion.ts","../node_modules/@firebase/messaging/src/listeners/window-listener.ts","../node_modules/@firebase/messaging/src/helpers/register.ts","../node_modules/@firebase/messaging/src/api/isSupported.ts","../node_modules/@firebase/messaging/src/api/deleteToken.ts","../node_modules/@firebase/messaging/src/api.ts","../node_modules/react-image-crop/dist/ReactCrop.min.js","../node_modules/@firebase/app/src/platformLoggerService.ts","../node_modules/@firebase/app/src/logger.ts","../node_modules/@firebase/app/src/constants.ts","../node_modules/@firebase/app/src/internal.ts","../node_modules/@firebase/app/src/errors.ts","../node_modules/@firebase/app/src/firebaseApp.ts","../node_modules/@firebase/app/src/api.ts","../node_modules/@firebase/app/src/indexeddb.ts","../node_modules/@firebase/app/src/heartbeatService.ts","../node_modules/@firebase/app/src/registerCoreComponents.ts","../node_modules/@firebase/app/src/index.ts","../node_modules/@firebase/component/src/component.ts","../node_modules/@firebase/component/src/constants.ts","../node_modules/@firebase/component/src/provider.ts","../node_modules/@firebase/component/src/component_container.ts","../node_modules/@firebase/installations/src/util/constants.ts","../node_modules/@firebase/installations/src/util/errors.ts","../node_modules/@firebase/installations/src/functions/common.ts","../node_modules/@firebase/installations/src/functions/create-installation-request.ts","../node_modules/@firebase/installations/src/util/sleep.ts","../node_modules/@firebase/installations/src/helpers/generate-fid.ts","../node_modules/@firebase/installations/src/helpers/buffer-to-base64-url-safe.ts","../node_modules/@firebase/installations/src/util/get-key.ts","../node_modules/@firebase/installations/src/helpers/fid-changed.ts","../node_modules/@firebase/installations/src/helpers/idb-manager.ts","../node_modules/@firebase/installations/src/helpers/get-installation-entry.ts","../node_modules/@firebase/installations/src/functions/generate-auth-token-request.ts","../node_modules/@firebase/installations/src/helpers/refresh-auth-token.ts","../node_modules/@firebase/installations/src/api/get-token.ts","../node_modules/@firebase/installations/src/api/get-id.ts","../node_modules/@firebase/installations/src/functions/delete-installation-request.ts","../node_modules/@firebase/installations/src/helpers/extract-app-config.ts","../node_modules/@firebase/installations/src/functions/config.ts","../node_modules/@firebase/installations/src/index.ts","../node_modules/@firebase/logger/src/logger.ts","../node_modules/idb/build/wrap-idb-value.js","../node_modules/idb/build/index.js"],"sourcesContent":["import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  return typeof indexedDB === 'object';\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './environment';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process.env.__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process.env.__FIREBASE_DEFAULTS_PATH__\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n */\nconst getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m4 12 1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 11h8V3H3v8zm2-6h4v4H5V5zM3 21h8v-8H3v8zm2-6h4v4H5v-4zm8-12v8h8V3h-8zm6 6h-4V5h4v4zm0 10h2v2h-2zm-6-6h2v2h-2zm2 2h2v2h-2zm-2 2h2v2h-2zm2 2h2v2h-2zm2-2h2v2h-2zm0-4h2v2h-2zm2 2h2v2h-2z\"\n}), 'QrCode');\n\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getChipUtilityClass(slot) {\n  return generateUtilityClass('MuiChip', slot);\n}\nconst chipClasses = generateUtilityClasses('MuiChip', ['root', 'sizeSmall', 'sizeMedium', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'disabled', 'clickable', 'clickableColorPrimary', 'clickableColorSecondary', 'deletable', 'deletableColorPrimary', 'deletableColorSecondary', 'outlined', 'filled', 'outlinedPrimary', 'outlinedSecondary', 'filledPrimary', 'filledSecondary', 'avatar', 'avatarSmall', 'avatarMedium', 'avatarColorPrimary', 'avatarColorSecondary', 'icon', 'iconSmall', 'iconMedium', 'iconColorPrimary', 'iconColorSecondary', 'label', 'labelSmall', 'labelMedium', 'deleteIcon', 'deleteIconSmall', 'deleteIconMedium', 'deleteIconColorPrimary', 'deleteIconColorSecondary', 'deleteIconOutlinedColorPrimary', 'deleteIconOutlinedColorSecondary', 'deleteIconFilledColorPrimary', 'deleteIconFilledColorSecondary', 'focusVisible']);\nexport default chipClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"avatar\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport chipClasses, { getChipUtilityClass } from './chipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    size,\n    color,\n    iconColor,\n    onDelete,\n    clickable,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, disabled && 'disabled', `size${capitalize(size)}`, `color${capitalize(color)}`, clickable && 'clickable', clickable && `clickableColor${capitalize(color)}`, onDelete && 'deletable', onDelete && `deletableColor${capitalize(color)}`, `${variant}${capitalize(color)}`],\n    label: ['label', `label${capitalize(size)}`],\n    avatar: ['avatar', `avatar${capitalize(size)}`, `avatarColor${capitalize(color)}`],\n    icon: ['icon', `icon${capitalize(size)}`, `iconColor${capitalize(iconColor)}`],\n    deleteIcon: ['deleteIcon', `deleteIcon${capitalize(size)}`, `deleteIconColor${capitalize(color)}`, `deleteIcon${capitalize(variant)}Color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getChipUtilityClass, classes);\n};\nconst ChipRoot = styled('div', {\n  name: 'MuiChip',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      color,\n      iconColor,\n      clickable,\n      onDelete,\n      size,\n      variant\n    } = ownerState;\n    return [{\n      [`& .${chipClasses.avatar}`]: styles.avatar\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatar${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatarColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles.icon\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`icon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`iconColor${capitalize(iconColor)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles.deleteIcon\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(variant)}Color${capitalize(color)}`]\n    }, styles.root, styles[`size${capitalize(size)}`], styles[`color${capitalize(color)}`], clickable && styles.clickable, clickable && color !== 'default' && styles[`clickableColor${capitalize(color)})`], onDelete && styles.deletable, onDelete && color !== 'default' && styles[`deletableColor${capitalize(color)}`], styles[variant], styles[`${variant}${capitalize(color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  const textColor = theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300];\n  return _extends({\n    maxWidth: '100%',\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(13),\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 32,\n    color: (theme.vars || theme).palette.text.primary,\n    backgroundColor: (theme.vars || theme).palette.action.selected,\n    borderRadius: 32 / 2,\n    whiteSpace: 'nowrap',\n    transition: theme.transitions.create(['background-color', 'box-shadow']),\n    // label will inherit this from root, then `clickable` class overrides this for both\n    cursor: 'default',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    textDecoration: 'none',\n    border: 0,\n    // Remove `button` border\n    padding: 0,\n    // Remove `button` padding\n    verticalAlign: 'middle',\n    boxSizing: 'border-box',\n    [`&.${chipClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`& .${chipClasses.avatar}`]: {\n      marginLeft: 5,\n      marginRight: -6,\n      width: 24,\n      height: 24,\n      color: theme.vars ? theme.vars.palette.Chip.defaultAvatarColor : textColor,\n      fontSize: theme.typography.pxToRem(12)\n    },\n    [`& .${chipClasses.avatarColorPrimary}`]: {\n      color: (theme.vars || theme).palette.primary.contrastText,\n      backgroundColor: (theme.vars || theme).palette.primary.dark\n    },\n    [`& .${chipClasses.avatarColorSecondary}`]: {\n      color: (theme.vars || theme).palette.secondary.contrastText,\n      backgroundColor: (theme.vars || theme).palette.secondary.dark\n    },\n    [`& .${chipClasses.avatarSmall}`]: {\n      marginLeft: 4,\n      marginRight: -4,\n      width: 18,\n      height: 18,\n      fontSize: theme.typography.pxToRem(10)\n    },\n    [`& .${chipClasses.icon}`]: _extends({\n      marginLeft: 5,\n      marginRight: -6\n    }, ownerState.size === 'small' && {\n      fontSize: 18,\n      marginLeft: 4,\n      marginRight: -4\n    }, ownerState.iconColor === ownerState.color && _extends({\n      color: theme.vars ? theme.vars.palette.Chip.defaultIconColor : textColor\n    }, ownerState.color !== 'default' && {\n      color: 'inherit'\n    })),\n    [`& .${chipClasses.deleteIcon}`]: _extends({\n      WebkitTapHighlightColor: 'transparent',\n      color: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.26)` : deleteIconColor,\n      fontSize: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.4)` : alpha(deleteIconColor, 0.4)\n      }\n    }, ownerState.size === 'small' && {\n      fontSize: 16,\n      marginRight: 4,\n      marginLeft: -4\n    }, ownerState.color !== 'default' && {\n      color: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].contrastTextChannel} / 0.7)` : alpha(theme.palette[ownerState.color].contrastText, 0.7),\n      '&:hover, &:active': {\n        color: (theme.vars || theme).palette[ownerState.color].contrastText\n      }\n    })\n  }, ownerState.size === 'small' && {\n    height: 24\n  }, ownerState.color !== 'default' && {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n    color: (theme.vars || theme).palette[ownerState.color].contrastText\n  }, ownerState.onDelete && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity + theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  }, ownerState.onDelete && ownerState.color !== 'default' && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark\n    }\n  });\n}, ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.clickable && {\n  userSelect: 'none',\n  WebkitTapHighlightColor: 'transparent',\n  cursor: 'pointer',\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity + theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity + theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  },\n  '&:active': {\n    boxShadow: (theme.vars || theme).shadows[1]\n  }\n}, ownerState.clickable && ownerState.color !== 'default' && {\n  [`&:hover, &.${chipClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].dark\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.variant === 'outlined' && {\n  backgroundColor: 'transparent',\n  border: theme.vars ? `1px solid ${theme.vars.palette.Chip.defaultBorder}` : `1px solid ${theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[700]}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: (theme.vars || theme).palette.action.hover\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`& .${chipClasses.avatar}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.avatarSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.icon}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.iconSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    marginRight: 5\n  },\n  [`& .${chipClasses.deleteIconSmall}`]: {\n    marginRight: 3\n  }\n}, ownerState.variant === 'outlined' && ownerState.color !== 'default' && {\n  color: (theme.vars || theme).palette[ownerState.color].main,\n  border: `1px solid ${theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.7)` : alpha(theme.palette[ownerState.color].main, 0.7)}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.focusOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.focusOpacity)\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    color: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.7)` : alpha(theme.palette[ownerState.color].main, 0.7),\n    '&:hover, &:active': {\n      color: (theme.vars || theme).palette[ownerState.color].main\n    }\n  }\n}));\nconst ChipLabel = styled('span', {\n  name: 'MuiChip',\n  slot: 'Label',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      size\n    } = ownerState;\n    return [styles.label, styles[`label${capitalize(size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  paddingLeft: 12,\n  paddingRight: 12,\n  whiteSpace: 'nowrap'\n}, ownerState.size === 'small' && {\n  paddingLeft: 8,\n  paddingRight: 8\n}));\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\nconst Chip = /*#__PURE__*/React.forwardRef(function Chip(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiChip'\n  });\n  const {\n      avatar: avatarProp,\n      className,\n      clickable: clickableProp,\n      color = 'default',\n      component: ComponentProp,\n      deleteIcon: deleteIconProp,\n      disabled = false,\n      icon: iconProp,\n      label,\n      onClick,\n      onDelete,\n      onKeyDown,\n      onKeyUp,\n      size = 'medium',\n      variant = 'filled'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const chipRef = React.useRef(null);\n  const handleRef = useForkRef(chipRef, ref);\n  const handleDeleteIconClick = event => {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n  const handleKeyDown = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // Will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n  const handleKeyUp = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n  const clickable = clickableProp !== false && onClick ? true : clickableProp;\n  const component = clickable || onDelete ? ButtonBase : ComponentProp || 'div';\n  const ownerState = _extends({}, props, {\n    component,\n    disabled,\n    size,\n    color,\n    iconColor: /*#__PURE__*/React.isValidElement(iconProp) ? iconProp.props.color || color : color,\n    onDelete: !!onDelete,\n    clickable,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const moreProps = component === ButtonBase ? _extends({\n    component: ComponentProp || 'div',\n    focusVisibleClassName: classes.focusVisible\n  }, onDelete && {\n    disableRipple: true\n  }) : {};\n  let deleteIcon = null;\n  if (onDelete) {\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/_jsx(CancelIcon, {\n      className: clsx(classes.deleteIcon),\n      onClick: handleDeleteIconClick\n    });\n  }\n  let avatar = null;\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className)\n    });\n  }\n  let icon = null;\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className)\n    });\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('MUI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(ChipRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    disabled: clickable && disabled ? true : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef,\n    ownerState: ownerState\n  }, moreProps, other, {\n    children: [avatar || icon, /*#__PURE__*/_jsx(ChipLabel, {\n      className: clsx(classes.label),\n      ownerState: ownerState,\n      children: label\n    }), deleteIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.element,\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If `false`, the chip will not appear clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   * Note: this controls the UI and does not affect the onClick event.\n   */\n  clickable: PropTypes.bool,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n  /**\n   * The content of the component.\n   */\n  label: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * Callback fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'filled'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Chip;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n      children,\n      className,\n      disableTypography = false,\n      inset = false,\n      primary: primaryProp,\n      primaryTypographyProps,\n      secondary: secondaryProp,\n      secondaryTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps != null && primaryTypographyProps.variant ? undefined : 'span',\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type constant for Firebase Analytics.\n */\nexport const ANALYTICS_TYPE = 'analytics';\n\n// Key to attach FID to in gtag params.\nexport const GA_FID_KEY = 'firebase_id';\nexport const ORIGIN_KEY = 'origin';\n\nexport const FETCH_TIMEOUT_MILLIS = 60 * 1000;\n\nexport const DYNAMIC_CONFIG_URL =\n  'https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig';\n\nexport const GTAG_URL = 'https://www.googletagmanager.com/gtag/js';\n\nexport const enum GtagCommand {\n  EVENT = 'event',\n  SET = 'set',\n  CONFIG = 'config',\n  CONSENT = 'consent'\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/analytics');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CustomParams,\n  ControlParams,\n  EventParams,\n  ConsentSettings\n} from './public-types';\nimport { DynamicConfig, DataLayer, Gtag, MinimalDynamicConfig } from './types';\nimport { GtagCommand, GTAG_URL } from './constants';\nimport { logger } from './logger';\n\n// Possible parameter types for gtag 'event' and 'config' commands\ntype GtagConfigOrEventParams = ControlParams & EventParams & CustomParams;\n\n/**\n * Makeshift polyfill for Promise.allSettled(). Resolves when all promises\n * have either resolved or rejected.\n *\n * @param promises Array of promises to wait for.\n */\nexport function promiseAllSettled<T>(\n  promises: Array<Promise<T>>\n): Promise<T[]> {\n  return Promise.all(promises.map(promise => promise.catch(e => e)));\n}\n\n/**\n * Inserts gtag script tag into the page to asynchronously download gtag.\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\n */\nexport function insertScriptTag(\n  dataLayerName: string,\n  measurementId: string\n): void {\n  const script = document.createElement('script');\n  // We are not providing an analyticsId in the URL because it would trigger a `page_view`\n  // without fid. We will initialize ga-id using gtag (config) command together with fid.\n  script.src = `${GTAG_URL}?l=${dataLayerName}&id=${measurementId}`;\n  script.async = true;\n  document.head.appendChild(script);\n}\n\n/**\n * Get reference to, or create, global datalayer.\n * @param dataLayerName Name of datalayer (most often the default, \"_dataLayer\").\n */\nexport function getOrCreateDataLayer(dataLayerName: string): DataLayer {\n  // Check for existing dataLayer and create if needed.\n  let dataLayer: DataLayer = [];\n  if (Array.isArray(window[dataLayerName])) {\n    dataLayer = window[dataLayerName] as DataLayer;\n  } else {\n    window[dataLayerName] = dataLayer;\n  }\n  return dataLayer;\n}\n\n/**\n * Wrapped gtag logic when gtag is called with 'config' command.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n * @param measurementId GA Measurement ID to set config for.\n * @param gtagParams Gtag config params to set.\n */\nasync function gtagOnConfig(\n  gtagCore: Gtag,\n  initializationPromisesMap: { [appId: string]: Promise<string> },\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  measurementIdToAppId: { [measurementId: string]: string },\n  measurementId: string,\n  gtagParams?: ControlParams & EventParams & CustomParams\n): Promise<void> {\n  // If config is already fetched, we know the appId and can use it to look up what FID promise we\n  /// are waiting for, and wait only on that one.\n  const correspondingAppId = measurementIdToAppId[measurementId as string];\n  try {\n    if (correspondingAppId) {\n      await initializationPromisesMap[correspondingAppId];\n    } else {\n      // If config is not fetched yet, wait for all configs (we don't know which one we need) and\n      // find the appId (if any) corresponding to this measurementId. If there is one, wait on\n      // that appId's initialization promise. If there is none, promise resolves and gtag\n      // call goes through.\n      const dynamicConfigResults = await promiseAllSettled(\n        dynamicConfigPromisesList\n      );\n      const foundConfig = dynamicConfigResults.find(\n        config => config.measurementId === measurementId\n      );\n      if (foundConfig) {\n        await initializationPromisesMap[foundConfig.appId];\n      }\n    }\n  } catch (e) {\n    logger.error(e);\n  }\n  gtagCore(GtagCommand.CONFIG, measurementId, gtagParams);\n}\n\n/**\n * Wrapped gtag logic when gtag is called with 'event' command.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementId GA Measurement ID to log event to.\n * @param gtagParams Params to log with this event.\n */\nasync function gtagOnEvent(\n  gtagCore: Gtag,\n  initializationPromisesMap: { [appId: string]: Promise<string> },\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  measurementId: string,\n  gtagParams?: ControlParams & EventParams & CustomParams\n): Promise<void> {\n  try {\n    let initializationPromisesToWaitFor: Array<Promise<string>> = [];\n\n    // If there's a 'send_to' param, check if any ID specified matches\n    // an initializeIds() promise we are waiting for.\n    if (gtagParams && gtagParams['send_to']) {\n      let gaSendToList: string | string[] = gtagParams['send_to'];\n      // Make it an array if is isn't, so it can be dealt with the same way.\n      if (!Array.isArray(gaSendToList)) {\n        gaSendToList = [gaSendToList];\n      }\n      // Checking 'send_to' fields requires having all measurement ID results back from\n      // the dynamic config fetch.\n      const dynamicConfigResults = await promiseAllSettled(\n        dynamicConfigPromisesList\n      );\n      for (const sendToId of gaSendToList) {\n        // Any fetched dynamic measurement ID that matches this 'send_to' ID\n        const foundConfig = dynamicConfigResults.find(\n          config => config.measurementId === sendToId\n        );\n        const initializationPromise =\n          foundConfig && initializationPromisesMap[foundConfig.appId];\n        if (initializationPromise) {\n          initializationPromisesToWaitFor.push(initializationPromise);\n        } else {\n          // Found an item in 'send_to' that is not associated\n          // directly with an FID, possibly a group.  Empty this array,\n          // exit the loop early, and let it get populated below.\n          initializationPromisesToWaitFor = [];\n          break;\n        }\n      }\n    }\n\n    // This will be unpopulated if there was no 'send_to' field , or\n    // if not all entries in the 'send_to' field could be mapped to\n    // a FID. In these cases, wait on all pending initialization promises.\n    if (initializationPromisesToWaitFor.length === 0) {\n      initializationPromisesToWaitFor = Object.values(\n        initializationPromisesMap\n      );\n    }\n\n    // Run core gtag function with args after all relevant initialization\n    // promises have been resolved.\n    await Promise.all(initializationPromisesToWaitFor);\n    // Workaround for http://b/141370449 - third argument cannot be undefined.\n    gtagCore(GtagCommand.EVENT, measurementId, gtagParams || {});\n  } catch (e) {\n    logger.error(e);\n  }\n}\n\n/**\n * Wraps a standard gtag function with extra code to wait for completion of\n * relevant initialization promises before sending requests.\n *\n * @param gtagCore Basic gtag function that just appends to dataLayer.\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n */\nfunction wrapGtag(\n  gtagCore: Gtag,\n  /**\n   * Allows wrapped gtag calls to wait on whichever intialization promises are required,\n   * depending on the contents of the gtag params' `send_to` field, if any.\n   */\n  initializationPromisesMap: { [appId: string]: Promise<string> },\n  /**\n   * Wrapped gtag calls sometimes require all dynamic config fetches to have returned\n   * before determining what initialization promises (which include FIDs) to wait for.\n   */\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  /**\n   * Wrapped gtag config calls can narrow down which initialization promise (with FID)\n   * to wait for if the measurementId is already fetched, by getting the corresponding appId,\n   * which is the key for the initialization promises map.\n   */\n  measurementIdToAppId: { [measurementId: string]: string }\n): Gtag {\n  /**\n   * Wrapper around gtag that ensures FID is sent with gtag calls.\n   * @param command Gtag command type.\n   * @param idOrNameOrParams Measurement ID if command is EVENT/CONFIG, params if command is SET.\n   * @param gtagParams Params if event is EVENT/CONFIG.\n   */\n  async function gtagWrapper(\n    command: 'config' | 'set' | 'event' | 'consent',\n    idOrNameOrParams: string | ControlParams,\n    gtagParams?: GtagConfigOrEventParams | ConsentSettings\n  ): Promise<void> {\n    try {\n      // If event, check that relevant initialization promises have completed.\n      if (command === GtagCommand.EVENT) {\n        // If EVENT, second arg must be measurementId.\n        await gtagOnEvent(\n          gtagCore,\n          initializationPromisesMap,\n          dynamicConfigPromisesList,\n          idOrNameOrParams as string,\n          gtagParams as GtagConfigOrEventParams\n        );\n      } else if (command === GtagCommand.CONFIG) {\n        // If CONFIG, second arg must be measurementId.\n        await gtagOnConfig(\n          gtagCore,\n          initializationPromisesMap,\n          dynamicConfigPromisesList,\n          measurementIdToAppId,\n          idOrNameOrParams as string,\n          gtagParams as GtagConfigOrEventParams\n        );\n      } else if (command === GtagCommand.CONSENT) {\n        // If CONFIG, second arg must be measurementId.\n        gtagCore(GtagCommand.CONSENT, 'update', gtagParams as ConsentSettings);\n      } else {\n        // If SET, second arg must be params.\n        gtagCore(GtagCommand.SET, idOrNameOrParams as CustomParams);\n      }\n    } catch (e) {\n      logger.error(e);\n    }\n  }\n  return gtagWrapper as Gtag;\n}\n\n/**\n * Creates global gtag function or wraps existing one if found.\n * This wrapped function attaches Firebase instance ID (FID) to gtag 'config' and\n * 'event' calls that belong to the GAID associated with this Firebase instance.\n *\n * @param initializationPromisesMap Map of appIds to their initialization promises.\n * @param dynamicConfigPromisesList Array of dynamic config fetch promises.\n * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.\n * @param dataLayerName Name of global GA datalayer array.\n * @param gtagFunctionName Name of global gtag function (\"gtag\" if not user-specified).\n */\nexport function wrapOrCreateGtag(\n  initializationPromisesMap: { [appId: string]: Promise<string> },\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  measurementIdToAppId: { [measurementId: string]: string },\n  dataLayerName: string,\n  gtagFunctionName: string\n): {\n  gtagCore: Gtag;\n  wrappedGtag: Gtag;\n} {\n  // Create a basic core gtag function\n  let gtagCore: Gtag = function (..._args: unknown[]) {\n    // Must push IArguments object, not an array.\n    (window[dataLayerName] as DataLayer).push(arguments);\n  };\n\n  // Replace it with existing one if found\n  if (\n    window[gtagFunctionName] &&\n    typeof window[gtagFunctionName] === 'function'\n  ) {\n    // @ts-ignore\n    gtagCore = window[gtagFunctionName];\n  }\n\n  window[gtagFunctionName] = wrapGtag(\n    gtagCore,\n    initializationPromisesMap,\n    dynamicConfigPromisesList,\n    measurementIdToAppId\n  );\n\n  return {\n    gtagCore,\n    wrappedGtag: window[gtagFunctionName] as Gtag\n  };\n}\n\n/**\n * Returns the script tag in the DOM matching both the gtag url pattern\n * and the provided data layer name.\n */\nexport function findGtagScriptOnPage(\n  dataLayerName: string\n): HTMLScriptElement | null {\n  const scriptTags = window.document.getElementsByTagName('script');\n  for (const tag of Object.values(scriptTags)) {\n    if (\n      tag.src &&\n      tag.src.includes(GTAG_URL) &&\n      tag.src.includes(dataLayerName)\n    ) {\n      return tag;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AnalyticsError {\n  ALREADY_EXISTS = 'already-exists',\n  ALREADY_INITIALIZED = 'already-initialized',\n  ALREADY_INITIALIZED_SETTINGS = 'already-initialized-settings',\n  INTEROP_COMPONENT_REG_FAILED = 'interop-component-reg-failed',\n  INVALID_ANALYTICS_CONTEXT = 'invalid-analytics-context',\n  INDEXEDDB_UNAVAILABLE = 'indexeddb-unavailable',\n  FETCH_THROTTLE = 'fetch-throttle',\n  CONFIG_FETCH_FAILED = 'config-fetch-failed',\n  NO_API_KEY = 'no-api-key',\n  NO_APP_ID = 'no-app-id'\n}\n\nconst ERRORS: ErrorMap<AnalyticsError> = {\n  [AnalyticsError.ALREADY_EXISTS]:\n    'A Firebase Analytics instance with the appId {$id} ' +\n    ' already exists. ' +\n    'Only one Firebase Analytics instance can be created for each appId.',\n  [AnalyticsError.ALREADY_INITIALIZED]:\n    'initializeAnalytics() cannot be called again with different options than those ' +\n    'it was initially called with. It can be called again with the same options to ' +\n    'return the existing instance, or getAnalytics() can be used ' +\n    'to get a reference to the already-intialized instance.',\n  [AnalyticsError.ALREADY_INITIALIZED_SETTINGS]:\n    'Firebase Analytics has already been initialized.' +\n    'settings() must be called before initializing any Analytics instance' +\n    'or it will have no effect.',\n  [AnalyticsError.INTEROP_COMPONENT_REG_FAILED]:\n    'Firebase Analytics Interop Component failed to instantiate: {$reason}',\n  [AnalyticsError.INVALID_ANALYTICS_CONTEXT]:\n    'Firebase Analytics is not supported in this environment. ' +\n    'Wrap initialization of analytics in analytics.isSupported() ' +\n    'to prevent initialization in unsupported environments. Details: {$errorInfo}',\n  [AnalyticsError.INDEXEDDB_UNAVAILABLE]:\n    'IndexedDB unavailable or restricted in this environment. ' +\n    'Wrap initialization of analytics in analytics.isSupported() ' +\n    'to prevent initialization in unsupported environments. Details: {$errorInfo}',\n  [AnalyticsError.FETCH_THROTTLE]:\n    'The config fetch request timed out while in an exponential backoff state.' +\n    ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\n  [AnalyticsError.CONFIG_FETCH_FAILED]:\n    'Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}',\n  [AnalyticsError.NO_API_KEY]:\n    'The \"apiKey\" field is empty in the local Firebase config. Firebase Analytics requires this field to' +\n    'contain a valid API key.',\n  [AnalyticsError.NO_APP_ID]:\n    'The \"appId\" field is empty in the local Firebase config. Firebase Analytics requires this field to' +\n    'contain a valid app ID.'\n};\n\ninterface ErrorParams {\n  [AnalyticsError.ALREADY_EXISTS]: { id: string };\n  [AnalyticsError.INTEROP_COMPONENT_REG_FAILED]: { reason: Error };\n  [AnalyticsError.FETCH_THROTTLE]: { throttleEndTimeMillis: number };\n  [AnalyticsError.CONFIG_FETCH_FAILED]: {\n    httpStatus: number;\n    responseMessage: string;\n  };\n  [AnalyticsError.INVALID_ANALYTICS_CONTEXT]: { errorInfo: string };\n  [AnalyticsError.INDEXEDDB_UNAVAILABLE]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AnalyticsError, ErrorParams>(\n  'analytics',\n  'Analytics',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Most logic is copied from packages/remote-config/src/client/retrying_client.ts\n */\n\nimport { FirebaseApp } from '@firebase/app';\nimport { DynamicConfig, ThrottleMetadata, MinimalDynamicConfig } from './types';\nimport { FirebaseError, calculateBackoffMillis } from '@firebase/util';\nimport { AnalyticsError, ERROR_FACTORY } from './errors';\nimport { DYNAMIC_CONFIG_URL, FETCH_TIMEOUT_MILLIS } from './constants';\nimport { logger } from './logger';\n\n// App config fields needed by analytics.\nexport interface AppFields {\n  appId: string;\n  apiKey: string;\n  measurementId?: string;\n}\n\n/**\n * Backoff factor for 503 errors, which we want to be conservative about\n * to avoid overloading servers. Each retry interval will be\n * BASE_INTERVAL_MILLIS * LONG_RETRY_FACTOR ^ retryCount, so the second one\n * will be ~30 seconds (with fuzzing).\n */\nexport const LONG_RETRY_FACTOR = 30;\n\n/**\n * Base wait interval to multiplied by backoffFactor^backoffCount.\n */\nconst BASE_INTERVAL_MILLIS = 1000;\n\n/**\n * Stubbable retry data storage class.\n */\nclass RetryData {\n  constructor(\n    public throttleMetadata: { [appId: string]: ThrottleMetadata } = {},\n    public intervalMillis: number = BASE_INTERVAL_MILLIS\n  ) {}\n\n  getThrottleMetadata(appId: string): ThrottleMetadata {\n    return this.throttleMetadata[appId];\n  }\n\n  setThrottleMetadata(appId: string, metadata: ThrottleMetadata): void {\n    this.throttleMetadata[appId] = metadata;\n  }\n\n  deleteThrottleMetadata(appId: string): void {\n    delete this.throttleMetadata[appId];\n  }\n}\n\nconst defaultRetryData = new RetryData();\n\n/**\n * Set GET request headers.\n * @param apiKey App API key.\n */\nfunction getHeaders(apiKey: string): Headers {\n  return new Headers({\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\n/**\n * Fetches dynamic config from backend.\n * @param app Firebase app to fetch config for.\n */\nexport async function fetchDynamicConfig(\n  appFields: AppFields\n): Promise<DynamicConfig> {\n  const { appId, apiKey } = appFields;\n  const request: RequestInit = {\n    method: 'GET',\n    headers: getHeaders(apiKey)\n  };\n  const appUrl = DYNAMIC_CONFIG_URL.replace('{app-id}', appId);\n  const response = await fetch(appUrl, request);\n  if (response.status !== 200 && response.status !== 304) {\n    let errorMessage = '';\n    try {\n      // Try to get any error message text from server response.\n      const jsonResponse = (await response.json()) as {\n        error?: { message?: string };\n      };\n      if (jsonResponse.error?.message) {\n        errorMessage = jsonResponse.error.message;\n      }\n    } catch (_ignored) {}\n    throw ERROR_FACTORY.create(AnalyticsError.CONFIG_FETCH_FAILED, {\n      httpStatus: response.status,\n      responseMessage: errorMessage\n    });\n  }\n  return response.json();\n}\n\n/**\n * Fetches dynamic config from backend, retrying if failed.\n * @param app Firebase app to fetch config for.\n */\nexport async function fetchDynamicConfigWithRetry(\n  app: FirebaseApp,\n  // retryData and timeoutMillis are parameterized to allow passing a different value for testing.\n  retryData: RetryData = defaultRetryData,\n  timeoutMillis?: number\n): Promise<DynamicConfig | MinimalDynamicConfig> {\n  const { appId, apiKey, measurementId } = app.options;\n\n  if (!appId) {\n    throw ERROR_FACTORY.create(AnalyticsError.NO_APP_ID);\n  }\n\n  if (!apiKey) {\n    if (measurementId) {\n      return {\n        measurementId,\n        appId\n      };\n    }\n    throw ERROR_FACTORY.create(AnalyticsError.NO_API_KEY);\n  }\n\n  const throttleMetadata: ThrottleMetadata = retryData.getThrottleMetadata(\n    appId\n  ) || {\n    backoffCount: 0,\n    throttleEndTimeMillis: Date.now()\n  };\n\n  const signal = new AnalyticsAbortSignal();\n\n  setTimeout(\n    async () => {\n      // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\n      signal.abort();\n    },\n    timeoutMillis !== undefined ? timeoutMillis : FETCH_TIMEOUT_MILLIS\n  );\n\n  return attemptFetchDynamicConfigWithRetry(\n    { appId, apiKey, measurementId },\n    throttleMetadata,\n    signal,\n    retryData\n  );\n}\n\n/**\n * Runs one retry attempt.\n * @param appFields Necessary app config fields.\n * @param throttleMetadata Ongoing metadata to determine throttling times.\n * @param signal Abort signal.\n */\nasync function attemptFetchDynamicConfigWithRetry(\n  appFields: AppFields,\n  { throttleEndTimeMillis, backoffCount }: ThrottleMetadata,\n  signal: AnalyticsAbortSignal,\n  retryData: RetryData = defaultRetryData // for testing\n): Promise<DynamicConfig | MinimalDynamicConfig> {\n  const { appId, measurementId } = appFields;\n  // Starts with a (potentially zero) timeout to support resumption from stored state.\n  // Ensures the throttle end time is honored if the last attempt timed out.\n  // Note the SDK will never make a request if the fetch timeout expires at this point.\n  try {\n    await setAbortableTimeout(signal, throttleEndTimeMillis);\n  } catch (e) {\n    if (measurementId) {\n      logger.warn(\n        `Timed out fetching this Firebase app's measurement ID from the server.` +\n          ` Falling back to the measurement ID ${measurementId}` +\n          ` provided in the \"measurementId\" field in the local Firebase config. [${\n            (e as Error)?.message\n          }]`\n      );\n      return { appId, measurementId };\n    }\n    throw e;\n  }\n\n  try {\n    const response = await fetchDynamicConfig(appFields);\n\n    // Note the SDK only clears throttle state if response is success or non-retriable.\n    retryData.deleteThrottleMetadata(appId);\n\n    return response;\n  } catch (e) {\n    const error = e as Error;\n    if (!isRetriableError(error)) {\n      retryData.deleteThrottleMetadata(appId);\n      if (measurementId) {\n        logger.warn(\n          `Failed to fetch this Firebase app's measurement ID from the server.` +\n            ` Falling back to the measurement ID ${measurementId}` +\n            ` provided in the \"measurementId\" field in the local Firebase config. [${error?.message}]`\n        );\n        return { appId, measurementId };\n      } else {\n        throw e;\n      }\n    }\n\n    const backoffMillis =\n      Number(error?.customData?.httpStatus) === 503\n        ? calculateBackoffMillis(\n            backoffCount,\n            retryData.intervalMillis,\n            LONG_RETRY_FACTOR\n          )\n        : calculateBackoffMillis(backoffCount, retryData.intervalMillis);\n\n    // Increments backoff state.\n    const throttleMetadata = {\n      throttleEndTimeMillis: Date.now() + backoffMillis,\n      backoffCount: backoffCount + 1\n    };\n\n    // Persists state.\n    retryData.setThrottleMetadata(appId, throttleMetadata);\n    logger.debug(`Calling attemptFetch again in ${backoffMillis} millis`);\n\n    return attemptFetchDynamicConfigWithRetry(\n      appFields,\n      throttleMetadata,\n      signal,\n      retryData\n    );\n  }\n}\n\n/**\n * Supports waiting on a backoff by:\n *\n * <ul>\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\n *       request appear the same.</li>\n * </ul>\n *\n * <p>Visible for testing.\n */\nfunction setAbortableTimeout(\n  signal: AnalyticsAbortSignal,\n  throttleEndTimeMillis: number\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    // Derives backoff from given end time, normalizing negative numbers to zero.\n    const backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\n\n    const timeout = setTimeout(resolve, backoffMillis);\n\n    // Adds listener, rather than sets onabort, because signal is a shared object.\n    signal.addEventListener(() => {\n      clearTimeout(timeout);\n      // If the request completes before this timeout, the rejection has no effect.\n      reject(\n        ERROR_FACTORY.create(AnalyticsError.FETCH_THROTTLE, {\n          throttleEndTimeMillis\n        })\n      );\n    });\n  });\n}\n\ntype RetriableError = FirebaseError & { customData: { httpStatus: string } };\n\n/**\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\n */\nfunction isRetriableError(e: Error): e is RetriableError {\n  if (!(e instanceof FirebaseError) || !e.customData) {\n    return false;\n  }\n\n  // Uses string index defined by ErrorData, which FirebaseError implements.\n  const httpStatus = Number(e.customData['httpStatus']);\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\n/**\n * Shims a minimal AbortSignal (copied from Remote Config).\n *\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\n * swapped out if/when we do.\n */\nexport class AnalyticsAbortSignal {\n  listeners: Array<() => void> = [];\n  addEventListener(listener: () => void): void {\n    this.listeners.push(listener);\n  }\n  abort(): void {\n    this.listeners.forEach(listener => listener());\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnalyticsCallOptions,\n  CustomParams,\n  ControlParams,\n  EventParams,\n  ConsentSettings\n} from './public-types';\nimport { Gtag } from './types';\nimport { GtagCommand } from './constants';\n\n/**\n * Event parameters to set on 'gtag' during initialization.\n */\nexport let defaultEventParametersForInit: CustomParams | undefined;\n\n/**\n * Logs an analytics event through the Firebase SDK.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param eventName Google Analytics event name, choose from standard list or use a custom string.\n * @param eventParams Analytics event parameters.\n */\nexport async function logEvent(\n  gtagFunction: Gtag,\n  initializationPromise: Promise<string>,\n  eventName: string,\n  eventParams?: EventParams,\n  options?: AnalyticsCallOptions\n): Promise<void> {\n  if (options && options.global) {\n    gtagFunction(GtagCommand.EVENT, eventName, eventParams);\n    return;\n  } else {\n    const measurementId = await initializationPromise;\n    const params: EventParams | ControlParams = {\n      ...eventParams,\n      'send_to': measurementId\n    };\n    gtagFunction(GtagCommand.EVENT, eventName, params);\n  }\n}\n\n/**\n * Set screen_name parameter for this Google Analytics ID.\n *\n * @deprecated Use {@link logEvent} with `eventName` as 'screen_view' and add relevant `eventParams`.\n * See {@link https://firebase.google.com/docs/analytics/screenviews | Track Screenviews}.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param screenName Screen name string to set.\n */\nexport async function setCurrentScreen(\n  gtagFunction: Gtag,\n  initializationPromise: Promise<string>,\n  screenName: string | null,\n  options?: AnalyticsCallOptions\n): Promise<void> {\n  if (options && options.global) {\n    gtagFunction(GtagCommand.SET, { 'screen_name': screenName });\n    return Promise.resolve();\n  } else {\n    const measurementId = await initializationPromise;\n    gtagFunction(GtagCommand.CONFIG, measurementId, {\n      update: true,\n      'screen_name': screenName\n    });\n  }\n}\n\n/**\n * Set user_id parameter for this Google Analytics ID.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param id User ID string to set\n */\nexport async function setUserId(\n  gtagFunction: Gtag,\n  initializationPromise: Promise<string>,\n  id: string | null,\n  options?: AnalyticsCallOptions\n): Promise<void> {\n  if (options && options.global) {\n    gtagFunction(GtagCommand.SET, { 'user_id': id });\n    return Promise.resolve();\n  } else {\n    const measurementId = await initializationPromise;\n    gtagFunction(GtagCommand.CONFIG, measurementId, {\n      update: true,\n      'user_id': id\n    });\n  }\n}\n\n/**\n * Set all other user properties other than user_id and screen_name.\n *\n * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event\n * @param properties Map of user properties to set\n */\nexport async function setUserProperties(\n  gtagFunction: Gtag,\n  initializationPromise: Promise<string>,\n  properties: CustomParams,\n  options?: AnalyticsCallOptions\n): Promise<void> {\n  if (options && options.global) {\n    const flatProperties: { [key: string]: unknown } = {};\n    for (const key of Object.keys(properties)) {\n      // use dot notation for merge behavior in gtag.js\n      flatProperties[`user_properties.${key}`] = properties[key];\n    }\n    gtagFunction(GtagCommand.SET, flatProperties);\n    return Promise.resolve();\n  } else {\n    const measurementId = await initializationPromise;\n    gtagFunction(GtagCommand.CONFIG, measurementId, {\n      update: true,\n      'user_properties': properties\n    });\n  }\n}\n\n/**\n * Set whether collection is enabled for this ID.\n *\n * @param enabled If true, collection is enabled for this ID.\n */\nexport async function setAnalyticsCollectionEnabled(\n  initializationPromise: Promise<string>,\n  enabled: boolean\n): Promise<void> {\n  const measurementId = await initializationPromise;\n  window[`ga-disable-${measurementId}`] = !enabled;\n}\n\n/**\n * Consent parameters to default to during 'gtag' initialization.\n */\nexport let defaultConsentSettingsForInit: ConsentSettings | undefined;\n\n/**\n * Sets the variable {@link defaultConsentSettingsForInit} for use in the initialization of\n * analytics.\n *\n * @param consentSettings Maps the applicable end user consent state for gtag.js.\n */\nexport function _setConsentDefaultForInit(\n  consentSettings?: ConsentSettings\n): void {\n  defaultConsentSettingsForInit = consentSettings;\n}\n\n/**\n * Sets the variable `defaultEventParametersForInit` for use in the initialization of\n * analytics.\n *\n * @param customParams Any custom params the user may pass to gtag.js.\n */\nexport function _setDefaultEventParametersForInit(\n  customParams?: CustomParams\n): void {\n  defaultEventParametersForInit = customParams;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicConfig, Gtag, MinimalDynamicConfig } from './types';\nimport { GtagCommand, GA_FID_KEY, ORIGIN_KEY } from './constants';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations';\nimport { fetchDynamicConfigWithRetry } from './get-config';\nimport { logger } from './logger';\nimport { FirebaseApp } from '@firebase/app';\nimport {\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport { ERROR_FACTORY, AnalyticsError } from './errors';\nimport { findGtagScriptOnPage, insertScriptTag } from './helpers';\nimport { AnalyticsSettings } from './public-types';\nimport {\n  defaultConsentSettingsForInit,\n  _setConsentDefaultForInit,\n  defaultEventParametersForInit,\n  _setDefaultEventParametersForInit\n} from './functions';\n\nasync function validateIndexedDB(): Promise<boolean> {\n  if (!isIndexedDBAvailable()) {\n    logger.warn(\n      ERROR_FACTORY.create(AnalyticsError.INDEXEDDB_UNAVAILABLE, {\n        errorInfo: 'IndexedDB is not available in this environment.'\n      }).message\n    );\n    return false;\n  } else {\n    try {\n      await validateIndexedDBOpenable();\n    } catch (e) {\n      logger.warn(\n        ERROR_FACTORY.create(AnalyticsError.INDEXEDDB_UNAVAILABLE, {\n          errorInfo: (e as Error)?.toString()\n        }).message\n      );\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Initialize the analytics instance in gtag.js by calling config command with fid.\n *\n * NOTE: We combine analytics initialization and setting fid together because we want fid to be\n * part of the `page_view` event that's sent during the initialization\n * @param app Firebase app\n * @param gtagCore The gtag function that's not wrapped.\n * @param dynamicConfigPromisesList Array of all dynamic config promises.\n * @param measurementIdToAppId Maps measurementID to appID.\n * @param installations _FirebaseInstallationsInternal instance.\n *\n * @returns Measurement ID.\n */\nexport async function _initializeAnalytics(\n  app: FirebaseApp,\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >,\n  measurementIdToAppId: { [key: string]: string },\n  installations: _FirebaseInstallationsInternal,\n  gtagCore: Gtag,\n  dataLayerName: string,\n  options?: AnalyticsSettings\n): Promise<string> {\n  const dynamicConfigPromise = fetchDynamicConfigWithRetry(app);\n  // Once fetched, map measurementIds to appId, for ease of lookup in wrapped gtag function.\n  dynamicConfigPromise\n    .then(config => {\n      measurementIdToAppId[config.measurementId] = config.appId;\n      if (\n        app.options.measurementId &&\n        config.measurementId !== app.options.measurementId\n      ) {\n        logger.warn(\n          `The measurement ID in the local Firebase config (${app.options.measurementId})` +\n            ` does not match the measurement ID fetched from the server (${config.measurementId}).` +\n            ` To ensure analytics events are always sent to the correct Analytics property,` +\n            ` update the` +\n            ` measurement ID field in the local config or remove it from the local config.`\n        );\n      }\n    })\n    .catch(e => logger.error(e));\n  // Add to list to track state of all dynamic config promises.\n  dynamicConfigPromisesList.push(dynamicConfigPromise);\n\n  const fidPromise: Promise<string | undefined> = validateIndexedDB().then(\n    envIsValid => {\n      if (envIsValid) {\n        return installations.getId();\n      } else {\n        return undefined;\n      }\n    }\n  );\n\n  const [dynamicConfig, fid] = await Promise.all([\n    dynamicConfigPromise,\n    fidPromise\n  ]);\n\n  // Detect if user has already put the gtag <script> tag on this page with the passed in\n  // data layer name.\n  if (!findGtagScriptOnPage(dataLayerName)) {\n    insertScriptTag(dataLayerName, dynamicConfig.measurementId);\n  }\n\n  // Detects if there are consent settings that need to be configured.\n  if (defaultConsentSettingsForInit) {\n    gtagCore(GtagCommand.CONSENT, 'default', defaultConsentSettingsForInit);\n    _setConsentDefaultForInit(undefined);\n  }\n\n  // This command initializes gtag.js and only needs to be called once for the entire web app,\n  // but since it is idempotent, we can call it multiple times.\n  // We keep it together with other initialization logic for better code structure.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (gtagCore as any)('js', new Date());\n  // User config added first. We don't want users to accidentally overwrite\n  // base Firebase config properties.\n  const configProperties: Record<string, unknown> = options?.config ?? {};\n\n  // guard against developers accidentally setting properties with prefix `firebase_`\n  configProperties[ORIGIN_KEY] = 'firebase';\n  configProperties.update = true;\n\n  if (fid != null) {\n    configProperties[GA_FID_KEY] = fid;\n  }\n\n  // It should be the first config command called on this GA-ID\n  // Initialize this GA-ID and set FID on it using the gtag config API.\n  // Note: This will trigger a page_view event unless 'send_page_view' is set to false in\n  // `configProperties`.\n  gtagCore(GtagCommand.CONFIG, dynamicConfig.measurementId, configProperties);\n\n  // Detects if there is data that will be set on every event logged from the SDK.\n  if (defaultEventParametersForInit) {\n    gtagCore(GtagCommand.SET, defaultEventParametersForInit);\n    _setDefaultEventParametersForInit(undefined);\n  }\n\n  return dynamicConfig.measurementId;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SettingsOptions, Analytics, AnalyticsSettings } from './public-types';\nimport { Gtag, DynamicConfig, MinimalDynamicConfig } from './types';\nimport { getOrCreateDataLayer, wrapOrCreateGtag } from './helpers';\nimport { AnalyticsError, ERROR_FACTORY } from './errors';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations';\nimport { areCookiesEnabled, isBrowserExtension } from '@firebase/util';\nimport { _initializeAnalytics } from './initialize-analytics';\nimport { logger } from './logger';\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\n\n/**\n * Analytics Service class.\n */\nexport class AnalyticsService implements Analytics, _FirebaseService {\n  constructor(public app: FirebaseApp) {}\n  _delete(): Promise<void> {\n    delete initializationPromisesMap[this.app.options.appId!];\n    return Promise.resolve();\n  }\n}\n\n/**\n * Maps appId to full initialization promise. Wrapped gtag calls must wait on\n * all or some of these, depending on the call's `send_to` param and the status\n * of the dynamic config fetches (see below).\n */\nexport let initializationPromisesMap: {\n  [appId: string]: Promise<string>; // Promise contains measurement ID string.\n} = {};\n\n/**\n * List of dynamic config fetch promises. In certain cases, wrapped gtag calls\n * wait on all these to be complete in order to determine if it can selectively\n * wait for only certain initialization (FID) promises or if it must wait for all.\n */\nlet dynamicConfigPromisesList: Array<\n  Promise<DynamicConfig | MinimalDynamicConfig>\n> = [];\n\n/**\n * Maps fetched measurementIds to appId. Populated when the app's dynamic config\n * fetch completes. If already populated, gtag config calls can use this to\n * selectively wait for only this app's initialization promise (FID) instead of all\n * initialization promises.\n */\nconst measurementIdToAppId: { [measurementId: string]: string } = {};\n\n/**\n * Name for window global data layer array used by GA: defaults to 'dataLayer'.\n */\nlet dataLayerName: string = 'dataLayer';\n\n/**\n * Name for window global gtag function used by GA: defaults to 'gtag'.\n */\nlet gtagName: string = 'gtag';\n\n/**\n * Reproduction of standard gtag function or reference to existing\n * gtag function on window object.\n */\nlet gtagCoreFunction: Gtag;\n\n/**\n * Wrapper around gtag function that ensures FID is sent with all\n * relevant event and config calls.\n */\nexport let wrappedGtagFunction: Gtag;\n\n/**\n * Flag to ensure page initialization steps (creation or wrapping of\n * dataLayer and gtag script) are only run once per page load.\n */\nlet globalInitDone: boolean = false;\n\n/**\n * For testing\n * @internal\n */\nexport function resetGlobalVars(\n  newGlobalInitDone = false,\n  newInitializationPromisesMap = {},\n  newDynamicPromises = []\n): void {\n  globalInitDone = newGlobalInitDone;\n  initializationPromisesMap = newInitializationPromisesMap;\n  dynamicConfigPromisesList = newDynamicPromises;\n  dataLayerName = 'dataLayer';\n  gtagName = 'gtag';\n}\n\n/**\n * For testing\n * @internal\n */\nexport function getGlobalVars(): {\n  initializationPromisesMap: { [appId: string]: Promise<string> };\n  dynamicConfigPromisesList: Array<\n    Promise<DynamicConfig | MinimalDynamicConfig>\n  >;\n} {\n  return {\n    initializationPromisesMap,\n    dynamicConfigPromisesList\n  };\n}\n\n/**\n * Configures Firebase Analytics to use custom `gtag` or `dataLayer` names.\n * Intended to be used if `gtag.js` script has been installed on\n * this page independently of Firebase Analytics, and is using non-default\n * names for either the `gtag` function or for `dataLayer`.\n * Must be called before calling `getAnalytics()` or it won't\n * have any effect.\n *\n * @public\n *\n * @param options - Custom gtag and dataLayer names.\n */\nexport function settings(options: SettingsOptions): void {\n  if (globalInitDone) {\n    throw ERROR_FACTORY.create(AnalyticsError.ALREADY_INITIALIZED);\n  }\n  if (options.dataLayerName) {\n    dataLayerName = options.dataLayerName;\n  }\n  if (options.gtagName) {\n    gtagName = options.gtagName;\n  }\n}\n\n/**\n * Returns true if no environment mismatch is found.\n * If environment mismatches are found, throws an INVALID_ANALYTICS_CONTEXT\n * error that also lists details for each mismatch found.\n */\nfunction warnOnBrowserContextMismatch(): void {\n  const mismatchedEnvMessages = [];\n  if (isBrowserExtension()) {\n    mismatchedEnvMessages.push('This is a browser extension environment.');\n  }\n  if (!areCookiesEnabled()) {\n    mismatchedEnvMessages.push('Cookies are not available.');\n  }\n  if (mismatchedEnvMessages.length > 0) {\n    const details = mismatchedEnvMessages\n      .map((message, index) => `(${index + 1}) ${message}`)\n      .join(' ');\n    const err = ERROR_FACTORY.create(AnalyticsError.INVALID_ANALYTICS_CONTEXT, {\n      errorInfo: details\n    });\n    logger.warn(err.message);\n  }\n}\n\n/**\n * Analytics instance factory.\n * @internal\n */\nexport function factory(\n  app: FirebaseApp,\n  installations: _FirebaseInstallationsInternal,\n  options?: AnalyticsSettings\n): AnalyticsService {\n  warnOnBrowserContextMismatch();\n  const appId = app.options.appId;\n  if (!appId) {\n    throw ERROR_FACTORY.create(AnalyticsError.NO_APP_ID);\n  }\n  if (!app.options.apiKey) {\n    if (app.options.measurementId) {\n      logger.warn(\n        `The \"apiKey\" field is empty in the local Firebase config. This is needed to fetch the latest` +\n          ` measurement ID for this Firebase app. Falling back to the measurement ID ${app.options.measurementId}` +\n          ` provided in the \"measurementId\" field in the local Firebase config.`\n      );\n    } else {\n      throw ERROR_FACTORY.create(AnalyticsError.NO_API_KEY);\n    }\n  }\n  if (initializationPromisesMap[appId] != null) {\n    throw ERROR_FACTORY.create(AnalyticsError.ALREADY_EXISTS, {\n      id: appId\n    });\n  }\n\n  if (!globalInitDone) {\n    // Steps here should only be done once per page: creation or wrapping\n    // of dataLayer and global gtag function.\n\n    getOrCreateDataLayer(dataLayerName);\n\n    const { wrappedGtag, gtagCore } = wrapOrCreateGtag(\n      initializationPromisesMap,\n      dynamicConfigPromisesList,\n      measurementIdToAppId,\n      dataLayerName,\n      gtagName\n    );\n    wrappedGtagFunction = wrappedGtag;\n    gtagCoreFunction = gtagCore;\n\n    globalInitDone = true;\n  }\n  // Async but non-blocking.\n  // This map reflects the completion state of all promises for each appId.\n  initializationPromisesMap[appId] = _initializeAnalytics(\n    app,\n    dynamicConfigPromisesList,\n    measurementIdToAppId,\n    installations,\n    gtagCoreFunction,\n    dataLayerName,\n    options\n  );\n\n  const analyticsInstance: AnalyticsService = new AnalyticsService(app);\n\n  return analyticsInstance;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable camelcase */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app';\nimport {\n  Analytics,\n  AnalyticsCallOptions,\n  AnalyticsSettings,\n  ConsentSettings,\n  CustomParams,\n  EventNameString,\n  EventParams\n} from './public-types';\nimport { Provider } from '@firebase/component';\nimport {\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable,\n  areCookiesEnabled,\n  isBrowserExtension,\n  getModularInstance,\n  deepEqual\n} from '@firebase/util';\nimport { ANALYTICS_TYPE, GtagCommand } from './constants';\nimport {\n  AnalyticsService,\n  initializationPromisesMap,\n  wrappedGtagFunction\n} from './factory';\nimport { logger } from './logger';\nimport {\n  logEvent as internalLogEvent,\n  setCurrentScreen as internalSetCurrentScreen,\n  setUserId as internalSetUserId,\n  setUserProperties as internalSetUserProperties,\n  setAnalyticsCollectionEnabled as internalSetAnalyticsCollectionEnabled,\n  _setConsentDefaultForInit,\n  _setDefaultEventParametersForInit\n} from './functions';\nimport { ERROR_FACTORY, AnalyticsError } from './errors';\n\nexport { settings } from './factory';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    [ANALYTICS_TYPE]: AnalyticsService;\n  }\n}\n\n/**\n * Returns an {@link Analytics} instance for the given app.\n *\n * @public\n *\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n */\nexport function getAnalytics(app: FirebaseApp = getApp()): Analytics {\n  app = getModularInstance(app);\n  // Dependencies\n  const analyticsProvider: Provider<'analytics'> = _getProvider(\n    app,\n    ANALYTICS_TYPE\n  );\n\n  if (analyticsProvider.isInitialized()) {\n    return analyticsProvider.getImmediate();\n  }\n\n  return initializeAnalytics(app);\n}\n\n/**\n * Returns an {@link Analytics} instance for the given app.\n *\n * @public\n *\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n */\nexport function initializeAnalytics(\n  app: FirebaseApp,\n  options: AnalyticsSettings = {}\n): Analytics {\n  // Dependencies\n  const analyticsProvider: Provider<'analytics'> = _getProvider(\n    app,\n    ANALYTICS_TYPE\n  );\n  if (analyticsProvider.isInitialized()) {\n    const existingInstance = analyticsProvider.getImmediate();\n    if (deepEqual(options, analyticsProvider.getOptions())) {\n      return existingInstance;\n    } else {\n      throw ERROR_FACTORY.create(AnalyticsError.ALREADY_INITIALIZED);\n    }\n  }\n  const analyticsInstance = analyticsProvider.initialize({ options });\n  return analyticsInstance;\n}\n\n/**\n * This is a public static method provided to users that wraps four different checks:\n *\n * 1. Check if it's not a browser extension environment.\n * 2. Check if cookies are enabled in current browser.\n * 3. Check if IndexedDB is supported by the browser environment.\n * 4. Check if the current browser context is valid for using `IndexedDB.open()`.\n *\n * @public\n *\n */\nexport async function isSupported(): Promise<boolean> {\n  if (isBrowserExtension()) {\n    return false;\n  }\n  if (!areCookiesEnabled()) {\n    return false;\n  }\n  if (!isIndexedDBAvailable()) {\n    return false;\n  }\n\n  try {\n    const isDBOpenable: boolean = await validateIndexedDBOpenable();\n    return isDBOpenable;\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * Use gtag `config` command to set `screen_name`.\n *\n * @public\n *\n * @deprecated Use {@link logEvent} with `eventName` as 'screen_view' and add relevant `eventParams`.\n * See {@link https://firebase.google.com/docs/analytics/screenviews | Track Screenviews}.\n *\n * @param analyticsInstance - The {@link Analytics} instance.\n * @param screenName - Screen name to set.\n */\nexport function setCurrentScreen(\n  analyticsInstance: Analytics,\n  screenName: string,\n  options?: AnalyticsCallOptions\n): void {\n  analyticsInstance = getModularInstance(analyticsInstance);\n  internalSetCurrentScreen(\n    wrappedGtagFunction,\n    initializationPromisesMap[analyticsInstance.app.options.appId!],\n    screenName,\n    options\n  ).catch(e => logger.error(e));\n}\n\n/**\n * Use gtag `config` command to set `user_id`.\n *\n * @public\n *\n * @param analyticsInstance - The {@link Analytics} instance.\n * @param id - User ID to set.\n */\nexport function setUserId(\n  analyticsInstance: Analytics,\n  id: string | null,\n  options?: AnalyticsCallOptions\n): void {\n  analyticsInstance = getModularInstance(analyticsInstance);\n  internalSetUserId(\n    wrappedGtagFunction,\n    initializationPromisesMap[analyticsInstance.app.options.appId!],\n    id,\n    options\n  ).catch(e => logger.error(e));\n}\n\n/**\n * Use gtag `config` command to set all params specified.\n *\n * @public\n */\nexport function setUserProperties(\n  analyticsInstance: Analytics,\n  properties: CustomParams,\n  options?: AnalyticsCallOptions\n): void {\n  analyticsInstance = getModularInstance(analyticsInstance);\n  internalSetUserProperties(\n    wrappedGtagFunction,\n    initializationPromisesMap[analyticsInstance.app.options.appId!],\n    properties,\n    options\n  ).catch(e => logger.error(e));\n}\n\n/**\n * Sets whether Google Analytics collection is enabled for this app on this device.\n * Sets global `window['ga-disable-analyticsId'] = true;`\n *\n * @public\n *\n * @param analyticsInstance - The {@link Analytics} instance.\n * @param enabled - If true, enables collection, if false, disables it.\n */\nexport function setAnalyticsCollectionEnabled(\n  analyticsInstance: Analytics,\n  enabled: boolean\n): void {\n  analyticsInstance = getModularInstance(analyticsInstance);\n  internalSetAnalyticsCollectionEnabled(\n    initializationPromisesMap[analyticsInstance.app.options.appId!],\n    enabled\n  ).catch(e => logger.error(e));\n}\n\n/**\n * Adds data that will be set on every event logged from the SDK, including automatic ones.\n * With gtag's \"set\" command, the values passed persist on the current page and are passed with\n * all subsequent events.\n * @public\n * @param customParams - Any custom params the user may pass to gtag.js.\n */\nexport function setDefaultEventParameters(customParams: CustomParams): void {\n  // Check if reference to existing gtag function on window object exists\n  if (wrappedGtagFunction) {\n    wrappedGtagFunction(GtagCommand.SET, customParams);\n  } else {\n    _setDefaultEventParametersForInit(customParams);\n  }\n}\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'add_payment_info',\n  eventParams?: {\n    coupon?: EventParams['coupon'];\n    currency?: EventParams['currency'];\n    items?: EventParams['items'];\n    payment_type?: EventParams['payment_type'];\n    value?: EventParams['value'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'add_shipping_info',\n  eventParams?: {\n    coupon?: EventParams['coupon'];\n    currency?: EventParams['currency'];\n    items?: EventParams['items'];\n    shipping_tier?: EventParams['shipping_tier'];\n    value?: EventParams['value'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'add_to_cart' | 'add_to_wishlist' | 'remove_from_cart',\n  eventParams?: {\n    currency?: EventParams['currency'];\n    value?: EventParams['value'];\n    items?: EventParams['items'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'begin_checkout',\n  eventParams?: {\n    currency?: EventParams['currency'];\n    coupon?: EventParams['coupon'];\n    value?: EventParams['value'];\n    items?: EventParams['items'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'checkout_progress',\n  eventParams?: {\n    currency?: EventParams['currency'];\n    coupon?: EventParams['coupon'];\n    value?: EventParams['value'];\n    items?: EventParams['items'];\n    checkout_step?: EventParams['checkout_step'];\n    checkout_option?: EventParams['checkout_option'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * See\n * {@link https://developers.google.com/analytics/devguides/collection/ga4/exceptions\n * | Measure exceptions}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'exception',\n  eventParams?: {\n    description?: EventParams['description'];\n    fatal?: EventParams['fatal'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'generate_lead',\n  eventParams?: {\n    value?: EventParams['value'];\n    currency?: EventParams['currency'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'login',\n  eventParams?: {\n    method?: EventParams['method'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * See\n * {@link https://developers.google.com/analytics/devguides/collection/ga4/page-view\n * | Page views}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'page_view',\n  eventParams?: {\n    page_title?: string;\n    page_location?: string;\n    page_path?: string;\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'purchase' | 'refund',\n  eventParams?: {\n    value?: EventParams['value'];\n    currency?: EventParams['currency'];\n    transaction_id: EventParams['transaction_id'];\n    tax?: EventParams['tax'];\n    shipping?: EventParams['shipping'];\n    items?: EventParams['items'];\n    coupon?: EventParams['coupon'];\n    affiliation?: EventParams['affiliation'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * See {@link https://firebase.google.com/docs/analytics/screenviews\n * | Track Screenviews}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'screen_view',\n  eventParams?: {\n    firebase_screen: EventParams['firebase_screen'];\n    firebase_screen_class: EventParams['firebase_screen_class'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'search' | 'view_search_results',\n  eventParams?: {\n    search_term?: EventParams['search_term'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'select_content',\n  eventParams?: {\n    content_type?: EventParams['content_type'];\n    item_id?: EventParams['item_id'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'select_item',\n  eventParams?: {\n    items?: EventParams['items'];\n    item_list_name?: EventParams['item_list_name'];\n    item_list_id?: EventParams['item_list_id'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'select_promotion' | 'view_promotion',\n  eventParams?: {\n    items?: EventParams['items'];\n    promotion_id?: EventParams['promotion_id'];\n    promotion_name?: EventParams['promotion_name'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'set_checkout_option',\n  eventParams?: {\n    checkout_step?: EventParams['checkout_step'];\n    checkout_option?: EventParams['checkout_option'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'share',\n  eventParams?: {\n    method?: EventParams['method'];\n    content_type?: EventParams['content_type'];\n    item_id?: EventParams['item_id'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'sign_up',\n  eventParams?: {\n    method?: EventParams['method'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'timing_complete',\n  eventParams?: {\n    name: string;\n    value: number;\n    event_category?: string;\n    event_label?: string;\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'view_cart' | 'view_item',\n  eventParams?: {\n    currency?: EventParams['currency'];\n    items?: EventParams['items'];\n    value?: EventParams['value'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: 'view_item_list',\n  eventParams?: {\n    items?: EventParams['items'];\n    item_list_name?: EventParams['item_list_name'];\n    item_list_id?: EventParams['item_list_id'];\n    [key: string]: any;\n  },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * @public\n * List of recommended event parameters can be found in\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n */\nexport function logEvent<T extends string>(\n  analyticsInstance: Analytics,\n  eventName: CustomEventName<T>,\n  eventParams?: { [key: string]: any },\n  options?: AnalyticsCallOptions\n): void;\n\n/**\n * Sends a Google Analytics event with given `eventParams`. This method\n * automatically associates this logged event with this Firebase web\n * app instance on this device.\n * List of official event parameters can be found in the gtag.js\n * reference documentation:\n * {@link https://developers.google.com/gtagjs/reference/ga4-events\n * | the GA4 reference documentation}.\n *\n * @public\n */\nexport function logEvent(\n  analyticsInstance: Analytics,\n  eventName: string,\n  eventParams?: EventParams,\n  options?: AnalyticsCallOptions\n): void {\n  analyticsInstance = getModularInstance(analyticsInstance);\n  internalLogEvent(\n    wrappedGtagFunction,\n    initializationPromisesMap[analyticsInstance.app.options.appId!],\n    eventName,\n    eventParams,\n    options\n  ).catch(e => logger.error(e));\n}\n\n/**\n * Any custom event name string not in the standard list of recommended\n * event names.\n * @public\n */\nexport type CustomEventName<T> = T extends EventNameString ? never : T;\n\n/**\n * Sets the applicable end user consent state for this web app across all gtag references once\n * Firebase Analytics is initialized.\n *\n * Use the {@link ConsentSettings} to specify individual consent type values. By default consent\n * types are set to \"granted\".\n * @public\n * @param consentSettings - Maps the applicable end user consent state for gtag.js.\n */\nexport function setConsent(consentSettings: ConsentSettings): void {\n  // Check if reference to existing gtag function on window object exists\n  if (wrappedGtagFunction) {\n    wrappedGtagFunction(GtagCommand.CONSENT, 'update', consentSettings);\n  } else {\n    _setConsentDefaultForInit(consentSettings);\n  }\n}\n","/**\n * Firebase Analytics\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerVersion, _registerComponent } from '@firebase/app';\nimport { FirebaseAnalyticsInternal } from '@firebase/analytics-interop-types';\nimport { factory } from './factory';\nimport { ANALYTICS_TYPE } from './constants';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\nimport { ERROR_FACTORY, AnalyticsError } from './errors';\nimport { logEvent } from './api';\nimport { name, version } from '../package.json';\nimport { AnalyticsCallOptions } from './public-types';\nimport '@firebase/installations';\n\ndeclare global {\n  interface Window {\n    [key: string]: unknown;\n  }\n}\n\nfunction registerAnalytics(): void {\n  _registerComponent(\n    new Component(\n      ANALYTICS_TYPE,\n      (container, { options: analyticsOptions }: InstanceFactoryOptions) => {\n        // getImmediate for FirebaseApp will always succeed\n        const app = container.getProvider('app').getImmediate();\n        const installations = container\n          .getProvider('installations-internal')\n          .getImmediate();\n\n        return factory(app, installations, analyticsOptions);\n      },\n      ComponentType.PUBLIC\n    )\n  );\n\n  _registerComponent(\n    new Component('analytics-internal', internalFactory, ComponentType.PRIVATE)\n  );\n\n  registerVersion(name, version);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n\n  function internalFactory(\n    container: ComponentContainer\n  ): FirebaseAnalyticsInternal {\n    try {\n      const analytics = container.getProvider(ANALYTICS_TYPE).getImmediate();\n      return {\n        logEvent: (\n          eventName: string,\n          eventParams?: { [key: string]: unknown },\n          options?: AnalyticsCallOptions\n        ) => logEvent(analytics, eventName, eventParams, options)\n      };\n    } catch (e) {\n      throw ERROR_FACTORY.create(AnalyticsError.INTEROP_COMPONENT_REG_FAILED, {\n        reason: e as Error\n      });\n    }\n  }\n}\n\nregisterAnalytics();\n\nexport * from './api';\nexport * from './public-types';\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n/** Key of FCM Payload in Notification's data field. */\nexport const FCM_MSG = 'FCM_MSG';\n\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nexport const TAG = 'FirebaseMessaging: ';\nexport const MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST = 1000;\nexport const MAX_RETRIES = 3;\nexport const LOG_INTERVAL_IN_MS = 86400000; //24 hour\nexport const DEFAULT_BACKOFF_TIME_MS = 5000;\n\n// FCM log source name registered at Firelog: 'FCM_CLIENT_EVENT_LOGGING'. It uniquely identifies\n// FCM's logging configuration.\nexport const FCM_LOG_SOURCE = 1249;\n\n// Defined as in proto/messaging_event.proto. Neglecting fields that are supported.\nexport const SDK_PLATFORM_WEB = 3;\nexport const EVENT_MESSAGE_DELIVERED = 1;\n\nexport enum MessageType {\n  DATA_MESSAGE = 1,\n  DISPLAY_NOTIFICATION = 3\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\n\nexport interface MessagePayloadInternal {\n  notification?: NotificationPayloadInternal;\n  data?: unknown;\n  fcmOptions?: FcmOptionsInternal;\n  messageType?: MessageType;\n  isFirebaseMessaging?: boolean;\n  from: string;\n  fcmMessageId: string;\n  // eslint-disable-next-line camelcase\n  collapse_key: string;\n}\n\nexport interface NotificationPayloadInternal extends NotificationOptions {\n  title: string;\n  // Supported in the Legacy Send API.\n  // See:https://firebase.google.com/docs/cloud-messaging/xmpp-server-ref.\n  // eslint-disable-next-line camelcase\n  click_action?: string;\n  icon?: string;\n}\n\n// Defined in\n// https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushfcmoptions. Note\n// that the keys are sent to the clients in snake cases which we need to convert to camel so it can\n// be exposed as a type to match the Firebase API convention.\nexport interface FcmOptionsInternal {\n  link?: string;\n\n  // eslint-disable-next-line camelcase\n  analytics_label?: string;\n}\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\n/** Additional data of a message sent from the FN Console. */\nexport interface ConsoleMessageData {\n  [CONSOLE_CAMPAIGN_ID]: string;\n  [CONSOLE_CAMPAIGN_TIME]: string;\n  [CONSOLE_CAMPAIGN_NAME]?: string;\n  [CONSOLE_CAMPAIGN_ANALYTICS_ENABLED]?: '1';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteDB, openDB } from 'idb';\n\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n    // typecast when it lands in TS types.\n    const databases = await (\n      indexedDB as {\n        databases(): Promise<Array<{ name: string; version: number }>>;\n      }\n    ).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDB(OLD_DB_NAME, OLD_DB_VERSION, {\n    upgrade: async (db, oldVersion, newVersion, upgradeTransaction) => {\n      if (oldVersion < 2) {\n        // Database too old, skip migration.\n        return;\n      }\n\n      if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n        // Database did not exist. Nothing to do.\n        return;\n      }\n\n      const objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\n      const value = await objectStore.index('fcmSenderId').get(senderId);\n      await objectStore.clear();\n\n      if (!value) {\n        // No entry in the database, nothing to migrate.\n        return;\n      }\n\n      if (oldVersion === 2) {\n        const oldDetails = value as V2TokenDetails;\n\n        if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n          return;\n        }\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime ?? Date.now(),\n          subscriptionOptions: {\n            auth: oldDetails.auth,\n            p256dh: oldDetails.p256dh,\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey:\n              typeof oldDetails.vapidKey === 'string'\n                ? oldDetails.vapidKey\n                : arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 3) {\n        const oldDetails = value as V3TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 4) {\n        const oldDetails = value as V4TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      }\n    }\n  });\n  db.close();\n\n  // Delete all old databases.\n  await deleteDB(OLD_DB_NAME);\n  await deleteDB('fcm_vapid_details_db');\n  await deleteDB('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, IDBPDatabase, deleteDB, openDB } from 'idb';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from '../helpers/migrate-old-database';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\ninterface MessagingDB extends DBSchema {\n  'firebase-messaging-store': {\n    key: string;\n    value: TokenDetails;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<MessagingDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<MessagingDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (upgradeDb, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n        // because if there are multiple versions between the old version and the current version, we\n        // want ALL the migrations that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = (await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key)) as TokenDetails;\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.done;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDB(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  INDEXED_DB_UNSUPPORTED = 'indexed-db-unsupported',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the Firebase SDK.\",\n  [ErrorCode.INDEXED_DB_UNSUPPORTED]:\n    \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occurred while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\nimport {\n  arrayToBase64,\n  base64ToArray\n} from '../helpers/array-base64-translator';\nimport { dbGet, dbRemove, dbSet } from './idb-manager';\nimport {\n  requestDeleteToken,\n  requestGetToken,\n  requestUpdateToken\n} from './requests';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { MessagingService } from '../messaging-service';\n\n// UpdateRegistration will be called once every week.\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getTokenInternal(\n  messaging: MessagingService\n): Promise<string> {\n  const pushSubscription = await getPushSubscription(\n    messaging.swRegistration!,\n    messaging.vapidKey!\n  );\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey: messaging.vapidKey!,\n    swScope: messaging.swRegistration!.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(\n        messaging.firebaseDependencies!,\n        tokenDetails.token\n      );\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(messaging.firebaseDependencies!, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(messaging, {\n      token: tokenDetails.token,\n      createTime: Date.now(),\n      subscriptionOptions\n    });\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nexport async function deleteTokenInternal(\n  messaging: MessagingService\n): Promise<boolean> {\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(\n      messaging.firebaseDependencies,\n      tokenDetails.token\n    );\n    await dbRemove(messaging.firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription =\n    await messaging.swRegistration!.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  messaging: MessagingService,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      messaging.firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      ...tokenDetails,\n      token: updatedToken,\n      createTime: Date.now()\n    };\n\n    await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    await deleteTokenInternal(messaging);\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessagePayload } from '../interfaces/public-types';\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\n\nexport function externalizePayload(\n  internalPayload: MessagePayloadInternal\n): MessagePayload {\n  const payload: MessagePayload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcmMessageId\n  } as MessagePayload;\n\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n\n  return payload;\n}\n\nfunction propagateNotificationPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n\n  const title = messagePayloadInternal.notification!.title;\n  if (!!title) {\n    payload.notification!.title = title;\n  }\n\n  const body = messagePayloadInternal.notification!.body;\n  if (!!body) {\n    payload.notification!.body = body;\n  }\n\n  const image = messagePayloadInternal.notification!.image;\n  if (!!image) {\n    payload.notification!.image = image;\n  }\n\n  const icon = messagePayloadInternal.notification!.icon;\n  if (!!icon) {\n    payload.notification!.icon = icon;\n  }\n}\n\nfunction propagateDataPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data as { [key: string]: string };\n}\n\nfunction propagateFcmOptions(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  // fcmOptions.link value is written into notification.click_action. see more in b/232072111\n  if (\n    !messagePayloadInternal.fcmOptions &&\n    !messagePayloadInternal.notification?.click_action\n  ) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n\n  const link =\n    messagePayloadInternal.fcmOptions?.link ??\n    messagePayloadInternal.notification?.click_action;\n\n  if (!!link) {\n    payload.fcmOptions!.link = link;\n  }\n\n  // eslint-disable-next-line camelcase\n  const analyticsLabel = messagePayloadInternal.fcmOptions?.analytics_label;\n  if (!!analyticsLabel) {\n    payload.fcmOptions!.analyticsLabel = analyticsLabel;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSOLE_CAMPAIGN_ID } from '../util/constants';\nimport { ConsoleMessageData } from '../interfaces/internal-message-payload';\n\nexport function isConsoleMessage(data: unknown): data is ConsoleMessageData {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_BACKOFF_TIME_MS,\n  EVENT_MESSAGE_DELIVERED,\n  FCM_LOG_SOURCE,\n  LOG_INTERVAL_IN_MS,\n  MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST,\n  MAX_RETRIES,\n  MessageType,\n  SDK_PLATFORM_WEB\n} from '../util/constants';\nimport {\n  FcmEvent,\n  LogEvent,\n  LogRequest,\n  LogResponse\n} from '../interfaces/logging-types';\n\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\nimport { MessagingService } from '../messaging-service';\n\nconst FIRELOG_ENDPOINT = _mergeStrings(\n  'hts/frbslgigp.ogepscmv/ieo/eaylg',\n  'tp:/ieaeogn-agolai.o/1frlglgc/o'\n);\n\nconst FCM_TRANSPORT_KEY = _mergeStrings(\n  'AzSCbw63g1R0nCw85jG8',\n  'Iaya3yLKwmgvh7cF0q4'\n);\n\nexport function startLoggingService(messaging: MessagingService): void {\n  if (!messaging.isLogServiceStarted) {\n    _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    messaging.isLogServiceStarted = true;\n  }\n}\n\n/**\n *\n * @param messaging the messaging instance.\n * @param offsetInMs this method execute after `offsetInMs` elapsed .\n */\nexport function _processQueue(\n  messaging: MessagingService,\n  offsetInMs: number\n): void {\n  setTimeout(async () => {\n    if (!messaging.deliveryMetricsExportedToBigQueryEnabled) {\n      // flush events and terminate logging service\n      messaging.logEvents = [];\n      messaging.isLogServiceStarted = false;\n\n      return;\n    }\n\n    if (!messaging.logEvents.length) {\n      return _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    }\n\n    await _dispatchLogEvents(messaging);\n  }, offsetInMs);\n}\n\nexport async function _dispatchLogEvents(\n  messaging: MessagingService\n): Promise<void> {\n  for (\n    let i = 0, n = messaging.logEvents.length;\n    i < n;\n    i += MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST\n  ) {\n    const logRequest = _createLogRequest(\n      messaging.logEvents.slice(i, i + MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST)\n    );\n\n    let retryCount = 0,\n      response = {} as Response;\n\n    do {\n      try {\n        response = await fetch(\n          FIRELOG_ENDPOINT.concat('?key=', FCM_TRANSPORT_KEY),\n          {\n            method: 'POST',\n            body: JSON.stringify(logRequest)\n          }\n        );\n\n        // don't retry on 200s or non retriable errors\n        if (response.ok || (!response.ok && !isRetriableError(response))) {\n          break;\n        }\n\n        if (!response.ok && isRetriableError(response)) {\n          // rethrow to retry with quota\n          throw new Error(\n            'a retriable Non-200 code is returned in fetch to Firelog endpoint. Retry'\n          );\n        }\n      } catch (error) {\n        const isLastAttempt = retryCount === MAX_RETRIES;\n        if (isLastAttempt) {\n          // existing the do-while interactive retry logic because retry quota has reached.\n          break;\n        }\n      }\n\n      let delayInMs: number;\n      try {\n        delayInMs = Number(\n          ((await response.json()) as LogResponse).nextRequestWaitMillis\n        );\n      } catch (e) {\n        delayInMs = DEFAULT_BACKOFF_TIME_MS;\n      }\n\n      await new Promise(resolve => setTimeout(resolve, delayInMs));\n\n      retryCount++;\n    } while (retryCount < MAX_RETRIES);\n  }\n\n  messaging.logEvents = [];\n  // schedule for next logging\n  _processQueue(messaging, LOG_INTERVAL_IN_MS);\n}\n\nfunction isRetriableError(response: Response): boolean {\n  const httpStatus = response.status;\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\nexport async function stageLog(\n  messaging: MessagingService,\n  internalPayload: MessagePayloadInternal\n): Promise<void> {\n  const fcmEvent = createFcmEvent(\n    internalPayload,\n    await messaging.firebaseDependencies.installations.getId()\n  );\n\n  createAndEnqueueLogEvent(messaging, fcmEvent);\n}\n\nfunction createFcmEvent(\n  internalPayload: MessagePayloadInternal,\n  fid: string\n): FcmEvent {\n  const fcmEvent = {} as FcmEvent;\n\n  /* eslint-disable camelcase */\n  // some fields should always be non-null. Still check to ensure.\n  if (!!internalPayload.from) {\n    fcmEvent.project_number = internalPayload.from;\n  }\n\n  if (!!internalPayload.fcmMessageId) {\n    fcmEvent.message_id = internalPayload.fcmMessageId;\n  }\n\n  fcmEvent.instance_id = fid;\n\n  if (!!internalPayload.notification) {\n    fcmEvent.message_type = MessageType.DISPLAY_NOTIFICATION.toString();\n  } else {\n    fcmEvent.message_type = MessageType.DATA_MESSAGE.toString();\n  }\n\n  fcmEvent.sdk_platform = SDK_PLATFORM_WEB.toString();\n  fcmEvent.package_name = self.origin.replace(/(^\\w+:|^)\\/\\//, '');\n\n  if (!!internalPayload.collapse_key) {\n    fcmEvent.collapse_key = internalPayload.collapse_key;\n  }\n\n  fcmEvent.event = EVENT_MESSAGE_DELIVERED.toString();\n\n  if (!!internalPayload.fcmOptions?.analytics_label) {\n    fcmEvent.analytics_label = internalPayload.fcmOptions?.analytics_label;\n  }\n\n  /* eslint-enable camelcase */\n  return fcmEvent;\n}\n\nfunction createAndEnqueueLogEvent(\n  messaging: MessagingService,\n  fcmEvent: FcmEvent\n): void {\n  const logEvent = {} as LogEvent;\n\n  /* eslint-disable camelcase */\n  logEvent.event_time_ms = Math.floor(Date.now()).toString();\n  logEvent.source_extension_json_proto3 = JSON.stringify(fcmEvent);\n  // eslint-disable-next-line camelcase\n\n  messaging.logEvents.push(logEvent);\n}\n\nexport function _createLogRequest(logEventQueue: LogEvent[]): LogRequest {\n  const logRequest = {} as LogRequest;\n\n  /* eslint-disable camelcase */\n  logRequest.log_source = FCM_LOG_SOURCE.toString();\n  logRequest.log_event = logEventQueue;\n  /* eslint-enable camelcase */\n\n  return logRequest;\n}\n\nexport function _mergeStrings(s1: string, s2: string): string {\n  const resultArray = [];\n  for (let i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseError } from '@firebase/util';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\nimport { MessagePayload, NextFn, Observer } from './interfaces/public-types';\n\nimport { FirebaseAnalyticsInternalName } from '@firebase/analytics-interop-types';\nimport { FirebaseInternalDependencies } from './interfaces/internal-dependencies';\nimport { LogEvent } from './interfaces/logging-types';\nimport { Provider } from '@firebase/component';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations';\nimport { extractAppConfig } from './helpers/extract-app-config';\n\nexport class MessagingService implements _FirebaseService {\n  readonly app!: FirebaseApp;\n  readonly firebaseDependencies!: FirebaseInternalDependencies;\n\n  swRegistration?: ServiceWorkerRegistration;\n  vapidKey?: string;\n  // logging is only done with end user consent. Default to false.\n  deliveryMetricsExportedToBigQueryEnabled: boolean = false;\n\n  onBackgroundMessageHandler:\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload>\n    | null = null;\n\n  onMessageHandler: NextFn<MessagePayload> | Observer<MessagePayload> | null =\n    null;\n\n  logEvents: LogEvent[] = [];\n  isLogServiceStarted: boolean = false;\n\n  constructor(\n    app: FirebaseApp,\n    installations: _FirebaseInstallationsInternal,\n    analyticsProvider: Provider<FirebaseAnalyticsInternalName>\n  ) {\n    const appConfig = extractAppConfig(app);\n\n    this.firebaseDependencies = {\n      app,\n      appConfig,\n      installations,\n      analyticsProvider\n    };\n  }\n\n  _delete(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_SW_PATH, DEFAULT_SW_SCOPE } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function registerDefaultSw(\n  messaging: MessagingService\n): Promise<void> {\n  try {\n    messaging.swRegistration = await navigator.serviceWorker.register(\n      DEFAULT_SW_PATH,\n      {\n        scope: DEFAULT_SW_SCOPE\n      }\n    );\n\n    // The timing when browser updates sw when sw has an update is unreliable from experiment. It\n    // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n    // is stuck with the old version. For example,\n    // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n    // sw if there was an update.\n    messaging.swRegistration.update().catch(() => {\n      /* it is non blocking and we don't care if it failed */\n    });\n  } catch (e) {\n    throw ERROR_FACTORY.create(ErrorCode.FAILED_DEFAULT_REGISTRATION, {\n      browserErrorMessage: (e as Error)?.message\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { registerDefaultSw } from './registerDefaultSw';\n\nexport async function updateSwReg(\n  messaging: MessagingService,\n  swRegistration?: ServiceWorkerRegistration | undefined\n): Promise<void> {\n  if (!swRegistration && !messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  if (!swRegistration && !!messaging.swRegistration) {\n    return;\n  }\n\n  if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n  }\n\n  messaging.swRegistration = swRegistration;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\n\nexport async function updateVapidKey(\n  messaging: MessagingService,\n  vapidKey?: string | undefined\n): Promise<void> {\n  if (!!vapidKey) {\n    messaging.vapidKey = vapidKey;\n  } else if (!messaging.vapidKey) {\n    messaging.vapidKey = DEFAULT_VAPID_KEY;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { getTokenInternal } from '../internals/token-manager';\nimport { updateSwReg } from '../helpers/updateSwReg';\nimport { updateVapidKey } from '../helpers/updateVapidKey';\nimport { GetTokenOptions } from '../interfaces/public-types';\n\nexport async function getToken(\n  messaging: MessagingService,\n  options?: GetTokenOptions\n): Promise<string> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (Notification.permission === 'default') {\n    await Notification.requestPermission();\n  }\n\n  if (Notification.permission !== 'granted') {\n    throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n  }\n\n  await updateVapidKey(messaging, options?.vapidKey);\n  await updateSwReg(messaging, options?.serviceWorkerRegistration);\n\n  return getTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\nimport {\n  ConsoleMessageData,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function logToScion(\n  messaging: MessagingService,\n  messageType: MessageType,\n  data: ConsoleMessageData\n): Promise<void> {\n  const eventType = getEventType(messageType);\n  const analytics =\n    await messaging.firebaseDependencies.analyticsProvider.get();\n  analytics.logEvent(eventType, {\n    /* eslint-disable camelcase */\n    message_id: data[CONSOLE_CAMPAIGN_ID],\n    message_name: data[CONSOLE_CAMPAIGN_NAME],\n    message_time: data[CONSOLE_CAMPAIGN_TIME],\n    message_device_time: Math.floor(Date.now() / 1000)\n    /* eslint-enable camelcase */\n  });\n}\n\nfunction getEventType(messageType: MessageType): string {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n    default:\n      throw new Error();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MessagePayloadInternal,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { CONSOLE_CAMPAIGN_ANALYTICS_ENABLED } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { logToScion } from '../helpers/logToScion';\n\nexport async function messageEventListener(\n  messaging: MessagingService,\n  event: MessageEvent\n): Promise<void> {\n  const internalPayload = event.data as MessagePayloadInternal;\n\n  if (!internalPayload.isFirebaseMessaging) {\n    return;\n  }\n\n  if (\n    messaging.onMessageHandler &&\n    internalPayload.messageType === MessageType.PUSH_RECEIVED\n  ) {\n    if (typeof messaging.onMessageHandler === 'function') {\n      messaging.onMessageHandler(externalizePayload(internalPayload));\n    } else {\n      messaging.onMessageHandler.next(externalizePayload(internalPayload));\n    }\n  }\n\n  // Log to Scion if applicable\n  const dataPayload = internalPayload.data;\n  if (\n    isConsoleMessage(dataPayload) &&\n    dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1'\n  ) {\n    await logToScion(messaging, internalPayload.messageType!, dataPayload);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactory\n} from '@firebase/component';\nimport {\n  onNotificationClick,\n  onPush,\n  onSubChange\n} from '../listeners/sw-listeners';\n\nimport { GetTokenOptions } from '../interfaces/public-types';\nimport { MessagingInternal } from '@firebase/messaging-interop-types';\nimport { MessagingService } from '../messaging-service';\nimport { ServiceWorkerGlobalScope } from '../util/sw-types';\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport { getToken } from '../api/getToken';\nimport { messageEventListener } from '../listeners/window-listener';\n\nimport { name, version } from '../../package.json';\n\nconst WindowMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  navigator.serviceWorker.addEventListener('message', e =>\n    messageEventListener(messaging as MessagingService, e)\n  );\n\n  return messaging;\n};\n\nconst WindowMessagingInternalFactory: InstanceFactory<'messaging-internal'> = (\n  container: ComponentContainer\n) => {\n  const messaging = container\n    .getProvider('messaging')\n    .getImmediate() as MessagingService;\n\n  const messagingInternal: MessagingInternal = {\n    getToken: (options?: GetTokenOptions) => getToken(messaging, options)\n  };\n\n  return messagingInternal;\n};\n\ndeclare const self: ServiceWorkerGlobalScope;\nconst SwMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  self.addEventListener('push', e => {\n    e.waitUntil(onPush(e, messaging as MessagingService));\n  });\n  self.addEventListener('pushsubscriptionchange', e => {\n    e.waitUntil(onSubChange(e, messaging as MessagingService));\n  });\n  self.addEventListener('notificationclick', e => {\n    e.waitUntil(onNotificationClick(e));\n  });\n\n  return messaging;\n};\n\nexport function registerMessagingInWindow(): void {\n  _registerComponent(\n    new Component('messaging', WindowMessagingFactory, ComponentType.PUBLIC)\n  );\n\n  _registerComponent(\n    new Component(\n      'messaging-internal',\n      WindowMessagingInternalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n\n  registerVersion(name, version);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\n/**\n * The messaging instance registered in sw is named differently than that of in client. This is\n * because both `registerMessagingInWindow` and `registerMessagingInSw` would be called in\n * `messaging-compat` and component with the same name can only be registered once.\n */\nexport function registerMessagingInSw(): void {\n  _registerComponent(\n    new Component('messaging-sw', SwMessagingFactory, ComponentType.PUBLIC)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  areCookiesEnabled,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\n\n/**\n * Checks if all required APIs exist in the browser.\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isWindowSupported(): Promise<boolean> {\n  try {\n    // This throws if open() is unsupported, so adding it to the conditional\n    // statement below can cause an uncaught error.\n    await validateIndexedDBOpenable();\n  } catch (e) {\n    return false;\n  }\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    typeof window !== 'undefined' &&\n    isIndexedDBAvailable() &&\n    areCookiesEnabled() &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks whether all required APIs exist within SW Context\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isSwSupported(): Promise<boolean> {\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    isIndexedDBAvailable() &&\n    (await validateIndexedDBOpenable()) &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { deleteTokenInternal } from '../internals/token-manager';\nimport { registerDefaultSw } from '../helpers/registerDefaultSw';\n\nexport async function deleteToken(\n  messaging: MessagingService\n): Promise<boolean> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (!messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  return deleteTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from './util/errors';\nimport { FirebaseApp, _getProvider, getApp } from '@firebase/app';\nimport {\n  GetTokenOptions,\n  MessagePayload,\n  Messaging\n} from './interfaces/public-types';\nimport {\n  NextFn,\n  Observer,\n  Unsubscribe,\n  getModularInstance\n} from '@firebase/util';\nimport { isSwSupported, isWindowSupported } from './api/isSupported';\n\nimport { MessagingService } from './messaging-service';\nimport { deleteToken as _deleteToken } from './api/deleteToken';\nimport { getToken as _getToken } from './api/getToken';\nimport { onBackgroundMessage as _onBackgroundMessage } from './api/onBackgroundMessage';\nimport { onMessage as _onMessage } from './api/onMessage';\nimport { _setDeliveryMetricsExportedToBigQueryEnabled } from './api/setDeliveryMetricsExportedToBigQueryEnabled';\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInWindow(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isWindowSupported().then(\n    isSupported => {\n      // If `isWindowSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isWindowSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging').getImmediate();\n}\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInSw(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isSwSupported().then(\n    isSupported => {\n      // If `isSwSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isSwSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging-sw').getImmediate();\n}\n\n/**\n * Subscribes the {@link Messaging} instance to push notifications. Returns an Firebase Cloud\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\n * instance.\n *\n * If a notification permission isn't already granted, this method asks the user for permission. The\n * returned promise rejects if the user does not allow the app to show notifications.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param options - Provides an optional vapid key and an optinoal service worker registration\n *\n * @returns The promise resolves with an FCM registration token.\n *\n * @public\n */\nexport async function getToken(\n  messaging: Messaging,\n  options?: GetTokenOptions\n): Promise<string> {\n  messaging = getModularInstance(messaging);\n  return _getToken(messaging as MessagingService, options);\n}\n\n/**\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\n * the {@link Messaging} instance from the push subscription.\n *\n * @param messaging - The {@link Messaging} instance.\n *\n * @returns The promise resolves when the token has been successfully deleted.\n *\n * @public\n */\nexport function deleteToken(messaging: Messaging): Promise<boolean> {\n  messaging = getModularInstance(messaging);\n  return _deleteToken(messaging as MessagingService);\n}\n\n/**\n * When a push message is received and the user is currently on a page for your origin, the\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\n * the push message.\n *\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined,\n *     is called when a message is received and the user is currently viewing your page.\n * @returns To stop listening for messages execute this returned function.\n *\n * @public\n */\nexport function onMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Called when a message is received while the app is in the background. An app is considered to be\n * in the background if no active window is displayed.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\n * message is received and the app is currently in the background.\n *\n * @returns To stop listening for messages execute this returned function\n *\n * @public\n */\nexport function onBackgroundMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onBackgroundMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Enables or disables Firebase Cloud Messaging message delivery metrics export to BigQuery. By\n * default, message delivery metrics are not exported to BigQuery. Use this method to enable or\n * disable the export at runtime.\n *\n * @param messaging - The `FirebaseMessaging` instance.\n * @param enable - Whether Firebase Cloud Messaging should export message delivery metrics to\n * BigQuery.\n *\n * @public\n */\nexport function experimentalSetDeliveryMetricsExportedToBigQueryEnabled(\n  messaging: Messaging,\n  enable: boolean\n): void {\n  messaging = getModularInstance(messaging);\n  return _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable);\n}\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"react\")):\"function\"==typeof define&&define.amd?define([\"react\"],t):\"object\"==typeof exports?exports.ReactCrop=t(require(\"react\")):e.ReactCrop=t(e.React)}(this,(e=>(()=>{\"use strict\";var t={899:t=>{t.exports=e}},n={};function o(e){var r=n[e];if(void 0!==r)return r.exports;var i=n[e]={exports:{}};return t[e](i,i.exports,o),i.exports}o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})};var r={};return(()=>{o.r(r),o.d(r,{Component:()=>u,areCropsEqual:()=>h,centerCrop:()=>d,clamp:()=>a,containCrop:()=>p,convertToPercentCrop:()=>c,convertToPixelCrop:()=>l,default:()=>u,defaultCrop:()=>i,makeAspectCrop:()=>s,nudgeCrop:()=>g});var e=o(899),t=o.n(e);function n(e){var t,o,r=\"\";if(\"string\"==typeof e||\"number\"==typeof e)r+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(o=n(e[t]))&&(r&&(r+=\" \"),r+=o);else for(t in e)e[t]&&(r&&(r+=\" \"),r+=t);return r}const i={x:0,y:0,width:0,height:0,unit:\"px\"};function a(e,t,n){return Math.min(Math.max(e,t),n)}function h(e,t){return e.width===t.width&&e.height===t.height&&e.x===t.x&&e.y===t.y&&e.unit===t.unit}function s(e,t,n,o){const r=l(e,n,o);return e.width&&(r.height=r.width/t),e.height&&(r.width=r.height*t),r.y+r.height>o&&(r.height=o-r.y,r.width=r.height*t),r.x+r.width>n&&(r.width=n-r.x,r.height=r.width/t),\"%\"===e.unit?c(r,n,o):r}function d(e,t,n){const o=l(e,t,n);return o.x=(t-o.width)/2,o.y=(n-o.height)/2,\"%\"===e.unit?c(o,t,n):o}function c(e,t,n){return\"%\"===e.unit?{...i,...e,unit:\"%\"}:{unit:\"%\",x:e.x?e.x/t*100:0,y:e.y?e.y/n*100:0,width:e.width?e.width/t*100:0,height:e.height?e.height/n*100:0}}function l(e,t,n){return e.unit?\"px\"===e.unit?{...i,...e,unit:\"px\"}:{unit:\"px\",x:e.x?e.x*t/100:0,y:e.y?e.y*n/100:0,width:e.width?e.width*t/100:0,height:e.height?e.height*n/100:0}:{...i,...e,unit:\"px\"}}function p(e,t,n,o,r,i=0,a=0,h=o,s=r){const d={...e};let c=Math.min(i,o),l=Math.min(a,r),p=Math.min(h,o),g=Math.min(s,r);t&&(t>1?(c=a?a*t:c,l=c/t,p=h*t):(l=i?i/t:l,c=l*t,g=s/t)),d.y<0&&(d.height=Math.max(d.height+d.y,l),d.y=0),d.x<0&&(d.width=Math.max(d.width+d.x,c),d.x=0);const w=o-(d.x+d.width);w<0&&(d.x=Math.min(d.x,o-c),d.width+=w);const u=r-(d.y+d.height);if(u<0&&(d.y=Math.min(d.y,r-l),d.height+=u),d.width<c&&(\"sw\"!==n&&\"nw\"!=n||(d.x-=c-d.width),d.width=c),d.height<l&&(\"nw\"!==n&&\"ne\"!=n||(d.y-=l-d.height),d.height=l),d.width>p&&(\"sw\"!==n&&\"nw\"!=n||(d.x-=p-d.width),d.width=p),d.height>g&&(\"nw\"!==n&&\"ne\"!=n||(d.y-=g-d.height),d.height=g),t){const e=d.width/d.height;if(e<t){const e=Math.max(d.width/t,l);\"nw\"!==n&&\"ne\"!=n||(d.y-=e-d.height),d.height=e}else if(e>t){const e=Math.max(d.height*t,c);\"sw\"!==n&&\"nw\"!=n||(d.x-=e-d.width),d.width=e}}return d}function g(e,t,n,o){const r={...e};return\"ArrowLeft\"===t?\"nw\"===o?(r.x-=n,r.y-=n,r.width+=n,r.height+=n):\"w\"===o?(r.x-=n,r.width+=n):\"sw\"===o?(r.x-=n,r.width+=n,r.height+=n):\"ne\"===o?(r.y+=n,r.width-=n,r.height-=n):\"e\"===o?r.width-=n:\"se\"===o&&(r.width-=n,r.height-=n):\"ArrowRight\"===t&&(\"nw\"===o?(r.x+=n,r.y+=n,r.width-=n,r.height-=n):\"w\"===o?(r.x+=n,r.width-=n):\"sw\"===o?(r.x+=n,r.width-=n,r.height-=n):\"ne\"===o?(r.y-=n,r.width+=n,r.height+=n):\"e\"===o?r.width+=n:\"se\"===o&&(r.width+=n,r.height+=n)),\"ArrowUp\"===t?\"nw\"===o?(r.x-=n,r.y-=n,r.width+=n,r.height+=n):\"n\"===o?(r.y-=n,r.height+=n):\"ne\"===o?(r.y-=n,r.width+=n,r.height+=n):\"sw\"===o?(r.x+=n,r.width-=n,r.height-=n):\"s\"===o?r.height-=n:\"se\"===o&&(r.width-=n,r.height-=n):\"ArrowDown\"===t&&(\"nw\"===o?(r.x+=n,r.y+=n,r.width-=n,r.height-=n):\"n\"===o?(r.y+=n,r.height-=n):\"ne\"===o?(r.y+=n,r.width-=n,r.height-=n):\"sw\"===o?(r.x-=n,r.width+=n,r.height+=n):\"s\"===o?r.height+=n:\"se\"===o&&(r.width+=n,r.height+=n)),r}const w={capture:!0,passive:!1};class u extends e.PureComponent{constructor(){super(...arguments),this.docMoveBound=!1,this.mouseDownOnCrop=!1,this.dragStarted=!1,this.evData={startClientX:0,startClientY:0,startCropX:0,startCropY:0,clientX:0,clientY:0,isResize:!0},this.componentRef=(0,e.createRef)(),this.mediaRef=(0,e.createRef)(),this.initChangeCalled=!1,this.state={cropIsActive:!1,newCropIsBeingDrawn:!1},this.onCropPointerDown=e=>{const{crop:t,disabled:n}=this.props,o=this.getBox();if(!t)return;const r=l(t,o.width,o.height);if(n)return;e.cancelable&&e.preventDefault(),this.bindDocMove(),this.componentRef.current.focus({preventScroll:!0});const i=e.target.dataset.ord,a=Boolean(i);let h=e.clientX,s=e.clientY,d=r.x,c=r.y;if(i){const t=e.clientX-o.x,n=e.clientY-o.y;let a=0,l=0;\"ne\"===i||\"e\"==i?(a=t-(r.x+r.width),l=n-r.y,d=r.x,c=r.y+r.height):\"se\"===i||\"s\"===i?(a=t-(r.x+r.width),l=n-(r.y+r.height),d=r.x,c=r.y):\"sw\"===i||\"w\"==i?(a=t-r.x,l=n-(r.y+r.height),d=r.x+r.width,c=r.y):\"nw\"!==i&&\"n\"!=i||(a=t-r.x,l=n-r.y,d=r.x+r.width,c=r.y+r.height),h=d+o.x+a,s=c+o.y+l}this.evData={startClientX:h,startClientY:s,startCropX:d,startCropY:c,clientX:e.clientX,clientY:e.clientY,isResize:a,ord:i},this.mouseDownOnCrop=!0,this.setState({cropIsActive:!0})},this.onComponentPointerDown=e=>{const{crop:t,disabled:n,locked:o,keepSelection:r,onChange:i}=this.props,a=this.getBox();if(n||o||r&&t)return;e.cancelable&&e.preventDefault(),this.bindDocMove(),this.componentRef.current.focus({preventScroll:!0});const h=e.clientX-a.x,s=e.clientY-a.y,d={unit:\"px\",x:h,y:s,width:0,height:0};this.evData={startClientX:e.clientX,startClientY:e.clientY,startCropX:h,startCropY:s,clientX:e.clientX,clientY:e.clientY,isResize:!0},this.mouseDownOnCrop=!0,i(l(d,a.width,a.height),c(d,a.width,a.height)),this.setState({cropIsActive:!0,newCropIsBeingDrawn:!0})},this.onDocPointerMove=e=>{const{crop:t,disabled:n,onChange:o,onDragStart:r}=this.props,i=this.getBox();if(n||!t||!this.mouseDownOnCrop)return;e.cancelable&&e.preventDefault(),this.dragStarted||(this.dragStarted=!0,r&&r(e));const{evData:a}=this;let s;a.clientX=e.clientX,a.clientY=e.clientY,s=a.isResize?this.resizeCrop():this.dragCrop(),h(t,s)||o(l(s,i.width,i.height),c(s,i.width,i.height))},this.onComponentKeyDown=e=>{const{crop:t,disabled:n,onChange:o,onComplete:r}=this.props,i=this.getBox();if(n)return;const h=e.key;let s=!1;if(!t)return;const d=this.makePixelCrop(),p=(navigator.platform.match(\"Mac\")?e.metaKey:e.ctrlKey)?u.nudgeStepLarge:e.shiftKey?u.nudgeStepMedium:u.nudgeStep;if(\"ArrowLeft\"===h?(d.x-=p,s=!0):\"ArrowRight\"===h?(d.x+=p,s=!0):\"ArrowUp\"===h?(d.y-=p,s=!0):\"ArrowDown\"===h&&(d.y+=p,s=!0),s){e.cancelable&&e.preventDefault(),d.x=a(d.x,0,i.width-d.width),d.y=a(d.y,0,i.height-d.height);const t=l(d,i.width,i.height),n=c(d,i.width,i.height);o(t,n),r&&r(t,n)}},this.onHandlerKeyDown=(e,t)=>{const{aspect:n=0,crop:o,disabled:r,minWidth:i=0,minHeight:a=0,maxWidth:s,maxHeight:d,onChange:w,onComplete:m}=this.props,y=this.getBox();if(r||!o)return;if(\"ArrowUp\"!==e.key&&\"ArrowDown\"!==e.key&&\"ArrowLeft\"!==e.key&&\"ArrowRight\"!==e.key)return;e.stopPropagation(),e.preventDefault();const x=(navigator.platform.match(\"Mac\")?e.metaKey:e.ctrlKey)?u.nudgeStepLarge:e.shiftKey?u.nudgeStepMedium:u.nudgeStep,C=p(g(l(o,y.width,y.height),e.key,x,t),n,t,y.width,y.height,i,a,s,d);if(!h(o,C)){const e=c(C,y.width,y.height);w(C,e),m&&m(C,e)}},this.onDocPointerDone=e=>{const{crop:t,disabled:n,onComplete:o,onDragEnd:r}=this.props,i=this.getBox();this.unbindDocMove(),!n&&t&&this.mouseDownOnCrop&&(this.mouseDownOnCrop=!1,this.dragStarted=!1,r&&r(e),o&&o(l(t,i.width,i.height),c(t,i.width,i.height)),this.setState({cropIsActive:!1,newCropIsBeingDrawn:!1}))},this.onDragFocus=e=>{var t;null===(t=this.componentRef.current)||void 0===t||t.scrollTo(0,0)}}get document(){return document}getBox(){const e=this.mediaRef.current;if(!e)return{x:0,y:0,width:0,height:0};const{x:t,y:n,width:o,height:r}=e.getBoundingClientRect();return{x:t,y:n,width:o,height:r}}componentDidUpdate(e){const{crop:t,onComplete:n}=this.props;if(n&&!e.crop&&t){const{width:e,height:o}=this.getBox();e&&o&&n(l(t,e,o),c(t,e,o))}}componentWillUnmount(){this.resizeObserver&&this.resizeObserver.disconnect()}bindDocMove(){this.docMoveBound||(this.document.addEventListener(\"pointermove\",this.onDocPointerMove,w),this.document.addEventListener(\"pointerup\",this.onDocPointerDone,w),this.document.addEventListener(\"pointercancel\",this.onDocPointerDone,w),this.docMoveBound=!0)}unbindDocMove(){this.docMoveBound&&(this.document.removeEventListener(\"pointermove\",this.onDocPointerMove,w),this.document.removeEventListener(\"pointerup\",this.onDocPointerDone,w),this.document.removeEventListener(\"pointercancel\",this.onDocPointerDone,w),this.docMoveBound=!1)}getCropStyle(){const{crop:e}=this.props;if(e)return{top:`${e.y}${e.unit}`,left:`${e.x}${e.unit}`,width:`${e.width}${e.unit}`,height:`${e.height}${e.unit}`}}dragCrop(){const{evData:e}=this,t=this.getBox(),n=this.makePixelCrop(),o=e.clientX-e.startClientX,r=e.clientY-e.startClientY;return n.x=a(e.startCropX+o,0,t.width-n.width),n.y=a(e.startCropY+r,0,t.height-n.height),n}getPointRegion(e){const{evData:t}=this,n=t.clientX-e.x,o=t.clientY-e.y<t.startCropY;return n<t.startCropX?o?\"nw\":\"sw\":o?\"ne\":\"se\"}resizeCrop(){const{evData:e}=this,t=this.getBox(),{aspect:n=0,minWidth:o=0,minHeight:r=0,maxWidth:i,maxHeight:a}=this.props,h=this.getPointRegion(t),s=this.makePixelCrop(),d=e.ord?e.ord:h,c=e.clientX-e.startClientX,l=e.clientY-e.startClientY,g={unit:\"px\",x:0,y:0,width:0,height:0};\"ne\"===h?(g.x=e.startCropX,g.width=c,n?(g.height=g.width/n,g.y=e.startCropY-g.height):(g.height=Math.abs(l),g.y=e.startCropY-g.height)):\"se\"===h?(g.x=e.startCropX,g.y=e.startCropY,g.width=c,g.height=n?g.width/n:l):\"sw\"===h?(g.x=e.startCropX+c,g.y=e.startCropY,g.width=Math.abs(c),g.height=n?g.width/n:l):\"nw\"===h&&(g.x=e.startCropX+c,g.width=Math.abs(c),n?(g.height=g.width/n,g.y=e.startCropY-g.height):(g.height=Math.abs(l),g.y=e.startCropY+l));const w=p(g,n,h,t.width,t.height,o,r,i,a);return n||u.xyOrds.indexOf(d)>-1?(s.x=w.x,s.y=w.y,s.width=w.width,s.height=w.height):u.xOrds.indexOf(d)>-1?(s.x=w.x,s.width=w.width):u.yOrds.indexOf(d)>-1&&(s.y=w.y,s.height=w.height),s}createCropSelection(){const{ariaLabels:e=u.defaultProps.ariaLabels,disabled:n,locked:o,renderSelectionAddon:r,ruleOfThirds:i,crop:a}=this.props,h=this.getCropStyle();if(a)return t().createElement(\"div\",{style:h,className:\"ReactCrop__crop-selection\",onPointerDown:this.onCropPointerDown,\"aria-label\":e.cropArea,tabIndex:0,onKeyDown:this.onComponentKeyDown,role:\"group\"},!n&&!o&&t().createElement(\"div\",{className:\"ReactCrop__drag-elements\",onFocus:this.onDragFocus},t().createElement(\"div\",{className:\"ReactCrop__drag-bar ord-n\",\"data-ord\":\"n\"}),t().createElement(\"div\",{className:\"ReactCrop__drag-bar ord-e\",\"data-ord\":\"e\"}),t().createElement(\"div\",{className:\"ReactCrop__drag-bar ord-s\",\"data-ord\":\"s\"}),t().createElement(\"div\",{className:\"ReactCrop__drag-bar ord-w\",\"data-ord\":\"w\"}),t().createElement(\"div\",{className:\"ReactCrop__drag-handle ord-nw\",\"data-ord\":\"nw\",tabIndex:0,\"aria-label\":e.nwDragHandle,onKeyDown:e=>this.onHandlerKeyDown(e,\"nw\"),role:\"button\"}),t().createElement(\"div\",{className:\"ReactCrop__drag-handle ord-n\",\"data-ord\":\"n\",tabIndex:0,\"aria-label\":e.nDragHandle,onKeyDown:e=>this.onHandlerKeyDown(e,\"n\"),role:\"button\"}),t().createElement(\"div\",{className:\"ReactCrop__drag-handle ord-ne\",\"data-ord\":\"ne\",tabIndex:0,\"aria-label\":e.neDragHandle,onKeyDown:e=>this.onHandlerKeyDown(e,\"ne\"),role:\"button\"}),t().createElement(\"div\",{className:\"ReactCrop__drag-handle ord-e\",\"data-ord\":\"e\",tabIndex:0,\"aria-label\":e.eDragHandle,onKeyDown:e=>this.onHandlerKeyDown(e,\"e\"),role:\"button\"}),t().createElement(\"div\",{className:\"ReactCrop__drag-handle ord-se\",\"data-ord\":\"se\",tabIndex:0,\"aria-label\":e.seDragHandle,onKeyDown:e=>this.onHandlerKeyDown(e,\"se\"),role:\"button\"}),t().createElement(\"div\",{className:\"ReactCrop__drag-handle ord-s\",\"data-ord\":\"s\",tabIndex:0,\"aria-label\":e.sDragHandle,onKeyDown:e=>this.onHandlerKeyDown(e,\"s\"),role:\"button\"}),t().createElement(\"div\",{className:\"ReactCrop__drag-handle ord-sw\",\"data-ord\":\"sw\",tabIndex:0,\"aria-label\":e.swDragHandle,onKeyDown:e=>this.onHandlerKeyDown(e,\"sw\"),role:\"button\"}),t().createElement(\"div\",{className:\"ReactCrop__drag-handle ord-w\",\"data-ord\":\"w\",tabIndex:0,\"aria-label\":e.wDragHandle,onKeyDown:e=>this.onHandlerKeyDown(e,\"w\"),role:\"button\"})),r&&t().createElement(\"div\",{className:\"ReactCrop__selection-addon\",onMouseDown:e=>e.stopPropagation()},r(this.state)),i&&t().createElement(t().Fragment,null,t().createElement(\"div\",{className:\"ReactCrop__rule-of-thirds-hz\"}),t().createElement(\"div\",{className:\"ReactCrop__rule-of-thirds-vt\"})))}makePixelCrop(){const e={...i,...this.props.crop||{}},t=this.getBox();return l(e,t.width,t.height)}render(){const{aspect:e,children:o,circularCrop:r,className:i,crop:a,disabled:h,locked:s,style:d,ruleOfThirds:c}=this.props,{cropIsActive:l,newCropIsBeingDrawn:p}=this.state,g=a?this.createCropSelection():null,w=function(){for(var e,t,o=0,r=\"\";o<arguments.length;)(e=arguments[o++])&&(t=n(e))&&(r&&(r+=\" \"),r+=t);return r}(\"ReactCrop\",i,{\"ReactCrop--active\":l,\"ReactCrop--disabled\":h,\"ReactCrop--locked\":s,\"ReactCrop--new-crop\":p,\"ReactCrop--fixed-aspect\":a&&e,\"ReactCrop--circular-crop\":a&&r,\"ReactCrop--rule-of-thirds\":a&&c,\"ReactCrop--invisible-crop\":!this.dragStarted&&a&&!a.width&&!a.height});return t().createElement(\"div\",{ref:this.componentRef,className:w,style:d},t().createElement(\"div\",{ref:this.mediaRef,className:\"ReactCrop__child-wrapper\",onPointerDown:this.onComponentPointerDown},o),g)}}u.xOrds=[\"e\",\"w\"],u.yOrds=[\"n\",\"s\"],u.xyOrds=[\"nw\",\"ne\",\"se\",\"sw\"],u.nudgeStep=1,u.nudgeStepMedium=10,u.nudgeStepLarge=100,u.defaultProps={ariaLabels:{cropArea:\"Use the arrow keys to move the crop selection area\",nwDragHandle:\"Use the arrow keys to move the north west drag handle to change the crop selection area\",nDragHandle:\"Use the up and down arrow keys to move the north drag handle to change the crop selection area\",neDragHandle:\"Use the arrow keys to move the north east drag handle to change the crop selection area\",eDragHandle:\"Use the up and down arrow keys to move the east drag handle to change the crop selection area\",seDragHandle:\"Use the arrow keys to move the south east drag handle to change the crop selection area\",sDragHandle:\"Use the up and down arrow keys to move the south drag handle to change the crop selection area\",swDragHandle:\"Use the arrow keys to move the south west drag handle to change the crop selection area\",wDragHandle:\"Use the up and down arrow keys to move the west drag handle to change the crop selection area\"}}})(),r})()));","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n    [index: string]: string | number; // to make Typescript 3.8 happy\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & { customData: ServerErrorData };\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { AppConfig } from '../interfaces/installation-impl';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\n\nexport async function createInstallationRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || (self as unknown as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\n\n/** Returns a string key that can be used to identify the app. */\nexport function getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getKey } from '../util/get-key';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { IdChangeCallbackFn } from '../api';\n\nconst fidChangeCallbacks: Map<string, Set<IdChangeCallbackFn>> = new Map();\n\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nexport function fidChanged(appConfig: AppConfig, fid: string): void {\n  const key = getKey(appConfig);\n\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nexport function addCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n\n  const key = getKey(appConfig);\n\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\n\nexport function removeCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  const key = getKey(appConfig);\n\n  const callbackSet = fidChangeCallbacks.get(key);\n\n  if (!callbackSet) {\n    return;\n  }\n\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\n\nfunction callFidChangeCallbacks(key: string, fid: string): void {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\n\nfunction broadcastFidChange(key: string, fid: string): void {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({ key, fid });\n  }\n  closeBroadcastChannel();\n}\n\nlet broadcastChannel: BroadcastChannel | null = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel(): BroadcastChannel | null {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel(): void {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, IDBPDatabase, openDB } from 'idb';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { InstallationEntry } from '../interfaces/installation-entry';\nimport { getKey } from '../util/get-key';\nimport { fidChanged } from './fid-changed';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\ninterface InstallationsDB extends DBSchema {\n  'firebase-installations-store': {\n    key: string;\n    value: InstallationEntry | undefined;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<InstallationsDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<InstallationsDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key) as Promise<InstallationEntry>;\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = (await objectStore.get(key)) as InstallationEntry;\n  await objectStore.put(value, key);\n  await tx.done;\n\n  if (!oldValue || oldValue.fid !== value.fid) {\n    fidChanged(appConfig, value.fid);\n  }\n\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = (await store.get(\n    key\n  )) as InstallationEntry;\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n  await tx.done;\n\n  if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n    fidChanged(appConfig, newValue.fid);\n  }\n\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.done;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallationRequest } from '../functions/create-installation-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  installations: FirebaseInstallationsImpl\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(installations.appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      installations,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      installations,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(installations)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(\n      installations,\n      installationEntry\n    );\n    return set(installations.appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(installations.appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(\n    installations.appConfig\n  );\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(installations.appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const { installationEntry, registrationPromise } =\n      await getInstallationEntry(installations);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport {\n  FirebaseInstallationsImpl,\n  AppConfig\n} from '../interfaces/installation-impl';\n\nexport async function generateAuthTokenRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION,\n      appId: appConfig.appId\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken =\n      extractAuthTokenInfoFromResponse(responseValue);\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthTokenRequest } from '../functions/generate-auth-token-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(installations.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(installations.appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(installations.appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(installations, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthTokenRequest(\n      installations,\n      installationEntry\n    );\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(installations.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (\n      isServerError(e) &&\n      (e.customData.serverCode === 401 || e.customData.serverCode === 404)\n    ) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(installations.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Returns a Firebase Installations auth token, identifying the current\n * Firebase Installation.\n * @param installations - The `Installations` instance.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getToken(\n  installations: Installations,\n  forceRefresh = false\n): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  await completeInstallationRegistration(installationsImpl);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(installations);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Creates a Firebase Installation if there isn't one for the app and\n * returns the Installation ID.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nexport async function getId(installations: Installations): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    installationsImpl\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(installationsImpl).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { RegisteredInstallationEntry } from '../interfaces/installation-entry';\nimport {\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function deleteInstallationRequest(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<void> {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request: RequestInit = {\n    method: 'DELETE',\n    headers\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (!response.ok) {\n    throw await getErrorFromResponse('Delete Installation', response);\n  }\n}\n\nfunction getDeleteEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport { FirebaseError } from '@firebase/util';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: Array<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId'\n  ];\n\n  for (const keyName of configKeys) {\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: app.options.projectId!,\n    apiKey: app.options.apiKey!,\n    appId: app.options.appId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, _getProvider } from '@firebase/app';\nimport {\n  Component,\n  ComponentType,\n  InstanceFactory,\n  ComponentContainer\n} from '@firebase/component';\nimport { getId, getToken } from '../api/index';\nimport { _FirebaseInstallationsInternal } from '../interfaces/public-types';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { extractAppConfig } from '../helpers/extract-app-config';\n\nconst INSTALLATIONS_NAME = 'installations';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\n\nconst publicFactory: InstanceFactory<'installations'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Throws if app isn't configured properly.\n  const appConfig = extractAppConfig(app);\n  const heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n\n  const installationsImpl: FirebaseInstallationsImpl = {\n    app,\n    appConfig,\n    heartbeatServiceProvider,\n    _delete: () => Promise.resolve()\n  };\n  return installationsImpl;\n};\n\nconst internalFactory: InstanceFactory<'installations-internal'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Internal FIS instance relies on public FIS instance.\n  const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n\n  const installationsInternal: _FirebaseInstallationsInternal = {\n    getId: () => getId(installations),\n    getToken: (forceRefresh?: boolean) => getToken(installations, forceRefresh)\n  };\n  return installationsInternal;\n};\n\nexport function registerInstallations(): void {\n  _registerComponent(\n    new Component(INSTALLATIONS_NAME, publicFactory, ComponentType.PUBLIC)\n  );\n  _registerComponent(\n    new Component(\n      INSTALLATIONS_NAME_INTERNAL,\n      internalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n}\n","/**\n * Firebase Installations\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerInstallations } from './functions/config';\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nexport * from './api';\nexport * from './interfaces/public-types';\n\nregisterInstallations();\nregisterVersion(name, version);\n// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\nregisterVersion(name, version, '__BUILD_TARGET__');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n"],"names":["_construct","Parent","args","Class","isNativeReflectConstruct","Reflect","construct","bind","a","push","apply","instance","Function","setPrototypeOf","prototype","arguments","_wrapNativeSuper","_cache","Map","undefined","fn","toString","call","indexOf","TypeError","has","get","set","Wrapper","getPrototypeOf","this","constructor","Object","create","value","enumerable","writable","configurable","stringToByteArray","str","out","p","i","length","c","charCodeAt","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","Array","isArray","Error","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","join","encodeString","btoa","decodeString","bytes","pos","c1","String","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","base64urlEncodeWithoutPadding","utf8Bytes","base64Encode","replace","base64Decode","e","console","error","isBrowserExtension","runtime","chrome","browser","id","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","Promise","resolve","reject","preExist","DB_CHECK_NAME","request","self","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","message","areCookiesEnabled","navigator","cookieEnabled","getDefaultsFromGlobal","window","global","getGlobal","__FIREBASE_DEFAULTS__","getDefaults","process","defaultsJsonString","JSON","parse","getDefaultsFromEnvVariable","document","match","cookie","decoded","getDefaultsFromCookie","info","getDefaultAppConfig","config","Deferred","promise","callback","catch","FirebaseError","code","customData","name","captureStackTrace","ErrorFactory","service","serviceName","errors","fullCode","template","replaceTemplate","fullMessage","data","PATTERN","_","key","deepEqual","b","aKeys","keys","bKeys","k","includes","aProp","bProp","isObject","thing","MAX_VALUE_MILLIS","calculateBackoffMillis","backoffCount","intervalMillis","backoffFactor","currBaseValue","Math","pow","randomWait","round","random","min","getModularInstance","_delegate","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","createSvgIcon","getChipUtilityClass","ChipRoot","color","iconColor","clickable","onDelete","size","variant","chipClasses","avatar","capitalize","icon","deleteIcon","deletable","theme","deleteIconColor","alpha","palette","text","primary","textColor","mode","grey","maxWidth","fontFamily","typography","fontSize","pxToRem","display","alignItems","justifyContent","height","vars","backgroundColor","action","selected","borderRadius","whiteSpace","transition","transitions","cursor","outline","textDecoration","border","padding","verticalAlign","boxSizing","opacity","disabledOpacity","pointerEvents","marginLeft","marginRight","width","Chip","defaultAvatarColor","contrastText","dark","secondary","defaultIconColor","WebkitTapHighlightColor","primaryChannel","margin","contrastTextChannel","main","selectedChannel","selectedOpacity","focusOpacity","userSelect","hoverOpacity","boxShadow","shadows","defaultBorder","hover","focus","mainChannel","ChipLabel","label","textOverflow","paddingLeft","paddingRight","isDeleteKeyboardEvent","keyboardEvent","avatarProp","clickableProp","ComponentProp","component","deleteIconProp","disabled","iconProp","onClick","onKeyDown","onKeyUp","chipRef","handleRef","useForkRef","handleDeleteIconClick","event","stopPropagation","ButtonBase","slots","moreProps","focusVisibleClassName","focusVisible","disableRipple","CancelIcon","_jsxs","as","currentTarget","target","preventDefault","current","blur","children","ListItemTextRoot","listItemTextClasses","inset","multiline","dense","flex","minWidth","marginTop","marginBottom","ListItemText","disableTypography","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","ListContext","getListItemTextUtilityClass","type","Typography","ANALYTICS_TYPE","FETCH_TIMEOUT_MILLIS","DYNAMIC_CONFIG_URL","GTAG_URL","logger","Logger","promiseAllSettled","promises","all","map","insertScriptTag","dataLayerName","measurementId","script","createElement","src","async","head","appendChild","gtagOnConfig","gtagCore","initializationPromisesMap","dynamicConfigPromisesList","measurementIdToAppId","gtagParams","correspondingAppId","dynamicConfigResults","foundConfig","find","appId","gtagOnEvent","initializationPromisesToWaitFor","gaSendToList","sendToId","initializationPromise","values","wrapOrCreateGtag","gtagFunctionName","_args","command","idOrNameOrParams","wrapGtag","wrappedGtag","findGtagScriptOnPage","scriptTags","getElementsByTagName","tag","ERRORS","ERROR_FACTORY","RetryData","throttleMetadata","metadata","defaultRetryData","getHeaders","apiKey","Headers","Accept","fetchDynamicConfig","appFields","method","headers","appUrl","fetch","response","status","errorMessage","json","jsonResponse","httpStatus","responseMessage","fetchDynamicConfigWithRetry","app","retryData","timeoutMillis","options","getThrottleMetadata","throttleEndTimeMillis","Date","now","signal","AnalyticsAbortSignal","setTimeout","abort","attemptFetchDynamicConfigWithRetry","setAbortableTimeout","warn","deleteThrottleMetadata","isRetriableError","backoffMillis","Number","setThrottleMetadata","debug","max","timeout","addEventListener","clearTimeout","defaultEventParametersForInit","defaultConsentSettingsForInit","listener","listeners","forEach","gtagFunction","eventName","eventParams","params","_setConsentDefaultForInit","consentSettings","_setDefaultEventParametersForInit","customParams","validateIndexedDB","errorInfo","installations","dynamicConfigPromise","then","fidPromise","envIsValid","getId","dynamicConfig","fid","configProperties","update","gtagCoreFunction","wrappedGtagFunction","AnalyticsService","gtagName","globalInitDone","factory","mismatchedEnvMessages","details","index","err","warnOnBrowserContextMismatch","dataLayer","getOrCreateDataLayer","_initializeAnalytics","getAnalytics","getApp","analyticsProvider","_getProvider","isInitialized","getImmediate","initializeAnalytics","existingInstance","getOptions","analyticsInstance","initialize","logEvent","internalLogEvent","_registerComponent","Component","container","analyticsOptions","getProvider","analytics","reason","registerVersion","version","MessageType","DEFAULT_SW_PATH","DEFAULT_SW_SCOPE","DEFAULT_VAPID_KEY","CONSOLE_CAMPAIGN_ID","arrayToBase64","array","uint8Array","Uint8Array","base64ToArray","base64String","repeat","rawData","outputArray","OLD_DB_NAME","OLD_OBJECT_STORE_NAME","migrateOldDatabase","senderId","databases","dbNames","db","tokenDetails","openDB","upgrade","oldVersion","newVersion","upgradeTransaction","objectStoreNames","contains","objectStore","clear","oldDetails","auth","p256dh","endpoint","token","fcmToken","createTime","subscriptionOptions","swScope","vapidKey","deleteDB","checkTokenDetails","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeDb","createObjectStore","dbGet","firebaseDependencies","getKey","transaction","appConfig","oldTokenDetails","dbSet","tx","put","done","dbRemove","delete","ERROR_MAP","requestGetToken","body","getBody","subscribeOptions","stringify","getEndpoint","responseData","requestUpdateToken","updateOptions","requestDeleteToken","unsubscribeOptions","projectId","getToken","authToken","web","applicationPubKey","TOKEN_EXPIRATION_MS","getTokenInternal","messaging","getPushSubscription","swRegistration","pushSubscription","scope","getNewToken","isTokenValid","updateToken","deleteTokenInternal","pushManager","getSubscription","unsubscribe","updatedToken","updatedTokenDetails","subscription","subscribe","userVisibleOnly","applicationServerKey","dbOptions","currentOptions","isVapidKeyEqual","isEndpointEqual","isAuthEqual","isP256dhEqual","externalizePayload","internalPayload","payload","from","collapseKey","collapse_key","messageId","fcmMessageId","messagePayloadInternal","notification","title","image","propagateNotificationPayload","propagateDataPayload","fcmOptions","click_action","link","analyticsLabel","analytics_label","propagateFcmOptions","isConsoleMessage","_mergeStrings","s1","s2","resultArray","getMissingValueError","valueName","MessagingService","keyName","appName","messagingSenderId","extractAppConfig","registerDefaultSw","serviceWorker","register","browserErrorMessage","updateSwReg","ServiceWorkerRegistration","updateVapidKey","Notification","permission","requestPermission","serviceWorkerRegistration","logToScion","messageType","eventType","getEventType","message_id","message_name","CONSOLE_CAMPAIGN_NAME","message_time","CONSOLE_CAMPAIGN_TIME","message_device_time","floor","NOTIFICATION_CLICKED","PUSH_RECEIVED","isFirebaseMessaging","onMessageHandler","next","dataPayload","CONSOLE_CAMPAIGN_ANALYTICS_ENABLED","WindowMessagingFactory","messageEventListener","WindowMessagingInternalFactory","isWindowSupported","hasOwnProperty","PushSubscription","getMessagingInWindow","isSupported","_getToken","module","t","n","o","r","__esModule","defineProperty","Symbol","toStringTag","areCropsEqual","h","centerCrop","clamp","containCrop","convertToPercentCrop","convertToPixelCrop","l","defaultCrop","makeAspectCrop","s","nudgeCrop","g","x","y","unit","w","capture","passive","docMoveBound","mouseDownOnCrop","dragStarted","evData","startClientX","startClientY","startCropX","startCropY","clientX","clientY","isResize","componentRef","createRef","mediaRef","initChangeCalled","state","cropIsActive","newCropIsBeingDrawn","onCropPointerDown","crop","getBox","cancelable","bindDocMove","preventScroll","dataset","ord","Boolean","setState","onComponentPointerDown","locked","keepSelection","onChange","onDocPointerMove","onDragStart","resizeCrop","dragCrop","onComponentKeyDown","onComplete","makePixelCrop","platform","metaKey","ctrlKey","nudgeStepLarge","shiftKey","nudgeStepMedium","nudgeStep","onHandlerKeyDown","aspect","minHeight","maxHeight","m","C","onDocPointerDone","onDragEnd","unbindDocMove","onDragFocus","scrollTo","getBoundingClientRect","resizeObserver","disconnect","removeEventListener","top","left","getPointRegion","abs","xyOrds","xOrds","yOrds","ariaLabels","defaultProps","renderSelectionAddon","ruleOfThirds","getCropStyle","style","onPointerDown","cropArea","tabIndex","role","onFocus","nwDragHandle","nDragHandle","neDragHandle","eDragHandle","seDragHandle","sDragHandle","swDragHandle","wDragHandle","onMouseDown","Fragment","circularCrop","createCropSelection","PureComponent","PlatformLoggerServiceImpl","getProviders","provider","getComponent","isVersionServiceProvider","library","filter","logString","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_apps","_components","_addComponent","addComponent","componentName","heartbeatController","optional","triggerHeartbeat","FirebaseAppImpl","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","val","_isDeleted","isDeleted","initializeApp","rawConfig","existingApp","ComponentContainer","newApp","libraryKeyOrName","libraryMismatch","versionMismatch","warning","STORE_NAME","originalErrorMessage","readHeartbeatsFromIndexedDB","computeKey","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","HeartbeatServiceImpl","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","_heartbeatsCache","platformLogger","agent","getPlatformInfoString","date","getUTCDateString","lastSentHeartbeatDate","heartbeats","some","singleDateHeartbeat","hbTimestamp","valueOf","overwrite","extractHeartbeatsForHeader","heartbeatsToSend","unsentEntries","headerString","toISOString","substring","heartbeatsCache","maxSize","slice","heartbeatEntry","hb","dates","countBytes","pop","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","instanceFactory","instantiationMode","multipleInstances","serviceProps","onInstanceCreated","Provider","instances","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","shouldAutoInitialize","getOrInitializeService","instanceIdentifier","isComponentEager","entries","instanceDeferred","services","INTERNAL","_delete","opts","isComponentSet","normalizedDeferredIdentifier","existingCallbacks","Set","add","callbacks","_a","invokeOnInitCallbacks","providers","setComponent","PENDING_TIMEOUT_MS","PACKAGE_VERSION","INTERNAL_AUTH_VERSION","TOKEN_EXPIRATION_BUFFER","ERROR_DESCRIPTION_MAP","isServerError","getInstallationsEndpoint","extractAuthTokenInfoFromResponse","requestStatus","expiresIn","responseExpiresIn","creationTime","getErrorFromResponse","requestName","responseJson","errorData","serverCode","serverMessage","serverStatus","getHeadersWithAuth","refreshToken","append","getAuthorizationHeader","retryIfServerError","createInstallationRequest","heartbeatServiceProvider","heartbeatService","getHeartbeatsHeader","heartbeatsHeader","authVersion","sdkVersion","ok","responseValue","registeredInstallationEntry","registrationStatus","sleep","ms","VALID_FID_PATTERN","generateFid","fidByteArray","crypto","msCrypto","getRandomValues","substr","encode","test","fidChangeCallbacks","fidChanged","callFidChangeCallbacks","channel","getBroadcastChannel","postMessage","closeBroadcastChannel","broadcastFidChange","broadcastChannel","BroadcastChannel","onmessage","oldValue","remove","updateFn","store","newValue","getInstallationEntry","oldEntry","installationEntry","updateOrCreateInstallationEntry","entryWithPromise","triggerRegistrationIfNecessary","registrationPromise","clearTimedOutRequest","onLine","inProgressEntry","registrationTime","registerInstallation","waitUntilFidRegistration","updateInstallationRequest","entry","generateAuthTokenRequest","getGenerateAuthTokenEndpoint","installation","completedAuthToken","refreshAuthToken","forceRefresh","isEntryRegistered","oldAuthToken","isAuthTokenValid","tokenPromise","waitUntilAuthTokenRequest","makeAuthTokenRequestInProgressEntry","fetchAuthTokenFromServer","updateAuthTokenRequest","requestTime","updatedInstallationEntry","isAuthTokenExpired","inProgressAuthToken","installationsImpl","completeInstallationRegistration","INSTALLATIONS_NAME","publicFactory","internalFactory","installationsInternal","LogLevel","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","logLevel","_logLevel","_logHandler","_userLogHandler","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","prop","receiver","IDBTransaction","wrap","wrapFunction","func","IDBDatabase","IDBCursor","advance","continue","continuePrimaryKey","unwrap","storeNames","sort","transformCachableValue","unlisten","complete","DOMException","cacheDonePromiseForTransaction","object","IDBObjectStore","IDBIndex","Proxy","IDBRequest","success","promisifyRequest","blocked","blocking","terminated","openPromise","readMethods","writeMethods","cachedMethods","getMethod","targetFuncName","useIndex","isWrite","storeName","shift","oldTraps"],"sourceRoot":""}
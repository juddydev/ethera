{"version":3,"file":"static/js/373.a6876895.chunk.js","mappings":"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","sources":["helpers/chat/createPrivateChat.ts","pages/Profile/ChangeImage.tsx","pages/Profile/EditProfileModal.tsx","pages/Profile/QrModal.tsx","pages/Profile/UserCard.tsx","pages/Profile/ItemsTable.tsx","pages/Profile/DocumentsTable.tsx","firebase.ts","pages/Profile/MyProfile.tsx","pages/Profile/OtherProfile.tsx","pages/Profile/index.tsx"],"sourcesContent":["import xmpp from \"../../xmpp\";\nimport {useStoreState} from \"../../store\";\n\nexport const underscoreManipulation = (str:string) => {\n    if(str){\n        return str.replace(/([A-Z])/g, '_$1').toLowerCase()\n    }else{\n        return 'invalid string passed'\n    }\n};\n\nexport const createPrivateChat = async (\n    myWalletAddress: string,\n    otherUserWalletAddress: string,\n    myFirstName: string,\n    otherFirstName: string,\n    CONFERENCEDOMAIN: string,\n    userJID?: string\n) => {\n    const combinedWalletAddress = [myWalletAddress, otherUserWalletAddress]\n        .sort()\n        .join('.');\n\n    const roomJid = combinedWalletAddress.toLowerCase() + CONFERENCEDOMAIN;\n    const combinedUsersName = [myFirstName, otherFirstName].sort().join(' and ');\n\n    const currentChatRooms = useStoreState.getState().userChatRooms;\n\n    let isNewRoom = false;\n    if(currentChatRooms.filter((el) => el.jid === roomJid).length === 0){\n        isNewRoom = true;\n        xmpp.createNewRoom(combinedWalletAddress.toLowerCase());\n        xmpp.setOwner(combinedWalletAddress.toLowerCase());\n        xmpp.roomConfig(\n            combinedWalletAddress.toLowerCase(),\n            {roomName: combinedUsersName},\n        );\n        xmpp.subsribe(roomJid);\n        xmpp.presenceInRoom(roomJid);\n\n        setTimeout(() => {\n            xmpp.sendInvite(\n                underscoreManipulation(myWalletAddress),\n                roomJid.toLowerCase(),\n                underscoreManipulation(otherUserWalletAddress),\n            );\n        }, 1000);\n    }\n\n    return {roomJid, roomName: combinedUsersName, isNewRoom};\n};\n","import React, { useState, useRef } from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Button } from \"@mui/material\";\nimport ReactCrop, { centerCrop, makeAspectCrop, Crop } from \"react-image-crop\";\nimport * as http from \"../../http\";\nimport { useStoreState } from \"../../store\";\nimport \"react-image-crop/dist/ReactCrop.css\";\n\ntype TProps = {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nfunction centerAspectCrop(\n  mediaWidth: number,\n  mediaHeight: number,\n  aspect: number\n) {\n  return centerCrop(\n    makeAspectCrop(\n      {\n        unit: \"%\",\n        width: 90,\n      },\n      aspect,\n      mediaWidth,\n      mediaHeight\n    ),\n    mediaWidth,\n    mediaHeight\n  );\n}\n\nexport default function ChangeImage({ open, setOpen }: TProps) {\n  const user = useStoreState((state) => state.user);\n  const setUser = useStoreState((state) => state.setUser);\n  const fileRef = useRef<HTMLInputElement>(null);\n  const [imgSrc, setImgSrc] = useState(\"\");\n  const imgRef = useRef<HTMLImageElement>(null);\n  const [crop, setCrop] = useState<Crop>();\n  const [blob, setBlob] = useState<Blob>();\n  const aspect = 2;\n\n  function onSelectFile(e: React.ChangeEvent<HTMLInputElement>) {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () =>\n        setImgSrc(reader.result?.toString() || \"\")\n      );\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }\n\n  function onImageLoad(e: React.SyntheticEvent<HTMLImageElement>) {\n    if (aspect) {\n      const { width, height } = e.currentTarget;\n      setCrop(centerAspectCrop(width, height, aspect));\n    }\n  }\n\n  function onSave() {\n    const form = new FormData();\n    form.append(\"file\", blob, \"profileImg\");\n    http\n      .updateProfile(form)\n      .then((response) => {\n        // response.data.user\n        setUser({\n          ...user,\n          profileImage: response.data.user.profileImage,\n        });\n        setOpen(false);\n      })\n      .catch((e) => console.log(e));\n  }\n\n  function onCropComplete(crop) {\n    const canvas = document.createElement(\"canvas\");\n    const pixelRatio = window.devicePixelRatio;\n    const scaleX = imgRef.current.naturalWidth / imgRef.current.width;\n    const scaleY = imgRef.current.naturalHeight / imgRef.current.height;\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = crop.width * pixelRatio * scaleX;\n    canvas.height = crop.height * pixelRatio * scaleY;\n\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = \"high\";\n\n    ctx.drawImage(\n      imgRef.current,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width * scaleX,\n      crop.height * scaleY\n    );\n\n    canvas.toBlob(\n      (blob) => {\n        if (!blob) {\n          //reject(new Error('Canvas is empty'));\n          console.error(\"Canvas is empty\");\n          return;\n        }\n\n        setBlob(blob);\n      },\n      \"image/jpeg\",\n      1\n    );\n  }\n\n  return (\n    <Dialog onClose={() => {}} open={open}>\n      <Box>\n        <DialogTitle\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          Change Image\n          <IconButton\n            onClick={() => {\n              setImgSrc(\"\");\n              setOpen(false);\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <Box sx={{ typography: \"body1\", padding: 1 }}>\n          <Box style={{ width: \"400px\" }}>\n            {!imgSrc && (\n              <Box\n                style={{\n                  height: \"200px\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <input\n                  type=\"file\"\n                  ref={fileRef}\n                  style={{ display: \"none\" }}\n                  accept=\"image/*\"\n                  onChange={onSelectFile}\n                />\n                <Button onClick={() => fileRef.current.click()}>Upload</Button>\n              </Box>\n            )}\n            {!!imgSrc && (\n              <Box>\n                <ReactCrop\n                  crop={crop}\n                  onChange={(_, percentCrop) => setCrop(percentCrop)}\n                  onComplete={onCropComplete}\n                  minWidth={100}\n                  minHeight={100}\n                >\n                  <img\n                    style={{ width: \"400px\", height: \"auto\" }}\n                    ref={imgRef}\n                    alt=\"Crop me\"\n                    src={imgSrc}\n                    onLoad={onImageLoad}\n                  />\n                </ReactCrop>\n                <Box style={{ display: \"flex\" }}>\n                  <Button onClick={onSave} style={{ marginLeft: \"auto\" }}>\n                    Save\n                  </Button>\n                </Box>\n              </Box>\n            )}\n          </Box>\n        </Box>\n      </Box>\n    </Dialog>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Button, Tooltip } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport TextField from \"@mui/material/TextField\";\nimport { useStoreState } from \"../../store\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { httpWithAuth } from \"../../http\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport ChageImage from \"./ChangeImage\";\nimport defUserImage from \"../../assets/images/def-ava.png\";\n\ntype TProps = {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  user: any;\n};\n\nexport default function EditProfileModal({ open, setOpen, user }: TProps) {\n  const [change, setChange] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const setUser = useStoreState((state) => state.setUser);\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: user.firstName,\n      lastName: user.lastName,\n      description: user.description ? user.description : \"\",\n      isProfileOpen: user.isProfileOpen,\n      isAssetsOpen: user.isAssetsOpen,\n    },\n    validate: (values) => {\n      const errors: Record<string, string> = {};\n\n      if (!values.firstName) {\n        errors.firstName = \"Required\";\n      }\n\n      if (!values.lastName) {\n        errors.lastName = \"Required\";\n      }\n\n      return errors;\n    },\n    onSubmit: (values) => {\n      const fd = new FormData();\n      fd.append(\"firstName\", values.firstName);\n      fd.append(\"lastName\", values.lastName);\n\n      if (values.description) {\n        fd.append(\"description\", values.description);\n      }\n\n      fd.append(\"isProfileOpen\", values.isProfileOpen);\n      fd.append(\"isAssetsOpen\", values.isAssetsOpen);\n      setLoading(true);\n      httpWithAuth()\n        .put(\"/users\", fd)\n        .then((response) => {\n          const respUser = response.data.user;\n          setUser({\n            ...user,\n            firstName: respUser.firstName,\n            lastName: respUser.lastName,\n            description: respUser.description,\n            isProfileOpen: respUser.isProfileOpen,\n            isAssetsOpen: respUser.isAssetsOpen,\n          });\n          setOpen(false);\n        })\n        .finally(() => setLoading(false));\n    },\n  });\n\n  return (\n    <Dialog onClose={() => {}} open={open}>\n      <Box>\n        <DialogTitle\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          Edit Profile\n          <IconButton onClick={() => setOpen(false)}>\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <Box sx={{ width: \"100%\", typography: \"body1\", padding: 1 }}>\n          <Box style={{ display: \"flex\" }}>\n            <Box\n              sx={{ marginRight: \"10px\" }}\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                cursor: \"pointer\",\n              }}\n            >\n              <div onClick={() => setChange(true)}>\n                <img\n                  style={{ width: \"150px\", borderRadius: \"10px\" }}\n                  alt=\"\"\n                  src={user.profileImage ? user.profileImage : defUserImage}\n                />\n              </div>\n            </Box>\n            <Box>\n              <form\n                style={{ display: \"flex\", flexDirection: \"column\" }}\n                onSubmit={formik.handleSubmit}\n              >\n                <TextField\n                  margin=\"dense\"\n                  label=\"First Name\"\n                  name=\"firstName\"\n                  variant=\"standard\"\n                  error={\n                    formik.touched.firstName && formik.errors.firstName\n                      ? true\n                      : false\n                  }\n                  helperText={\n                    formik.touched.firstName && formik.errors.firstName\n                      ? (formik.errors.firstName as string)\n                      : \"\"\n                  }\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.firstName}\n                />\n                <TextField\n                  margin=\"dense\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  variant=\"standard\"\n                  error={\n                    formik.touched.lastName && formik.errors.lastName\n                      ? true\n                      : false\n                  }\n                  helperText={\n                    formik.touched.lastName && formik.errors.lastName\n                      ? (formik.errors.lastName as string)\n                      : \"\"\n                  }\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.lastName}\n                />\n                <TextField\n                  margin=\"dense\"\n                  label=\"Profile Description\"\n                  name=\"description\"\n                  variant=\"standard\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.description}\n                />\n                <Tooltip\n                  placement={\"top\"}\n                  title={\n                    \"When enabled, your profile and documents will be visible by all visitors. When disabled, your profile will only be seen by those who received a direct sharing link from you.\"\n                  }\n                >\n                  <FormControlLabel\n                    checked={formik.values.isProfileOpen}\n                    name=\"isProfileOpen\"\n                    control={\n                      <Checkbox\n                        onChange={(e) => {\n                          formik.setFieldValue(\n                            \"isProfileOpen\",\n                            e.target.checked\n                          );\n                        }}\n                      />\n                    }\n                    label=\"Profile is public\"\n                    labelPlacement=\"end\"\n                  />\n                </Tooltip>\n                <Tooltip\n                  placement={\"bottom\"}\n                  title={\n                    \"When this is enabled, all of your documents will be visible to those who have access to your profile. When this is disabled, you will need to share your documents individually so others can see them.\"\n                  }\n                >\n                  <FormControlLabel\n                    checked={formik.values.isAssetsOpen || formik.values.isProfileOpen}\n                    name=\"isAssetsOpen\"\n                    control={\n                      <Checkbox\n                        disabled={formik.values.isProfileOpen}\n                        onChange={(e) => {\n                          formik.setFieldValue(\n                            \"isAssetsOpen\",\n                            e.target.checked\n                          );\n                        }}\n                      />\n                    }\n                    label=\"Documents are public\"\n                    labelPlacement=\"end\"\n                  />\n                </Tooltip>\n                <LoadingButton\n                  type=\"submit\"\n                  loading={loading}\n                  variant=\"contained\"\n                >\n                  Save\n                </LoadingButton>\n              </form>\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n      {change && <ChageImage open={change} setOpen={setChange} />}\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport { Button, Dialog } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport QRCode from \"react-qr-code\";\nimport { truncateString } from \"../../utils\";\n\nexport interface IQrModal {\n  open: boolean;\n  link: string;\n  onClose: () => void;\n}\n\nexport const QrModal: React.FC<IQrModal> = ({ open, link, onClose }) => {\n  return (\n    <Dialog maxWidth={false} open={open} onClose={onClose}>\n      <Box sx={{ padding: \"20px\" }}>\n        <QRCode\n          size={256}\n          style={{ height: '60vh', maxWidth: \"100%\", width: \"100%\" }}\n          value={link}\n          viewBox={`0 0 256 256`}\n        />\n        <Box\n          sx={{\n            boxShadow: \"2px 0px 5px 0px rgba(0,0,0,0.75)\",\n            borderRadius: \"10px\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            pl: \"10px\",\n            my: \"10px\",\n          }}\n        >\n          <span>{truncateString(link, 50)}</span>\n          <Button\n            variant=\"contained\"\n            sx={{ borderRadius: \"10px\" }}\n            onClick={() => navigator.clipboard.writeText(link)}\n          >\n            Copy\n          </Button>\n        </Box>\n      </Box>\n    </Dialog>\n  );\n};\n","import React, { useState } from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Card from \"@mui/material/Card\";\nimport Box from \"@mui/material/Box\";\nimport { TProfile } from \"./types\";\nimport defUserImage from \"../../assets/images/def-ava.png\";\nimport { useStoreState } from \"../../store\";\nimport EditProfileModal from \"./EditProfileModal\";\nimport { Button, IconButton } from \"@mui/material\";\nimport { createPrivateChat } from \"../../helpers/chat/createPrivateChat\";\nimport xmpp, { walletToUsername } from \"../../xmpp\";\nimport { useHistory } from \"react-router-dom\";\nimport { CONFERENCEDOMAIN } from \"../../constants\";\nimport { generateProfileLink } from \"../../utils\";\nimport QrCodeIcon from \"@mui/icons-material/QrCode\";\nimport { QrModal } from \"./QrModal\";\n\ntype TProps = {\n  profile?: TProfile;\n  walletAddress?: string;\n};\n\nexport default function UserCard({ profile, walletAddress }: TProps) {\n  const [edit, setEdit] = useState(false);\n  const user = useStoreState((state) => state.user);\n  const [showQrModal, setShowQrModal] = useState(false);\n\n  const history = useHistory();\n  const openDirectChat = () => {\n    createPrivateChat(\n      user.walletAddress,\n      walletAddress,\n      user.firstName,\n      profile.firstName,\n      CONFERENCEDOMAIN\n    )\n      .then((result) => {\n        xmpp.getRooms();\n        useStoreState.getState().setCurrentUntrackedChatRoom(result.roomJid);\n        history.push(\"/chat/\" + result.roomJid);\n      })\n      .catch((error) => {\n        console.log(\"openPrivateRoom Error: \", error);\n      });\n  };\n  if (profile) {\n    return (\n      <Box style={{ marginTop: \"10px\", marginRight: \"10px\" }}>\n        <Card\n          sx={{\n            display: \"flex\",\n            padding: \"10px\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            width: \"100%\",\n          }}\n        >\n          <Box sx={{ marginRight: \"10px\" }}>\n            {!!profile.firstName && (\n              <img\n                style={{ width: \"150px\", borderRadius: \"10px\" }}\n                alt=\"\"\n                src={profile.profileImage || defUserImage}\n              />\n            )}\n          </Box>\n          <Box>\n            <Box sx={{ fontWeight: \"bold\" }}>\n              {profile?.firstName} {profile?.lastName}\n            </Box>\n            {profile?.description && (\n              <Box>Description: {profile?.description}</Box>\n            )}\n            <Button onClick={openDirectChat} variant=\"contained\" size=\"small\">\n              Direct message\n            </Button>\n          </Box>\n        </Card>\n      </Box>\n    );\n  }\n  return (\n    <Box style={{ marginTop: \"10px\", marginRight: \"10px\" }}>\n      <Card\n        sx={{\n          display: \"flex\",\n          padding: \"10px\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          width: \"100%\",\n        }}\n      >\n        <Box sx={{ marginRight: \"10px\" }}>\n          <img\n            style={{ width: \"150px\", borderRadius: \"10px\" }}\n            alt=\"\"\n            src={user.profileImage || defUserImage}\n          />\n        </Box>\n        <Box>\n          {!!user.firstName && (\n            <>\n              <Box sx={{ fontWeight: \"bold\", display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                {user?.firstName} {user?.lastName}\n                <IconButton\n                  sx={{ color: \"black\" }}\n                  onClick={() => setShowQrModal(true)}\n                >\n                  <QrCodeIcon />\n                </IconButton>\n              </Box>\n              {user?.description && <Box>Description: {user?.description}</Box>}\n            </>\n          )}\n        </Box>\n\n        {user.firstName && (\n          <Button\n            onClick={(e) => {\n              setEdit(true);\n            }}\n          >\n            Edit\n          </Button>\n        )}\n      </Card>\n      {edit && <EditProfileModal open={edit} setOpen={setEdit} user={user} />}\n      <QrModal\n        open={showQrModal}\n        link={generateProfileLink({\n          firstName: user.firstName,\n          lastName: user.lastName,\n          walletAddress: user.walletAddress,\n          xmppId: walletToUsername(user.walletAddress) + CONFERENCEDOMAIN,\n        })}\n        onClose={() => setShowQrModal(false)}\n      />\n    </Box>\n  );\n}\n","import React from \"react\";\n\nimport { TBalance } from \"../../store\";\nimport {\n  Avatar,\n  Chip,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemButton,\n  ListItemText,\n  useTheme,\n  Box,\n} from \"@mui/material\";\nimport { produceNfmtItems } from \"../../utils\";\nimport { NFMT_TRAITS } from \"../../constants\";\nimport { useHistory } from \"react-router\";\n\nconst NftItem = ({\n  item,\n  walletAddress,\n}: {\n  item: TBalance;\n  walletAddress: string;\n}) => {\n  const theme = useTheme();\n  const history = useHistory();\n  const onItemClick = () => {\n    history.push({\n      pathname: \"/provenance\",\n      state: { nftItem: item, walletAddress },\n    });\n  };\n  return (\n    <ListItem key={item.nftId}>\n      <ListItemButton onClick={onItemClick}>\n        <ListItemAvatar>\n          <Avatar\n            style={{ backgroundColor: theme.palette.primary.main }}\n            src={item.imagePreview}\n          />\n        </ListItemAvatar>\n        <ListItemText primary={item.tokenName} />\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <span style={{ textAlign: \"left\", width: 50 }}>\n            {item.balance}/{item.total}\n          </span>\n        </Box>\n      </ListItemButton>\n    </ListItem>\n  );\n};\nconst NfmtItem = ({\n  item,\n  walletAddress,\n}: {\n  item: TBalance;\n  walletAddress: string;\n}) => {\n  const theme = useTheme();\n  const history = useHistory();\n  const onItemClick = () => {\n    history.push({\n      pathname: \"/provenance\",\n      state: { nftItem: item, walletAddress },\n    });\n  };\n  return (\n    <ListItem key={item.nftId}>\n      <ListItemButton onClick={onItemClick}>\n        <ListItemAvatar>\n          <Avatar\n            style={{ backgroundColor: theme.palette.primary.main }}\n            src={item.nftFileUrl}\n          />\n        </ListItemAvatar>\n        <ListItemText primary={item.tokenName} />\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n          }}\n        >\n          <Box\n            sx={{\n              // marginRight: \"10px\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n            }}\n          >\n            {item.traits.map((trait) => {\n              return (\n                <Chip\n                  sx={{\n                    backgroundColor: NFMT_TRAITS[trait].color,\n                    marginRight: \"5px\",\n                  }}\n                  label={trait}\n                  key={trait}\n                />\n              );\n            })}\n          </Box>\n          <span style={{ textAlign: \"left\", width: 50 }}>\n            {item.balance}/{item.total}\n          </span>\n        </Box>\n      </ListItemButton>\n    </ListItem>\n  );\n};\n\nexport default function ItemsTable({\n  balance,\n  walletAddress,\n}: {\n  balance: TBalance[];\n  walletAddress: string;\n}) {\n  const nftItems = balance.filter((item) => item.tokenType === \"NFT\");\n  const nfmtItems = produceNfmtItems(balance);\n  return (\n    <List sx={{ width: \"100%\", bgcolor: \"background.paper\" }}>\n      {nftItems.map((item, i) => {\n        return (\n          <NftItem walletAddress={walletAddress} item={item} key={item.nftId} />\n        );\n      })}\n      {nfmtItems.map((item, i) => {\n        return (\n          <NfmtItem\n            walletAddress={walletAddress}\n            item={item}\n            key={item.nftId + i}\n          />\n        );\n      })}\n    </List>\n  );\n}\n","import * as React from \"react\";\n\nimport { Box } from \"@mui/system\";\nimport * as http from \"../../http\";\n\nimport QrCodeIcon from \"@mui/icons-material/QrCode\";\nimport {\n  Avatar,\n  Chip,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemButton,\n  ListItemText,\n  useTheme,\n} from \"@mui/material\";\nimport { format } from \"date-fns\";\nimport { useHistory } from \"react-router\";\n\nconst DocumentItem = ({\n  item,\n  walletAddress,\n}: {\n  item: http.IDocument;\n  walletAddress: string;\n}) => {\n  const theme = useTheme();\n  const history = useHistory();\n  const onItemClick = () => {\n    history.push({\n      pathname: \"/provenance\",\n      state: { nftItem: item, walletAddress },\n    });\n  };\n  return (\n    <ListItem key={item._id}>\n      <ListItemButton onClick={onItemClick}>\n        <ListItemAvatar>\n          <Avatar\n            style={{ backgroundColor: theme.palette.primary.main }}\n            src={item?.file?.locationPreview || item?.location}\n          />\n        </ListItemAvatar>\n        <ListItemText\n          primary={item.documentName}\n          secondary={format(new Date(item.createdAt), \"pp PP\")}\n        />\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <IconButton sx={{ color: \"black\" }}>\n            <QrCodeIcon />\n          </IconButton>\n        </Box>\n      </ListItemButton>\n    </ListItem>\n  );\n};\n\nexport default function DocumentsTable({\n  documents,\n  walletAddress,\n}: {\n  documents: http.IDocument[];\n  walletAddress: string;\n}) {\n  return (\n    <List sx={{ width: \"100%\", bgcolor: \"background.paper\" }}>\n      {documents.map((item) => {\n        return (\n          <DocumentItem\n            walletAddress={walletAddress}\n            item={item}\n            key={item._id}\n          />\n        );\n      })}\n    </List>\n  );\n}\n","import { FirebaseApp, initializeApp } from \"firebase/app\";\nimport { getMessaging, getToken as _getToken } from \"firebase/messaging\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDQdkvvxKKx4-WrjLQoYf08GFARgi_qO4g\",\n  authDomain: \"ethora-668e9.firebaseapp.com\",\n  projectId: \"ethora-668e9\",\n  storageBucket: \"ethora-668e9.appspot.com\",\n  messagingSenderId: \"972933470054\",\n  appId: \"1:972933470054:web:d4682e76ef02fd9b9cdaa7\",\n  measurementId: \"G-WHM7XRZ4C8\",\n};\n\nexport const firebaseApp = initializeApp(firebaseConfig);\n\nexport function getToken() {\n  const messaging = getMessaging(firebaseApp);\n  return _getToken(messaging, {\n    vapidKey:\n      \"BCzcT7yzF8F188maOgPAISXqWCTDavGzWW0SWLOBx9vX2mYFjBXMaTMBDR3HXlmXOduyE253sblF9HP6aEBbx38\",\n  });\n}\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport { ExplorerRespose, ITransaction, TProfile } from \"./types\";\nimport UserCard from \"./UserCard\";\nimport {  getTransactions, getBalance } from \"../../http\";\nimport { useStoreState } from \"../../store\";\nimport ItemsTable from \"./ItemsTable\";\nimport { Transactions } from \"../Transactions/Transactions\";\nimport { Typography } from \"@mui/material\";\nimport DocumentsTable from \"./DocumentsTable\";\nimport { FullPageSpinner } from \"../../componets/FullPageSpinner\";\nimport { filterNftBalances } from \"../../utils\";\nimport { getToken } from \"../../firebase\";\n\nconst styles = {\n  craeteNewLink: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    fontSize: \"14px\",\n  },\n};\n\nexport function MyProfile() {\n  const [loading, setLoading] = useState(false);\n  const [transactions, setTransactions] =\n    useState<ExplorerRespose<ITransaction[]>>();\n  const user = useStoreState((store) => store.user);\n  const items = useStoreState((state) => state.balance);\n  const documents = useStoreState((state) => state.documents);\n\n\n  useEffect(() => {\n    console.log(\"MyProfile init\");\n    setLoading(true);\n    getTransactions(user.walletAddress)\n      .then((result) => {\n        setTransactions(result.data);\n      })\n      .finally(() => setLoading(false));\n\n    if (Notification.permission === \"denied\") {\n      alert(\"Please enable notifications for this app in your browser\");\n    } else {\n      if (Notification.permission !== \"granted\") {\n        Notification.requestPermission().then((permission) => {\n          if (permission === \"granted\") {\n            console.log(\"geting token\");\n            getToken().then((token) => {\n              console.log(\"my fb token \", token);\n            });\n            return;\n          }\n        });\n      } else {\n        console.log(\"geting token\");\n        getToken().then((token) => {\n          console.log(\"my fb token \", token);\n        });\n        return;\n      }\n    }\n  }, []);\n\n  if (loading) return <FullPageSpinner />;\n  return (\n    <Container maxWidth=\"xl\" style={{ height: \"calc(100vh - 80px)\" }}>\n      <Box sx={{ margin: \"auto\", width: \"200px\" }}>\n        <UserCard />\n      </Box>\n      <Typography\n        variant=\"h6\"\n        style={{\n          margin: \"16px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <span>Items</span>\n       \n      </Typography>\n      <ItemsTable\n        balance={items.filter(filterNftBalances)}\n        walletAddress={user.walletAddress}\n      />\n      {!!documents.length && (\n        <>\n          <Typography\n            variant=\"h6\"\n            style={{\n              margin: \"16px\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <span>Documents</span>\n           \n          </Typography>\n          <DocumentsTable\n            walletAddress={user.walletAddress}\n            documents={documents}\n          />\n        </>\n      )}\n\n      {!!transactions && (\n        <Box>\n          <Typography variant=\"h6\" style={{ margin: \"16px\" }}>\n            Transactions\n          </Typography>\n          <Transactions transactions={transactions.items} />\n        </Box>\n      )}\n\n     \n\n      \n     \n    </Container>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport { ExplorerRespose, ITransaction, TProfile } from \"./types\";\nimport UserCard from \"./UserCard\";\nimport {\n  getPublicProfile,\n  getTransactions,\n  getBalance,\n  IDocument,\n} from \"../../http\";\nimport { Transactions } from \"../Transactions/Transactions\";\nimport { FullPageSpinner } from \"../../componets/FullPageSpinner\";\nimport ItemsTable from \"./ItemsTable\";\nimport { filterNftBalances } from \"../../utils\";\nimport { TBalance } from \"../../store\";\nimport { Typography } from \"@mui/material\";\nimport DocumentsTable from \"./DocumentsTable\";\nimport * as http from \"../../http\";\n\ntype TProps = {\n  walletAddress: string;\n};\n\nexport function OtherProfile(props: TProps) {\n  const [loading, setLoading] = useState(true);\n  const [profile, setProfile] = useState<TProfile>();\n  const [transactions, setTransactions] =\n    useState<ExplorerRespose<ITransaction[]>>();\n  const [balances, setBalances] = useState<TBalance[]>([]);\n  const [documents, setDocuments] = useState<IDocument[]>([]);\n  const getDocuments = async (documents: IDocument[]) => {\n    const mappedDocuments = [];\n    for (const item of documents) {\n      try {\n        // const { data: file } = await http\n        //   .httpWithAuth()\n        //   .get<http.IFile>(\"/files/\" + item.files[0]);\n        // item.file = file;\n        item.location = item.locations[0]\n        mappedDocuments.push(item);\n      } catch (error) {\n        console.log( item.files[0],\"sdjfkls\");\n      }\n    }\n    setDocuments(mappedDocuments);\n  };\n  useEffect(() => {\n    setLoading(true);\n    getPublicProfile(props.walletAddress).then((result) => {\n      setProfile(result.data);\n      setBalances(result.data.balances.balance);\n      getDocuments(result.data.documents);\n    });\n    // .finally(() => setLoading(false));\n    setLoading(false);\n    getTransactions(props.walletAddress).then((result) => {\n      setTransactions(result.data);\n    });\n  }, []);\n\n  if (loading) {\n    return <FullPageSpinner />;\n  }\n  return (\n    <Container maxWidth=\"xl\" style={{ height: \"calc(100vh - 80px)\" }}>\n      <Box>\n        {!!profile?.firstName && (\n          <Box sx={{ width: \"200px\", margin: \"auto\", padding: \"10px\" }}>\n            <UserCard profile={profile} walletAddress={props.walletAddress} />\n          </Box>\n        )}\n        {!!balances.filter(filterNftBalances).length && (\n          <>\n            <Typography variant=\"h6\" style={{ margin: \"16px\" }}>\n              Items\n            </Typography>\n            <ItemsTable\n              balance={balances.filter(filterNftBalances)}\n              walletAddress={props.walletAddress}\n            />\n          </>\n        )}\n      </Box>\n      {!!documents.length && (\n        <>\n          <Typography variant=\"h6\" style={{ margin: \"16px\" }}>\n            Documents\n          </Typography>\n          <DocumentsTable\n            walletAddress={props.walletAddress}\n            documents={documents}\n          />\n        </>\n      )}\n      {!!transactions && (\n        <>\n          <Typography variant=\"h6\" style={{ margin: \"16px\" }}>\n            Transactions\n          </Typography>\n          <Transactions transactions={transactions.items} />\n        </>\n      )}\n      {/* <DocumentsTable walletAddress={props.walletAddress} /> */}\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { useStoreState } from \"../../store\";\nimport { useParams } from \"react-router-dom\";\nimport { MyProfile } from \"./MyProfile\";\nimport { OtherProfile } from \"./OtherProfile\";\n\nexport default function Profile() {\n  const user = useStoreState((state) => state.user);\n  const params: { wallet: string } = useParams();\n\n  if (user.walletAddress === params.wallet) {\n    return <MyProfile />;\n  } else {\n    return <OtherProfile walletAddress={params.wallet} />;\n  }\n}\n"],"names":["underscoreManipulation","str","replace","toLowerCase","createPrivateChat","myWalletAddress","otherUserWalletAddress","myFirstName","otherFirstName","CONFERENCEDOMAIN","userJID","combinedWalletAddress","sort","join","roomJid","combinedUsersName","currentChatRooms","useStoreState","userChatRooms","isNewRoom","filter","el","jid","length","xmpp","roomName","setTimeout","ChangeImage","open","setOpen","user","state","setUser","fileRef","useRef","useState","imgSrc","setImgSrc","imgRef","crop","setCrop","blob","setBlob","Dialog","onClose","Box","DialogTitle","style","display","justifyContent","IconButton","onClick","Close","sx","typography","padding","width","height","alignItems","type","ref","accept","onChange","e","target","files","reader","FileReader","addEventListener","result","toString","readAsDataURL","Button","current","click","_","percentCrop","onComplete","canvas","document","createElement","pixelRatio","window","devicePixelRatio","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","setTransform","imageSmoothingQuality","drawImage","x","y","toBlob","console","error","minWidth","minHeight","alt","src","onLoad","currentTarget","mediaWidth","mediaHeight","aspect","centerCrop","makeAspectCrop","unit","centerAspectCrop","form","FormData","append","http","then","response","profileImage","data","catch","log","marginLeft","EditProfileModal","change","setChange","loading","setLoading","formik","useFormik","initialValues","firstName","lastName","description","isProfileOpen","isAssetsOpen","validate","values","errors","onSubmit","fd","httpWithAuth","put","respUser","finally","marginRight","flexDirection","cursor","borderRadius","defUserImage","handleSubmit","TextField","margin","label","name","variant","touched","helperText","handleChange","onBlur","handleBlur","value","Tooltip","placement","title","FormControlLabel","checked","control","Checkbox","setFieldValue","labelPlacement","disabled","LoadingButton","QrModal","link","maxWidth","size","viewBox","boxShadow","pl","my","truncateString","navigator","clipboard","writeText","UserCard","profile","walletAddress","edit","setEdit","showQrModal","setShowQrModal","history","useHistory","marginTop","Card","fontWeight","setCurrentUntrackedChatRoom","push","color","QrCode","generateProfileLink","xmppId","walletToUsername","NftItem","item","theme","useTheme","ListItem","ListItemButton","pathname","nftItem","ListItemAvatar","Avatar","backgroundColor","palette","primary","main","imagePreview","ListItemText","tokenName","textAlign","balance","total","nftId","NfmtItem","nftFileUrl","traits","map","trait","Chip","NFMT_TRAITS","ItemsTable","nftItems","tokenType","nfmtItems","produceNfmtItems","List","bgcolor","i","DocumentItem","file","locationPreview","location","documentName","secondary","format","Date","createdAt","_id","DocumentsTable","documents","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getToken","messaging","getMessaging","_getToken","vapidKey","MyProfile","transactions","setTransactions","store","items","useEffect","getTransactions","Notification","permission","alert","token","requestPermission","FullPageSpinner","Container","Typography","filterNftBalances","Transactions","OtherProfile","props","setProfile","balances","setBalances","setDocuments","getDocuments","mappedDocuments","locations","getPublicProfile","Profile","params","useParams","wallet"],"sourceRoot":""}
{"version":3,"file":"static/js/933.9c82c73f.chunk.js","mappings":"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","sources":["componets/ExplorerChart.tsx","componets/ExplorerBlocks.tsx","pages/Explorer/Explorer.tsx"],"sourcesContent":["import { useTheme } from \"@mui/material\";\nimport React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { TChartData } from \"../pages/Explorer/Explorer\";\n\ninterface ExplorerChartProps {\n  data: TChartData;\n}\n\nexport const ExplorerChart: React.FunctionComponent<ExplorerChartProps> = ({\n  data,\n}) => {\n  const theme = useTheme();\n  return (\n    <ResponsiveContainer height={\"100%\"}>\n      <LineChart\n        width={500}\n        height={300}\n        data={data}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"date\" />\n        <YAxis dataKey={\"y\"} />\n        <Tooltip />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          name=\"Transactions\"\n          dataKey=\"y\"\n          stroke={theme.palette.primary.main}\n          activeDot={{ r: 8 }}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Divider,\n  Grid,\n  Stack,\n  Typography,\n  useTheme,\n} from \"@mui/material\";\nimport { IBlock } from \"../pages/Profile/types\";\nimport { format } from \"date-fns\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport interface IBlocksProps {\n  blocks: IBlock[];\n}\n\nexport const ExplorerBlocks: React.FC<IBlocksProps> = ({ blocks }) => {\n  const theme = useTheme();\n  const history = useHistory();\n  return (\n    <Box>\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography variant={\"h6\"} style={{ fontSize: \"20px\" }}>\n          Blocks\n        </Typography>\n        <Button\n          variant=\"contained\"\n          onClick={() => history.push(\"/explorer/blocks\")}\n        >\n          View All\n        </Button>\n      </Box>\n      <div\n        style={{\n          height: 2,\n          backgroundColor: theme.palette.primary.main,\n          margin: \"5px 0\",\n          borderRadius: 5,\n        }}\n      />\n\n      <Grid\n        container\n        spacing={2}\n        sx={{ maxHeight: 300, overflowY: \"scroll\", marginTop: \"10px\" }}\n      >\n        {blocks.map((item) => {\n          return (\n            <Grid\n              container\n              justifyContent={\"flex-start\"}\n              key={item.hash}\n              sx={{ marginBottom: '10px', marginLeft: '15px' }}\n            >\n              <Grid\n                sx={{\n                  backgroundColor: \"lightgrey\",\n                  borderRadius: 5,\n                  padding: \"5px\",\n                  marginRight: 10,\n                }}\n                item\n                xs={6}\n                md={4}\n                lg={4}\n              >\n                <Grid>\n                  <Typography sx={{ fontWeight: \"bold\", color: \"black\" }}>\n                    <Link\n                      to={\"/explorer/block/\" + item.number}\n                      style={{ textDecoration: \"none\", color: \"black\" }}\n                    >\n                      Block {item.number}\n                    </Link>\n                  </Typography>\n                  <Typography>\n                    {format(new Date(item.timestamp * 1000), \"PPpp\")}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} md={4} lg={4}>\n                <Typography fontSize={14} color={\"primary\"}>\n                  Miner {item.miner}\n                </Typography>\n                <Typography\n                  fontSize={14}\n                  color={\"primary\"}\n                  sx={{ fontWeight: \"bold\" }}\n                >\n                  {item.transactions.length} Transactions{\" \"}\n                </Typography>\n              </Grid>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </Box>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  getExplorerBlocks,\n  getExplorerHistory,\n  getTransactions,\n} from \"../../http\";\nimport { useStoreState } from \"../../store\";\nimport { ExplorerChart } from \"../../componets/ExplorerChart\";\nimport { format } from \"date-fns\";\nimport {\n  ExplorerRespose,\n  IBlock,\n  IHistory,\n  ITransaction,\n} from \"../Profile/types\";\nimport { FullPageSpinner } from \"../../componets/FullPageSpinner\";\nimport { ExplorerBlocks } from \"../../componets/ExplorerBlocks\";\nimport { Box, styled, Typography } from \"@mui/material\";\nimport { Transactions } from \"../Transactions/Transactions\";\n\nconst Container = styled(Box)(({ theme }) => ({\n  width: \"100vw\",\n  padding: 20,\n  display: \"flex\",\n  [theme.breakpoints.down(\"md\")]: {\n    flexDirection: \"column\",\n  },\n}));\n\nexport type TChartData = { date: string; y: number }[];\n\nconst transformDataForChart = (data: IHistory): TChartData => {\n  const result: TChartData = [];\n  for (let index = 0; index < data.x.length; index++) {\n    const elementX = format(new Date(data.x[index]), \"MMMM dd yyyy\");\n    const elementY = data.y[index];\n    result.push({ date: elementX, y: elementY });\n  }\n  return result;\n};\n\nexport default function Explorer() {\n  const user = useStoreState((store) => store.user);\n  const [transactions, setTransactions] = useState<\n    ExplorerRespose<ITransaction[]>\n  >({\n    limit: 0,\n    offset: 0,\n    items: [],\n    total: 0,\n  });\n  const [explorerHistory, setExplorerHistory] = useState<TChartData | []>([]);\n  const [loading, setLoading] = useState(false);\n  const [explorerBlocks, setExplorerBlocks] = useState<\n    ExplorerRespose<IBlock[]>\n  >({ limit: 0, offset: 0, items: [], total: 0 });\n\n  const getState = async () => {\n    setLoading(true);\n    try {\n      const { data } = await getTransactions(user.walletAddress);\n      const { data: history } = await getExplorerHistory();\n      const { data: blocks } = await getExplorerBlocks();\n      const transformedHistory = transformDataForChart(history);\n      setExplorerHistory(transformedHistory);\n      setTransactions(data);\n      setExplorerBlocks(blocks);\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    getState();\n  }, []);\n\n  if (loading) {\n    return <FullPageSpinner />;\n  }\n  return (\n    <Box>\n      {!!user.token && (\n        <Container>\n          <Box sx={{ maxWidth: 500 }}>\n            <ExplorerBlocks blocks={explorerBlocks.items} />\n          </Box>\n          <Box sx={{ height: 300, width: \"100%\" }}>\n            <ExplorerChart data={explorerHistory} />\n          </Box>\n        </Container>\n      )}\n      <Typography variant=\"h6\" sx={{ margin: \"16px\" }}>\n        Transactions\n      </Typography>\n      <Transactions transactions={transactions.items} />\n    </Box>\n  );\n}\n"],"names":["ExplorerChart","data","theme","useTheme","ResponsiveContainer","height","LineChart","width","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","type","name","stroke","palette","primary","main","activeDot","r","ExplorerBlocks","blocks","history","useHistory","Box","sx","display","alignItems","justifyContent","Typography","variant","style","fontSize","Button","onClick","push","backgroundColor","borderRadius","Grid","container","spacing","maxHeight","overflowY","marginTop","map","item","marginBottom","marginLeft","padding","marginRight","xs","md","lg","fontWeight","color","to","number","textDecoration","format","Date","timestamp","miner","transactions","length","hash","Container","styled","breakpoints","down","flexDirection","transformDataForChart","result","index","x","elementX","elementY","y","date","Explorer","user","useStoreState","store","useState","limit","offset","items","total","setTransactions","explorerHistory","setExplorerHistory","loading","setLoading","explorerBlocks","setExplorerBlocks","getState","getTransactions","walletAddress","getExplorerHistory","getExplorerBlocks","transformedHistory","console","log","useEffect","FullPageSpinner","token","maxWidth","Transactions"],"sourceRoot":""}
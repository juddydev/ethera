{"version":3,"file":"static/js/486.ac41cb6e.chunk.js","mappings":"2OAUMA,EAAkC,CACtCC,YAAa,eACbC,UAAW,aACXC,KAAM,OACNC,GAAI,KACJC,IAAK,MACLC,SAAU,YAEVC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,iBAAkB,oBAClBC,MAAO,QACPC,KAAM,OACNC,UAAW,YACXC,UAAW,aACXC,cAAe,oBACfC,aAAc,mBACdC,WAAY,qBACZC,YAAa,uBAyEf,UAtE+D,SAC7DC,GAEA,OAAoDC,EAAAA,EAAAA,UAElD,CAAC,GAAE,eAFEC,EAAkB,KAAEC,EAAqB,KAGhD,GAA8BF,EAAAA,EAAAA,WAAS,GAAM,eAAtCG,EAAO,KAAEC,EAAU,KACpBC,GAASC,EAAAA,EAAAA,MACTC,EAAU,yCAAG,6FACA,OAAjBH,GAAW,GAAM,mBAGQI,EAAAA,EAAAA,IAAsBH,EAAOI,MAAM,KAAD,WAAjDC,EAAI,EAAJA,KACFC,EAASC,OAAOC,YACpBD,OAAOE,QAAQJ,GACZK,QAAO,SAACC,GAAI,MAAiB,UAAZA,EAAK,EAAc,IACpCC,KAAI,SAACD,GAIJ,MAHgB,cAAZA,EAAK,KACPA,EAAK,IAAKE,EAAAA,EAAAA,GAAO,IAAIC,KAAKH,EAAK,IAAK,SAE/BA,CACT,KAEJd,EAAsBS,GACtBP,GAAW,GAAO,kDAElBgB,QAAQC,IAAI,EAAD,IAAQ,0DAEtB,kBApBe,mCA2BhB,OALAC,EAAAA,EAAAA,YAAU,WACE,OAANjB,QAAM,IAANA,GAAAA,EAAQI,MACVF,GAEJ,GAAG,CAACF,KAEF,8BACGF,GACC,SAAC,IAAe,KAEhB,UAAC,IAAG,YACF,UAAC,IAAU,CAACoB,QAAQ,KAAKC,MAAO,CAAEC,cAAe,GAAIC,SAAU,GAAIC,WAAY,IAAK,iCAC7DtB,EAAOI,SAE9B,SAAC,IAAG,CACFmB,GAAI,CACFC,QAAS,OACTC,WAAY,aACZC,cAAe,SACfC,QAAS,QACT,SAEDpB,OAAOE,QAAQb,GAAoBgB,KAClC,SAACD,GACC,OACE,UAAC,IAAG,YACF,2BACE,yBAAIpC,EAAQoC,EAAK,KAAOA,EAAK,GAAE,WAEjC,0BAAOA,EAAK,OAJJA,EAAK,GAOnB,UAOd,C","sources":["pages/Explorer/TransactionDetails.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { getTransactionDetails } from \"../../http\";\nimport { ITransaction } from \"../Profile/types\";\nimport { format } from \"date-fns\";\nimport { FullPageSpinner } from \"../../componets/FullPageSpinner\";\nimport { Box, Typography } from \"@mui/material\";\n\ninterface ITransactionDetailsProps {}\n\nconst keysMap: Record<string, string> = {\n  blockNumber: \"Block Number\",\n  blockHash: \"Block Hash\",\n  from: \"From\",\n  to: \"To\",\n  gas: \"Gas\",\n  gasPrice: \"Gas Price\",\n\n  hash: \"Hash\",\n  input: \"Input\",\n  nonce: \"Nonce\",\n  transactionIndex: \"Transaction Index\",\n  value: \"Value\",\n  type: \"Type\",\n  timestamp: \"Timestamp\",\n  tokenName: \"Token Name\",\n  fromFirstName: \"Sender First Name\",\n  fromLastName: \"Sender Last Name\",\n  toLastName: \"Receiver Last Name\",\n  toFirstName: \"Receiver First Name\",\n};\n\nconst TransactionDetails: React.FC<ITransactionDetailsProps> = (\n  props\n) => {\n  const [transactionDetails, setTransactionDetails] = useState<\n    ITransaction | {}\n  >({});\n  const [loading, setLoading] = useState(false);\n  const params = useParams<{ txId: string }>();\n  const getDetails = async () => {\n    setLoading(true);\n\n    try {\n      const { data } = await getTransactionDetails(params.txId);\n      const result = Object.fromEntries(\n        Object.entries(data)\n          .filter((item) => item[0] !== \"input\")\n          .map((item) => {\n            if (item[0] === \"timestamp\") {\n              item[1] = format(new Date(item[1]), \"PPpp\");\n            }\n            return item;\n          })\n      );\n      setTransactionDetails(result);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (params?.txId) {\n      getDetails();\n    }\n  }, [params]);\n  return (\n    <>\n      {loading ? (\n        <FullPageSpinner />\n      ) : (\n        <Box>\n          <Typography variant=\"h4\" style={{ paddingInline: 20, fontSize: 25, paddingTop: 20 }}>\n            Transaction details {params.txId}\n          </Typography>\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"flex-start\",\n              flexDirection: \"column\",\n              padding: '20px',\n            }}\n          >\n            {Object.entries(transactionDetails).map(\n              (item: [string, string]) => {\n                return (\n                  <Box key={item[0]}>\n                    <span>\n                      <b>{keysMap[item[0]] || item[0]}: </b>\n                    </span>\n                    <span>{item[1]}</span>\n                  </Box>\n                );\n              }\n            )}\n          </Box>\n        </Box>\n      )}\n    </>\n  );\n};\nexport default TransactionDetails;"],"names":["keysMap","blockNumber","blockHash","from","to","gas","gasPrice","hash","input","nonce","transactionIndex","value","type","timestamp","tokenName","fromFirstName","fromLastName","toLastName","toFirstName","props","useState","transactionDetails","setTransactionDetails","loading","setLoading","params","useParams","getDetails","getTransactionDetails","txId","data","result","Object","fromEntries","entries","filter","item","map","format","Date","console","log","useEffect","variant","style","paddingInline","fontSize","paddingTop","sx","display","alignItems","flexDirection","padding"],"sourceRoot":""}
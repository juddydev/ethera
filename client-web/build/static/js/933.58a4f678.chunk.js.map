{"version":3,"file":"static/js/933.58a4f678.chunk.js","mappings":"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","sources":["componets/ExplorerChart.tsx","componets/ExplorerBlocks.tsx","pages/Explorer/Explorer.tsx"],"sourcesContent":["import { useTheme } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport { TChartData } from \"../pages/Explorer/Explorer\";\r\n\r\ninterface ExplorerChartProps {\r\n  data: TChartData;\r\n}\r\n\r\nexport const ExplorerChart: React.FunctionComponent<ExplorerChartProps> = ({\r\n  data,\r\n}) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <ResponsiveContainer height={\"100%\"}>\r\n      <LineChart\r\n        width={500}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 5,\r\n          right: 30,\r\n          left: 20,\r\n          bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis dataKey={\"y\"} />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line\r\n          type=\"monotone\"\r\n          name=\"Transactions\"\r\n          dataKey=\"y\"\r\n          stroke={theme.palette.primary.main}\r\n          activeDot={{ r: 8 }}\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Stack,\r\n  Typography,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { IBlock } from \"../pages/Profile/types\";\r\nimport { format } from \"date-fns\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport interface IBlocksProps {\r\n  blocks: IBlock[];\r\n}\r\n\r\nexport const ExplorerBlocks: React.FC<IBlocksProps> = ({ blocks }) => {\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <Typography variant={\"h6\"} style={{ fontSize: \"20px\" }}>\r\n          Blocks\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => history.push(\"/explorer/blocks\")}\r\n        >\r\n          View All\r\n        </Button>\r\n      </Box>\r\n      <div\r\n        style={{\r\n          height: 2,\r\n          backgroundColor: theme.palette.primary.main,\r\n          margin: \"5px 0\",\r\n          borderRadius: 5,\r\n        }}\r\n      />\r\n\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        sx={{ maxHeight: 300, overflowY: \"scroll\", marginTop: \"10px\" }}\r\n      >\r\n        {blocks.map((item) => {\r\n          return (\r\n            <Grid\r\n              container\r\n              justifyContent={\"flex-start\"}\r\n              key={item.hash}\r\n              sx={{ marginBottom: '10px', marginLeft: '15px' }}\r\n            >\r\n              <Grid\r\n                sx={{\r\n                  backgroundColor: \"lightgrey\",\r\n                  borderRadius: 5,\r\n                  padding: \"5px\",\r\n                  marginRight: 10,\r\n                }}\r\n                item\r\n                xs={6}\r\n                md={4}\r\n                lg={4}\r\n              >\r\n                <Grid>\r\n                  <Typography sx={{ fontWeight: \"bold\", color: \"black\" }}>\r\n                    <Link\r\n                      to={\"/explorer/block/\" + item.number}\r\n                      style={{ textDecoration: \"none\", color: \"black\" }}\r\n                    >\r\n                      Block {item.number}\r\n                    </Link>\r\n                  </Typography>\r\n                  <Typography>\r\n                    {format(new Date(item.timestamp * 1000), \"PPpp\")}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} md={4} lg={4}>\r\n                <Typography fontSize={14} color={\"primary\"}>\r\n                  Miner {item.miner}\r\n                </Typography>\r\n                <Typography\r\n                  fontSize={14}\r\n                  color={\"primary\"}\r\n                  sx={{ fontWeight: \"bold\" }}\r\n                >\r\n                  {item.transactions.length} Transactions{\" \"}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getExplorerBlocks,\r\n  getExplorerHistory,\r\n  getTransactions,\r\n} from \"../../http\";\r\nimport { useStoreState } from \"../../store\";\r\nimport { ExplorerChart } from \"../../componets/ExplorerChart\";\r\nimport { format } from \"date-fns\";\r\nimport {\r\n  ExplorerRespose,\r\n  IBlock,\r\n  IHistory,\r\n  ITransaction,\r\n} from \"../Profile/types\";\r\nimport { FullPageSpinner } from \"../../componets/FullPageSpinner\";\r\nimport { ExplorerBlocks } from \"../../componets/ExplorerBlocks\";\r\nimport { Box, styled, Typography } from \"@mui/material\";\r\nimport { Transactions } from \"../Transactions/Transactions\";\r\n\r\nconst Container = styled(Box)(({ theme }) => ({\r\n  width: \"100vw\",\r\n  padding: 20,\r\n  display: \"flex\",\r\n  [theme.breakpoints.down(\"md\")]: {\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nexport type TChartData = { date: string; y: number }[];\r\n\r\nconst transformDataForChart = (data: IHistory): TChartData => {\r\n  const result: TChartData = [];\r\n  for (let index = 0; index < data.x.length; index++) {\r\n    const elementX = format(new Date(data.x[index]), \"MMMM dd yyyy\");\r\n    const elementY = data.y[index];\r\n    result.push({ date: elementX, y: elementY });\r\n  }\r\n  return result;\r\n};\r\n\r\nexport default function Explorer() {\r\n  const user = useStoreState((store) => store.user);\r\n  const [transactions, setTransactions] = useState<\r\n    ExplorerRespose<ITransaction[]>\r\n  >({\r\n    limit: 0,\r\n    offset: 0,\r\n    items: [],\r\n    total: 0,\r\n  });\r\n  const [explorerHistory, setExplorerHistory] = useState<TChartData | []>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [explorerBlocks, setExplorerBlocks] = useState<\r\n    ExplorerRespose<IBlock[]>\r\n  >({ limit: 0, offset: 0, items: [], total: 0 });\r\n\r\n  const getState = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await getTransactions(user.walletAddress);\r\n      const { data: history } = await getExplorerHistory();\r\n      const { data: blocks } = await getExplorerBlocks();\r\n      const transformedHistory = transformDataForChart(history);\r\n      setExplorerHistory(transformedHistory);\r\n      setTransactions(data);\r\n      setExplorerBlocks(blocks);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  useEffect(() => {\r\n    getState();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <FullPageSpinner />;\r\n  }\r\n  return (\r\n    <Box>\r\n      {!!user.token && (\r\n        <Container>\r\n          <Box sx={{ maxWidth: 500 }}>\r\n            <ExplorerBlocks blocks={explorerBlocks.items} />\r\n          </Box>\r\n          <Box sx={{ height: 300, width: \"100%\" }}>\r\n            <ExplorerChart data={explorerHistory} />\r\n          </Box>\r\n        </Container>\r\n      )}\r\n      <Typography variant=\"h6\" sx={{ margin: \"16px\" }}>\r\n        Transactions\r\n      </Typography>\r\n      <Transactions transactions={transactions.items} />\r\n    </Box>\r\n  );\r\n}\r\n"],"names":["ExplorerChart","data","theme","useTheme","ResponsiveContainer","height","LineChart","width","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","type","name","stroke","palette","primary","main","activeDot","r","ExplorerBlocks","blocks","history","useHistory","Box","sx","display","alignItems","justifyContent","Typography","variant","style","fontSize","Button","onClick","push","backgroundColor","borderRadius","Grid","container","spacing","maxHeight","overflowY","marginTop","map","item","marginBottom","marginLeft","padding","marginRight","xs","md","lg","fontWeight","color","to","number","textDecoration","format","Date","timestamp","miner","transactions","length","hash","Container","styled","breakpoints","down","flexDirection","transformDataForChart","result","index","x","elementX","elementY","y","date","Explorer","user","useStoreState","store","useState","limit","offset","items","total","setTransactions","explorerHistory","setExplorerHistory","loading","setLoading","explorerBlocks","setExplorerBlocks","getState","getTransactions","walletAddress","getExplorerHistory","getExplorerBlocks","transformedHistory","console","log","useEffect","FullPageSpinner","token","maxWidth","Transactions"],"sourceRoot":""}
{"version":3,"file":"static/js/91.6ba497f0.chunk.js","mappings":"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","sources":["connector.ts","pages/Signon/MetamaskModal.tsx","pages/Signon/index.tsx"],"sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\n\nexport const injected = new InjectedConnector({\n    supportedChainIds: [1, 3, 4, 5, 42],\n})","import React from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { useFormik } from \"formik\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { registerSignature } from \"../../http\";\nimport { useHistory } from \"react-router-dom\";\nimport { useStoreState } from \"../../store\";\n\ntype TProps = {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst validate = (values: Record<string, string>) => {\n  const errors: Record<string, string> = {};\n\n  if (!values.firstName) {\n    errors.firstName = \"Required\";\n  }\n\n  if (!values.lastName) {\n    errors.lastName = \"Required\";\n  }\n\n  return errors;\n};\n\nexport function MetamaskModal({ open, setOpen }: TProps) {\n  const { account, library, deactivate } = useWeb3React();\n  const setUser = useStoreState((state) => state.setUser);\n  const history = useHistory();\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n    },\n    validate,\n    onSubmit: async (values) => {\n      const signer = library.getSigner();\n      try {\n        const msg = \"Register\";\n        const signature = await signer.signMessage(msg);\n        const resp = await registerSignature(\n          account as string,\n          signature,\n          msg,\n          values.firstName,\n          values.lastName\n        );\n        const user = resp.data.user;\n        setUser({\n          _id: user._id,\n          description: user.description,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          xmppPassword: user.xmppPassword,\n          walletAddress: user.defaultWallet.walletAddress,\n          token: resp.data.token,\n          refreshToken: resp.data.refreshToken,\n          profileImage: user.profileImage,\n          isProfileOpen: user.isProfileOpen,\n          isAssetsOpen: user.isAssetsOpen,\n          ACL: user.ACL,\n          isAllowedNewAppCreate: resp.data.isAllowedNewAppCreate,\n          isAgreeWithTerms: user.isAgreeWithTerms\n          \n        });\n        deactivate();\n        history.push(`/profile/${user.defaultWallet.walletAddress}`);\n      } catch (error) {\n        console.log(\"signature error \", error);\n      }\n    },\n  });\n\n  return (\n    <Dialog onClose={() => setOpen(false)} maxWidth={false} open={open}>\n      <Box style={{ width: \"350px\" }}>\n        <DialogTitle\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          Continue with Metamask\n          <IconButton onClick={() => setOpen(false)}>\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <Box sx={{ width: \"100%\", typography: \"body1\", padding: 1 }}>\n          <form onSubmit={formik.handleSubmit}>\n            <TextField\n              margin=\"dense\"\n              inputProps={{\n                autoComplete: \"off\",\n              }}\n              label=\"First Name\"\n              name=\"firstName\"\n              type=\"text\"\n              fullWidth\n              variant=\"standard\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={\n                formik.touched.firstName && Boolean(formik.errors.firstName)\n              }\n              helperText={\n                formik.touched.firstName && formik.errors.firstName\n                  ? formik.errors.firstName\n                  : \"\"\n              }\n            />\n            <TextField\n              margin=\"dense\"\n              label=\"Last Name\"\n              name=\"lastName\"\n              type=\"text\"\n              fullWidth\n              inputProps={{\n                autoComplete: \"off\",\n              }}\n              variant=\"standard\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              error={formik.touched.lastName && Boolean(formik.errors.lastName)}\n              helperText={\n                formik.touched.lastName && formik.errors.lastName\n                  ? formik.errors.lastName\n                  : \"\"\n              }\n            />\n            <Box sx={{ margin: 2, display: \"flex\", justifyContent: \"center\" }}>\n              <Button type=\"submit\" variant=\"contained\">\n                Register\n              </Button>\n            </Box>\n          </form>\n        </Box>\n      </Box>\n    </Dialog>\n  );\n}\n","import DiamondIcon from \"@mui/icons-material/Diamond\";\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\nimport GoogleIcon from \"@mui/icons-material/Google\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useEffect, useState } from \"react\";\nimport FacebookLogin from \"react-facebook-login\";\nimport { useHistory } from \"react-router-dom\";\nimport { injected } from \"../../connector\";\nimport * as http from \"../../http\";\nimport { useStoreState } from \"../../store\";\nimport { useQuery } from \"../../utils\";\nimport { EmailModal } from \"./EmailModal\";\nimport { MetamaskModal } from \"./MetamaskModal\";\nimport { UsernameModal } from \"./UsernameModal\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { gapi } from \"gapi-script\";\nimport { FullPageSpinner } from \"../../components/FullPageSpinner\";\nimport {\n  facebookSignIn,\n  googleSignIn,\n  metamaskSignIn,\n  regularLogin,\n} from \"../../config/config\";\n\nexport default function Signon() {\n  const setUser = useStoreState((state) => state.setUser);\n  const user = useStoreState((state) => state.user);\n  const query = useQuery();\n  const history = useHistory();\n  const { active, account, library, activate } = useWeb3React();\n  const [openEmail, setOpenEmail] = useState(false);\n  const [openUsername, setOpenUsername] = useState(false);\n  const [showMetamask, setShowMetamask] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const initClient = () => {\n      gapi.client.init({\n        clientId:\n          \"972933470054-9v5gnseqef8po7cvvrsovj51cte249ov.apps.googleusercontent.com\",\n        scope: \"\",\n      });\n    };\n    gapi.load(\"client:auth2\", initClient);\n  });\n\n  useEffect(() => {\n    if (user.firstName && user.xmppPassword) {\n      history.push(`/profile/${user.walletAddress}`);\n      return;\n    }\n    if (user.firstName && !user.xmppPassword) {\n      history.push(\"/owner\");\n      return;\n    }\n  }, [user]);\n\n  const onMetamaskLogin = () => {\n    activate(injected);\n  };\n\n  useEffect(() => {\n    const type = query.get(\"type\");\n    if (type) {\n      switch (type) {\n        case \"username\": {\n          setOpenUsername(true);\n          break;\n        }\n        case \"email\": {\n          setOpenEmail(true);\n          break;\n        }\n        default: {\n          break;\n        }\n      }\n    }\n  }, [query]);\n\n  useEffect(() => {\n    console.log(\"active \", active);\n    if (active) {\n      console.log(active, account);\n\n      if (account && !user.firstName) {\n        http\n          .checkExtWallet(account)\n          .then(async (result) => {\n            console.log(\"login user\");\n            const signer = library.getSigner();\n            const msg = \"Login\";\n            const signature = await signer.signMessage(msg);\n            const resp = await http.loginSignature(account, signature, msg);\n            const user = resp.data.user;\n\n            updateUserInfo(user, resp.data);\n\n            history.push(`/profile/${user.defaultWallet.walletAddress}`);\n          })\n          .catch((error) => {\n            console.log(error);\n            if (error.response && error.response.status === 404) {\n              console.log(\"registering user\");\n              setShowMetamask(true);\n            } else {\n              console.log(\"other errors\");\n            }\n          });\n      }\n    }\n  }, [active, account]);\n\n  const onGoogleClickSuccess = async (res: any) => {\n    const loginType = \"google\";\n    const emailExist = await http.checkEmailExist(res.profileObj.email);\n    setLoading(true);\n    console.log(emailExist.data.success);\n    if (!emailExist.data.success) {\n      const loginRes = await http.loginSocial(\n        res.tokenId,\n        res.accessToken,\n        loginType\n      );\n      const user = loginRes.data.user;\n\n      updateUserInfo(user, loginRes.data);\n    } else {\n      await http.registerSocial(res.tokenId, res.accessToken, \"\", loginType);\n      const loginRes = await http.loginSocial(\n        res.tokenId,\n        res.accessToken,\n        loginType\n      );\n      const user = loginRes.data.user;\n\n      updateUserInfo(user, loginRes.data);\n    }\n    setLoading(false);\n  };\n\n  const onFailure = (err: any) => {\n    console.log(\"failed:\", err);\n  };\n  const updateUserInfo = (\n    user: any,\n    tokens: {\n      refreshToken: string;\n      token: string;\n      referrerId?: string;\n      isAllowedNewAppCreate: boolean;\n    }\n  ) => {\n    setUser({\n      _id: user._id,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      description: user.description,\n      xmppPassword: user.xmppPassword,\n      walletAddress: user.defaultWallet.walletAddress,\n      token: tokens.token,\n      refreshToken: tokens.refreshToken,\n      profileImage: user.profileImage,\n      isProfileOpen: user.isProfileOpen,\n      isAssetsOpen: user.isAssetsOpen,\n      ACL: user.ACL,\n      referrerId: user.referrerId || \"\",\n      isAllowedNewAppCreate: tokens.isAllowedNewAppCreate,\n      isAgreeWithTerms: user.isAgreeWithTerms\n\n    });\n  };\n\n  const onFacebookClick = async (info: any) => {\n    const loginType = \"facebook\";\n    setLoading(true);\n    const emailExist = await http.checkEmailExist(info.email);\n    if (!emailExist.data.success) {\n      const loginRes = await http.loginSocial(\n        \"\",\n        \"\",\n        loginType,\n        info.accessToken\n      );\n      const user = loginRes.data.user;\n      updateUserInfo(user, loginRes.data);\n    } else {\n      await http.registerSocial(\"\", \"\", info.accessToken, loginType);\n      const loginRes = await http.loginSocial(\n        \"\",\n        \"\",\n        loginType,\n        info.accessToken\n      );\n      const user = loginRes.data.user;\n      updateUserInfo(user, loginRes.data);\n    }\n    setLoading(false);\n  };\n\n  if (loading) {\n    return <FullPageSpinner />;\n  }\n\n  return (\n    <Container\n      maxWidth=\"xl\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"calc(100vh - 68px)\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Box\n        sx={{ marginTop: 5 }}\n        style={{\n          display: \"flex\",\n          maxWidth: \"300px\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {facebookSignIn && (\n          <FacebookLogin\n            appId=\"1172938123281314\"\n            autoLoad={false}\n            fields=\"name,email,picture\"\n            onClick={() => {}}\n            callback={onFacebookClick}\n            icon={<FacebookIcon style={{ marginRight: 10 }} />}\n            buttonStyle={{\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n              fontSize: 16,\n              padding: 5,\n              borderRadius: 4,\n              width: \"100%\",\n              margin: \"3px 0\",\n              fontFamily: \"Roboto,Helvetica,Arial,sans-serif\",\n              fontWeight: 500,\n              textTransform: \"none\",\n              paddingLeft: 20,\n            }}\n            textButton={\"Sign In with facebook\"}\n            containerStyle={{ padding: 0, width: \"100%\" }}\n          />\n        )}\n        {googleSignIn && (\n          <GoogleLogin\n            clientId=\"972933470054-9v5gnseqef8po7cvvrsovj51cte249ov.apps.googleusercontent.com\"\n            buttonText=\"Sign In with Google\"\n            onSuccess={onGoogleClickSuccess}\n            onFailure={onFailure}\n            cookiePolicy={\"single_host_origin\"}\n            render={(props) => (\n              <Button\n                {...props}\n                sx={{ margin: 1 }}\n                fullWidth\n                variant=\"contained\"\n                startIcon={<GoogleIcon />}\n                style={{\n                  backgroundColor: \"white\",\n                  color: \"rgba(0,0,0,0.6)\",\n                  textTransform: \"none\",\n                  fontSize: \"16px\",\n                }}\n              >\n                Sign In with Google\n              </Button>\n            )}\n          />\n        )}\n        {metamaskSignIn && (\n          <Button\n            sx={{ margin: 1 }}\n            fullWidth\n            variant=\"contained\"\n            onClick={() => onMetamaskLogin()}\n            startIcon={<DiamondIcon />}\n            style={{\n              backgroundColor: \"#d9711a\",\n              textTransform: \"none\",\n              fontSize: \"16px\",\n            }}\n          >\n            Sign In with Metamask\n          </Button>\n        )}\n        {regularLogin && (\n          <Button\n            sx={{ margin: 1 }}\n            fullWidth\n            variant=\"text\"\n            onClick={() => history.push(\"/regularSignIn\")}\n          >\n            Login with credentials\n          </Button>\n        )}\n      </Box>\n\n      <MetamaskModal open={showMetamask} setOpen={setShowMetamask} />\n      <EmailModal open={openEmail} setOpen={setOpenEmail} />\n      <UsernameModal open={openUsername} setOpen={setOpenUsername} />\n    </Container>\n  );\n}\n"],"names":["injected","InjectedConnector","supportedChainIds","validate","values","errors","firstName","lastName","MetamaskModal","open","setOpen","useWeb3React","account","library","deactivate","setUser","useStoreState","state","history","useHistory","formik","useFormik","initialValues","onSubmit","signer","getSigner","msg","signMessage","signature","registerSignature","resp","user","data","_id","description","xmppPassword","walletAddress","defaultWallet","token","refreshToken","profileImage","isProfileOpen","isAssetsOpen","ACL","isAllowedNewAppCreate","isAgreeWithTerms","push","console","log","Dialog","onClose","maxWidth","Box","style","width","DialogTitle","display","justifyContent","IconButton","onClick","Close","sx","typography","padding","handleSubmit","TextField","margin","inputProps","autoComplete","label","name","type","fullWidth","variant","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","helperText","Button","Signon","query","useQuery","active","activate","useState","openEmail","setOpenEmail","openUsername","setOpenUsername","showMetamask","setShowMetamask","loading","setLoading","useEffect","gapi","clientId","scope","get","http","then","result","updateUserInfo","catch","response","status","onGoogleClickSuccess","res","loginType","profileObj","email","emailExist","success","tokenId","accessToken","loginRes","tokens","referrerId","onFacebookClick","info","FullPageSpinner","Container","flexDirection","height","alignItems","marginTop","facebookSignIn","appId","autoLoad","fields","callback","icon","Facebook","marginRight","buttonStyle","fontSize","borderRadius","fontFamily","fontWeight","textTransform","paddingLeft","textButton","containerStyle","googleSignIn","GoogleLogin","buttonText","onSuccess","onFailure","err","cookiePolicy","render","props","startIcon","Google","backgroundColor","color","metamaskSignIn","Diamond","regularLogin","EmailModal","UsernameModal"],"sourceRoot":""}
{"version":3,"file":"static/js/694.db3a7ec2.chunk.js","mappings":"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","sources":["pages/Profile/ChangeImage.tsx","pages/Profile/EditProfileModal.tsx","pages/Profile/UserCard.tsx","constants/index.ts","pages/Profile/ItemsTable.tsx","pages/Profile/DocumentsTable.tsx","pages/Profile/DocumentsCreateModal.tsx","pages/Profile/MyProfile.tsx","pages/Profile/OtherProfile.tsx","pages/Profile/index.tsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Button } from \"@mui/material\";\nimport ReactCrop, { centerCrop, makeAspectCrop, Crop } from \"react-image-crop\";\nimport * as http from \"../../http\";\nimport { useStoreState } from \"../../store\";\nimport \"react-image-crop/dist/ReactCrop.css\";\n\ntype TProps = {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nfunction centerAspectCrop(\n  mediaWidth: number,\n  mediaHeight: number,\n  aspect: number\n) {\n  return centerCrop(\n    makeAspectCrop(\n      {\n        unit: \"%\",\n        width: 90,\n      },\n      aspect,\n      mediaWidth,\n      mediaHeight\n    ),\n    mediaWidth,\n    mediaHeight\n  );\n}\n\nexport default function ChangeImage({ open, setOpen }: TProps) {\n  const user = useStoreState((state) => state.user);\n  const setUser = useStoreState((state) => state.setUser);\n  const fileRef = useRef<HTMLInputElement>(null);\n  const [imgSrc, setImgSrc] = useState(\"\");\n  const imgRef = useRef<HTMLImageElement>(null);\n  const [crop, setCrop] = useState<Crop>();\n  const [blob, setBlob] = useState<Blob>();\n  const aspect = 2;\n\n  function onSelectFile(e: React.ChangeEvent<HTMLInputElement>) {\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () =>\n        setImgSrc(reader.result?.toString() || \"\")\n      );\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  }\n\n  function onImageLoad(e: React.SyntheticEvent<HTMLImageElement>) {\n    if (aspect) {\n      const { width, height } = e.currentTarget;\n      setCrop(centerAspectCrop(width, height, aspect));\n    }\n  }\n\n  function onSave() {\n    const form = new FormData();\n    form.append(\"file\", blob, \"profileImg\");\n    http\n      .updateProfile(form)\n      .then((response) => {\n        // response.data.user\n        setUser({\n          ...user,\n          profileImage: response.data.user.profileImage,\n        });\n        setOpen(false);\n      })\n      .catch((e) => console.log(e));\n  }\n\n  function onCropComplete(crop) {\n    const canvas = document.createElement(\"canvas\");\n    const pixelRatio = window.devicePixelRatio;\n    const scaleX = imgRef.current.naturalWidth / imgRef.current.width;\n    const scaleY = imgRef.current.naturalHeight / imgRef.current.height;\n    const ctx = canvas.getContext(\"2d\");\n\n    canvas.width = crop.width * pixelRatio * scaleX;\n    canvas.height = crop.height * pixelRatio * scaleY;\n\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = \"high\";\n\n    ctx.drawImage(\n      imgRef.current,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width * scaleX,\n      crop.height * scaleY\n    );\n\n    canvas.toBlob(\n      (blob) => {\n        if (!blob) {\n          //reject(new Error('Canvas is empty'));\n          console.error(\"Canvas is empty\");\n          return;\n        }\n\n        setBlob(blob);\n      },\n      \"image/jpeg\",\n      1\n    );\n  }\n\n  return (\n    <Dialog onClose={() => {}} open={open}>\n      <Box>\n        <DialogTitle\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          Change Image\n          <IconButton\n            onClick={() => {\n              setImgSrc(\"\");\n              setOpen(false);\n            }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <Box sx={{ typography: \"body1\", padding: 1 }}>\n          <Box style={{ width: \"400px\" }}>\n            {!imgSrc && (\n              <Box\n                style={{\n                  height: \"200px\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <input\n                  type=\"file\"\n                  ref={fileRef}\n                  style={{ display: \"none\" }}\n                  accept=\"image/*\"\n                  onChange={onSelectFile}\n                />\n                <Button onClick={() => fileRef.current.click()}>Upload</Button>\n              </Box>\n            )}\n            {!!imgSrc && (\n              <Box>\n                <ReactCrop\n                  crop={crop}\n                  onChange={(_, percentCrop) => setCrop(percentCrop)}\n                  onComplete={onCropComplete}\n                  minWidth={100}\n                  minHeight={100}\n                >\n                  <img\n                    style={{ width: \"400px\", height: \"auto\" }}\n                    ref={imgRef}\n                    alt=\"Crop me\"\n                    src={imgSrc}\n                    onLoad={onImageLoad}\n                  />\n                </ReactCrop>\n                <Box style={{ display: \"flex\" }}>\n                  <Button onClick={onSave} style={{ marginLeft: \"auto\" }}>\n                    Save\n                  </Button>\n                </Box>\n              </Box>\n            )}\n          </Box>\n        </Box>\n      </Box>\n    </Dialog>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Button } from \"@mui/material\";\nimport { useFormik } from \"formik\";\nimport TextField from \"@mui/material/TextField\";\nimport { useStoreState } from \"../../store\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { httpWithAuth } from \"../../http\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport ChageImage from \"./ChangeImage\";\nimport defUserImage from \"../../assets/images/def-ava.png\";\n\ntype TProps = {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  user: any;\n};\n\nexport default function EditProfileModal({ open, setOpen, user }: TProps) {\n  const [change, setChange] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const setUser = useStoreState((state) => state.setUser);\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: user.firstName,\n      lastName: user.lastName,\n      description: user.description ? user.description : \"\",\n      isProfileOpen: user.isProfileOpen,\n      isAssetsOpen: user.isAssetsOpen,\n    },\n    validate: (values) => {\n      const errors: Record<string, string> = {};\n\n      if (!values.firstName) {\n        errors.firstName = \"Required\";\n      }\n\n      if (!values.lastName) {\n        errors.lastName = \"Required\";\n      }\n\n      return errors;\n    },\n    onSubmit: (values) => {\n      const fd = new FormData();\n      fd.append(\"firstName\", values.firstName);\n      fd.append(\"lastName\", values.lastName);\n\n      if (values.description) {\n        fd.append(\"description\", values.description);\n      }\n\n      fd.append(\"isProfileOpen\", values.isProfileOpen);\n      fd.append(\"isAssetsOpen\", values.isAssetsOpen);\n      setLoading(true);\n      httpWithAuth()\n        .put(\"/users\", fd)\n        .then((response) => {\n          const respUser = response.data.user;\n          setUser({\n            ...user,\n            firstName: respUser.firstName,\n            lastName: respUser.lastName,\n            description: respUser.description,\n            isProfileOpen: respUser.isProfileOpen,\n            isAssetsOpen: respUser.isAssetsOpen,\n          });\n          setOpen(false);\n        })\n        .finally(() => setLoading(false));\n    },\n  });\n\n  return (\n    <Dialog onClose={() => {}} open={open}>\n      <Box>\n        <DialogTitle\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          Edit Profile\n          <IconButton onClick={() => setOpen(false)}>\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <Box sx={{ width: \"100%\", typography: \"body1\", padding: 1 }}>\n          <Box style={{ display: \"flex\" }}>\n            <Box\n              sx={{ marginRight: \"10px\" }}\n              style={{ display: \"flex\", flexDirection: \"column\" }}\n            >\n              <img\n                style={{ width: \"150px\", borderRadius: \"10px\" }}\n                alt=\"\"\n                src={user.profileImage ? user.profileImage : defUserImage}\n              />\n              <a\n                href=\"/\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  setChange(true);\n                }}\n              >\n                change image\n              </a>\n            </Box>\n            <Box>\n              <form\n                style={{ display: \"flex\", flexDirection: \"column\" }}\n                onSubmit={formik.handleSubmit}\n              >\n                <TextField\n                  margin=\"dense\"\n                  label=\"First Name\"\n                  name=\"firstName\"\n                  variant=\"standard\"\n                  error={\n                    formik.touched.firstName && formik.errors.firstName\n                      ? true\n                      : false\n                  }\n                  helperText={\n                    formik.touched.firstName && formik.errors.firstName\n                      ? (formik.errors.firstName as string)\n                      : \"\"\n                  }\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.firstName}\n                />\n                <TextField\n                  margin=\"dense\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  variant=\"standard\"\n                  error={\n                    formik.touched.lastName && formik.errors.lastName\n                      ? true\n                      : false\n                  }\n                  helperText={\n                    formik.touched.lastName && formik.errors.lastName\n                      ? (formik.errors.lastName as string)\n                      : \"\"\n                  }\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.lastName}\n                />\n                <TextField\n                  margin=\"dense\"\n                  label=\"Profile Description\"\n                  name=\"description\"\n                  variant=\"standard\"\n                  onChange={formik.handleChange}\n                  onBlur={formik.handleBlur}\n                  value={formik.values.description}\n                />\n                <FormControlLabel\n                  checked={formik.values.isProfileOpen}\n                  name=\"isProfileOpen\"\n                  control={\n                    <Checkbox\n                      onChange={(e) => {\n                        formik.setFieldValue(\"isProfileOpen\", e.target.checked);\n                      }}\n                    />\n                  }\n                  label=\"Is Profile Open\"\n                  labelPlacement=\"end\"\n                />\n                <FormControlLabel\n                  checked={formik.values.isAssetsOpen}\n                  name=\"isAssetsOpen\"\n                  control={\n                    <Checkbox\n                      onChange={(e) => {\n                        formik.setFieldValue(\"isAssetsOpen\", e.target.checked);\n                      }}\n                    />\n                  }\n                  label=\"Is Assets Open\"\n                  labelPlacement=\"end\"\n                />\n                <LoadingButton\n                  type=\"submit\"\n                  loading={loading}\n                  variant=\"contained\"\n                >\n                  Save\n                </LoadingButton>\n              </form>\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n      {change && <ChageImage open={change} setOpen={setChange} />}\n    </Dialog>\n  );\n}\n","import * as React from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Card from \"@mui/material/Card\";\nimport Box from \"@mui/material/Box\";\nimport { TProfile } from \"./types\";\nimport defUserImage from \"../../assets/images/def-ava.png\";\nimport { useStoreState } from \"../../store\";\nimport EditProfileModal from \"./EditProfileModal\";\n\ntype TProps = {\n  profile?: TProfile;\n};\n\nexport default function UserCard({ profile }: TProps) {\n  const [edit, setEdit] = React.useState(false);\n  const user = useStoreState((state) => state.user);\n  if (profile) {\n    return (\n      <Box style={{ marginTop: \"10px\", marginRight: \"10px\" }}>\n        <Card\n          sx={{\n            display: \"flex\",\n            padding: \"10px\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            width: \"100%\",\n          }}\n        >\n          <Box sx={{ marginRight: \"10px\" }}>\n            {!!profile.firstName && (\n              <img\n                style={{ width: \"150px\", borderRadius: \"10px\" }}\n                alt=\"\"\n                src={profile.profileImage || defUserImage}\n              />\n            )}\n          </Box>\n          <Box>\n            <Box sx={{ fontWeight: \"bold\" }}>\n              {profile?.firstName} {profile?.lastName}\n            </Box>\n            {profile?.description && (\n              <Box>Description: {profile?.description}</Box>\n            )}\n          </Box>\n        </Card>\n      </Box>\n    );\n  }\n  return (\n    <Box style={{ marginTop: \"10px\", marginRight: \"10px\" }}>\n      <Card\n        sx={{\n          display: \"flex\",\n          padding: \"10px\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          width: \"100%\",\n        }}\n      >\n        <Box sx={{ marginRight: \"10px\" }}>\n          <img\n            style={{ width: \"150px\", borderRadius: \"10px\" }}\n            alt=\"\"\n            src={user.profileImage || defUserImage}\n          />\n        </Box>\n        <Box>\n          {!!user.firstName && (\n            <>\n              <Box sx={{ fontWeight: \"bold\" }}>\n                {user?.firstName} {user?.lastName}\n              </Box>\n              {user?.description && <Box>Description: {user?.description}</Box>}\n            </>\n          )}\n        </Box>\n        {user.firstName && (\n          <a\n            href=\"/\"\n            onClick={(e) => {\n              e.preventDefault();\n              setEdit(true);\n            }}\n          >\n            Edit\n          </a>\n        )}\n      </Card>\n      {edit && <EditProfileModal open={edit} setOpen={setEdit} user={user} />}\n    </Box>\n  );\n}\n","export const NFMT_TYPES: Record<string, { type: string; color: string }> = {\n  \"1\": { type: \"free\", color: \"chocolate\" },\n  \"2\": { type: \"silver\", color: \"grey\" },\n  \"3\": { type: \"gold\", color: \"orange\" },\n};\n\nexport const NFMT_TRAITS: Record<string, { color: string }> = {\n  Free: { color: \"blue\" },\n  Silver: { color: \"grey\" },\n  Gold: { color: \"orange\" },\n  Bronze: { color: \"chocolate\" },\n  Rare: { color: \"lightgreen\" },\n  \"Unique!\": { color: \"black\" },\n};\n","import React from \"react\";\n\nimport { TBalance } from \"../../store\";\nimport {\n  Avatar,\n  Chip,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemButton,\n  ListItemText,\n  useTheme,\n  Box,\n} from \"@mui/material\";\nimport { produceNfmtItems } from \"../../utils\";\nimport { NFMT_TRAITS } from \"../../constants\";\nimport { useHistory } from \"react-router\";\n\nconst NftItem = ({\n  item,\n  walletAddress,\n}: {\n  item: TBalance;\n  walletAddress: string;\n}) => {\n  const theme = useTheme();\n  const history = useHistory();\n  const onItemClick = () => {\n    history.push({\n      pathname: \"/provenance\",\n      state: { nftItem: item, walletAddress },\n    });\n  };\n  return (\n    <ListItem key={item.nftId}>\n      <ListItemButton onClick={onItemClick}>\n        <ListItemAvatar>\n          <Avatar\n            style={{ backgroundColor: theme.palette.primary.main }}\n            src={item.imagePreview}\n          />\n        </ListItemAvatar>\n        <ListItemText primary={item.tokenName} />\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <span style={{ textAlign: \"left\", width: 50 }}>\n            {item.balance}/{item.total}\n          </span>\n        </Box>\n      </ListItemButton>\n    </ListItem>\n  );\n};\nconst NfmtItem = ({\n  item,\n  walletAddress,\n}: {\n  item: TBalance;\n  walletAddress: string;\n}) => {\n  const theme = useTheme();\n  const history = useHistory();\n  const onItemClick = () => {\n    history.push({\n      pathname: \"/provenance\",\n      state: { nftItem: item, walletAddress },\n    });\n  };\n  return (\n    <ListItem key={item.nftId}>\n      <ListItemButton onClick={onItemClick}>\n        <ListItemAvatar>\n          <Avatar\n            style={{ backgroundColor: theme.palette.primary.main }}\n            src={item.nftFileUrl}\n          />\n        </ListItemAvatar>\n        <ListItemText primary={item.tokenName} />\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n          }}\n        >\n          <Box\n            sx={{\n              // marginRight: \"10px\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n            }}\n          >\n            {item.traits.map((trait) => {\n              return (\n                <Chip\n                  sx={{\n                    backgroundColor: NFMT_TRAITS[trait].color,\n                    marginRight: \"5px\",\n                  }}\n                  label={trait}\n                  key={trait}\n                />\n              );\n            })}\n          </Box>\n          <span style={{ textAlign: \"left\", width: 50 }}>\n            {item.balance}/{item.total}\n          </span>\n        </Box>\n      </ListItemButton>\n    </ListItem>\n  );\n};\n\nexport default function ItemsTable({\n  balance,\n  walletAddress,\n}: {\n  balance: TBalance[];\n  walletAddress: string;\n}) {\n  const nftItems = balance.filter((item) => item.tokenType === \"NFT\");\n  const nfmtItems = produceNfmtItems(balance);\n  return (\n    <List sx={{ width: \"100%\", bgcolor: \"background.paper\" }}>\n      {nftItems.map((item, i) => {\n        return (\n          <NftItem walletAddress={walletAddress} item={item} key={item.nftId} />\n        );\n      })}\n      {nfmtItems.map((item, i) => {\n        return (\n          <NfmtItem\n            walletAddress={walletAddress}\n            item={item}\n            key={item.nftId + i}\n          />\n        );\n      })}\n    </List>\n  );\n}\n","import * as React from \"react\";\n\nimport { Box } from \"@mui/system\";\nimport * as http from \"../../http\";\n\nimport QrCodeIcon from \"@mui/icons-material/QrCode\";\nimport {\n  Avatar,\n  Chip,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemButton,\n  ListItemText,\n  useTheme,\n} from \"@mui/material\";\nimport { format } from \"date-fns\";\nimport { useHistory } from \"react-router\";\n\nconst DocumentItem = ({\n  item,\n  walletAddress,\n}: {\n  item: http.IDocument;\n  walletAddress: string;\n}) => {\n  const theme = useTheme();\n  const history = useHistory();\n  const onItemClick = () => {\n    history.push({\n      pathname: \"/provenance\",\n      state: { nftItem: item, walletAddress },\n    });\n  };\n  return (\n    <ListItem key={item._id}>\n      <ListItemButton onClick={onItemClick}>\n        <ListItemAvatar>\n          <Avatar\n            style={{ backgroundColor: theme.palette.primary.main }}\n            src={item.file.locationPreview}\n          />\n        </ListItemAvatar>\n        <ListItemText\n          primary={item.documentName}\n          secondary={format(new Date(item.createdAt), \"pp PP\")}\n        />\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <IconButton sx={{ color: \"black\" }}>\n            <QrCodeIcon />\n          </IconButton>\n        </Box>\n      </ListItemButton>\n    </ListItem>\n  );\n};\n\nexport default function DocumentsTable({\n  documents,\n  walletAddress,\n}: {\n  documents: http.IDocument[];\n  walletAddress: string;\n}) {\n  return (\n    <List sx={{ width: \"100%\", bgcolor: \"background.paper\" }}>\n      {documents.map((item) => {\n        return (\n          <DocumentItem\n            walletAddress={walletAddress}\n            item={item}\n            key={item._id}\n          />\n        );\n      })}\n    </List>\n  );\n}\n","import * as React from \"react\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { IconButton } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport TextField from \"@mui/material/TextField\";\nimport { useFormik } from \"formik\";\nimport * as http from \"../../http\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\n\ntype TProps = {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  setDocuments: (Document: Object) => void;\n};\n\nexport default function DocumentsCreateModal(props: TProps) {\n  const [loading, setLoading] = React.useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      documentName: \"\",\n      file: null,\n    },\n    validate: (values) => {\n      const errors: Record<string, string> = {};\n\n      if (!values.documentName) {\n        errors.documentName = \"Required\";\n      }\n\n      if (!values.file) {\n        errors.file = \"Required\";\n      }\n\n      return errors;\n    },\n    onSubmit: async (values) => {\n      setLoading(true);\n      try {\n        console.log(values);\n        const fd = new FormData();\n        fd.append(\"files\", values.file);\n        const fileUploadResp = await http.httpWithAuth().post(\"/files\", fd);\n        const fileLocation = fileUploadResp.data.results[0].location;\n        const documentUploadRest = await http.httpWithAuth().post(\"/docs\", {\n          documentName: values.documentName,\n          files: [fileLocation],\n        });\n        props.setDocuments(documentUploadRest.data);\n        setLoading(false);\n        props.setOpen(false);\n      } catch (e) {\n        console.log(e);\n        setLoading(false);\n      }\n    },\n  });\n\n  return (\n    <Dialog onClose={() => {}} maxWidth={false} open={props.open}>\n      <Box style={{ width: \"400px\" }}>\n        <DialogTitle\n          style={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          Create New Document\n          <IconButton onClick={() => props.setOpen(false)}>\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <Box\n          sx={{\n            width: \"100%\",\n            typography: \"body1\",\n            padding: 1,\n          }}\n        >\n          <form style={{ flex: \"1\" }} onSubmit={formik.handleSubmit}>\n            <input\n              onChange={(e) => {\n                formik.setFieldValue(\"file\", e.target.files[0]);\n              }}\n              type=\"file\"\n            />\n            {formik.touched.file && formik.errors.file ? (\n              <FormHelperText error>\n                {formik.errors.file as string}\n              </FormHelperText>\n            ) : null}\n            <TextField\n              margin=\"dense\"\n              inputProps={{\n                autoComplete: \"off\",\n              }}\n              label=\"Document Name\"\n              name=\"documentName\"\n              type=\"text\"\n              fullWidth\n              variant=\"standard\"\n              onChange={(e) => {\n                formik.handleChange(e);\n              }}\n              onBlur={formik.handleBlur}\n              error={\n                formik.touched.documentName &&\n                Boolean(formik.errors.documentName)\n              }\n              helperText={\n                formik.touched.documentName && formik.errors.documentName\n                  ? formik.errors.documentName\n                  : \"\"\n              }\n            />\n            <Box sx={{ margin: 2, display: \"flex\", justifyContent: \"center\" }}>\n              <LoadingButton\n                loading={loading}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Create\n              </LoadingButton>\n            </Box>\n          </form>\n        </Box>\n      </Box>\n    </Dialog>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport { ExplorerRespose, ITransaction, TProfile } from \"./types\";\nimport UserCard from \"./UserCard\";\nimport { getPublicProfile, getTransactions, getBalance } from \"../../http\";\nimport { useStoreState } from \"../../store\";\nimport ItemsTable from \"./ItemsTable\";\nimport { Transactions } from \"../Transactions/Transactions\";\nimport { Typography } from \"@mui/material\";\nimport DocumentsTable from \"./DocumentsTable\";\nimport { FullPageSpinner } from \"../../componets/FullPageSpinner\";\nimport { filterNftBalances } from \"../../utils\";\nimport DocumentsCreateModal from \"./DocumentsCreateModal\";\n\nexport function MyProfile() {\n  const [loading, setLoading] = useState(false);\n  const [transactions, setTransactions] =\n    useState<ExplorerRespose<ITransaction[]>>();\n  const user = useStoreState((store) => store.user);\n  const items = useStoreState((state) => state.balance);\n  const documents = useStoreState((state) => state.documents);\n  const [showCreateDocument, setShowCreateDocument] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getTransactions(user.walletAddress)\n      .then((result) => {\n        setTransactions(result.data);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  if (loading) return <FullPageSpinner />;\n  return (\n    <Container maxWidth=\"xl\" style={{ height: \"calc(100vh - 80px)\" }}>\n      <Box sx={{ margin: \"auto\", width: \"200px\" }}>\n        <UserCard />\n      </Box>\n      <Typography variant=\"h6\" style={{ margin: \"16px\" }}>\n        Items\n      </Typography>\n      <ItemsTable\n        balance={items.filter(filterNftBalances)}\n        walletAddress={user.walletAddress}\n      />\n      {!!documents.length && (\n        <>\n          <Typography\n            variant=\"h6\"\n            style={{\n              margin: \"16px\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <span>Documents</span>\n            <a\n              href=\"/\"\n              style={{\n                textDecoration: \"none\",\n                color: \"inherit\",\n                fontSize: \"14px\",\n              }}\n              onClick={(e) => {\n                e.preventDefault();\n                setShowCreateDocument(true);\n              }}\n            >\n              Create New Document\n            </a>\n          </Typography>\n          <DocumentsTable\n            walletAddress={user.walletAddress}\n            documents={documents}\n          />\n        </>\n      )}\n\n      {!!transactions && (\n        <Box>\n          <Typography variant=\"h6\" style={{ margin: \"16px\" }}>\n            Transactions\n          </Typography>\n          <Transactions transactions={transactions.items} />\n        </Box>\n      )}\n\n      <DocumentsCreateModal\n        open={showCreateDocument}\n        setOpen={setShowCreateDocument}\n        setDocuments={() => {}}\n      />\n    </Container>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport { ExplorerRespose, ITransaction, TProfile } from \"./types\";\nimport UserCard from \"./UserCard\";\nimport {\n  getPublicProfile,\n  getTransactions,\n  getBalance,\n  IDocument,\n} from \"../../http\";\nimport { Transactions } from \"../Transactions/Transactions\";\nimport { FullPageSpinner } from \"../../componets/FullPageSpinner\";\nimport ItemsTable from \"./ItemsTable\";\nimport { filterNftBalances } from \"../../utils\";\nimport { TBalance } from \"../../store\";\nimport { Typography } from \"@mui/material\";\nimport DocumentsTable from \"./DocumentsTable\";\nimport * as http from \"../../http\";\n\ntype TProps = {\n  walletAddress: string;\n};\n\nexport function OtherProfile(props: TProps) {\n  const [loading, setLoading] = useState(true);\n  const [profile, setProfile] = useState<TProfile>();\n  const [transactions, setTransactions] =\n    useState<ExplorerRespose<ITransaction[]>>();\n  const [balances, setBalances] = useState<TBalance[]>([]);\n  const [documents, setDocuments] = useState<IDocument[]>([]);\n  const getDocuments = async (documents: IDocument[]) => {\n    const mappedDocuments = [];\n    for (const item of documents) {\n      try {\n        const { data: file } = await http\n          .httpWithAuth()\n          .get<http.IFile>(\"/files/\" + item.files[0]);\n        item.file = file;\n        mappedDocuments.push(item);\n      } catch (error) {\n        console.log( item.files[0],\"sdjfkls\");\n      }\n    }\n    setDocuments(mappedDocuments);\n  };\n  useEffect(() => {\n    setLoading(true);\n    getPublicProfile(props.walletAddress).then((result) => {\n      setProfile(result.data);\n      setBalances(result.data.balances.balance);\n      getDocuments(result.data.documents);\n    });\n    // .finally(() => setLoading(false));\n    setLoading(false);\n    getTransactions(props.walletAddress).then((result) => {\n      setTransactions(result.data);\n    });\n  }, []);\n\n  if (loading) {\n    return <FullPageSpinner />;\n  }\n  return (\n    <Container maxWidth=\"xl\" style={{ height: \"calc(100vh - 80px)\" }}>\n      <Box>\n        {!!profile?.firstName && (\n          <Box sx={{ width: \"200px\", margin: \"auto\", padding: \"10px\" }}>\n            <UserCard profile={profile} />\n          </Box>\n        )}\n        {!!balances.filter(filterNftBalances).length && (\n          <>\n            <Typography variant=\"h6\" style={{ margin: \"16px\" }}>\n              Items\n            </Typography>\n            <ItemsTable\n              balance={balances.filter(filterNftBalances)}\n              walletAddress={props.walletAddress}\n            />\n          </>\n        )}\n      </Box>\n      {!!documents.length && (\n        <>\n          <Typography variant=\"h6\" style={{ margin: \"16px\" }}>\n            Documents\n          </Typography>\n          <DocumentsTable\n            walletAddress={props.walletAddress}\n            documents={documents}\n          />\n        </>\n      )}\n      {!!transactions && (\n        <>\n          <Typography variant=\"h6\" style={{ margin: \"16px\" }}>\n            Transactions\n          </Typography>\n          <Transactions transactions={transactions.items} />\n        </>\n      )}\n      {/* <DocumentsTable walletAddress={props.walletAddress} /> */}\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { useStoreState } from \"../../store\";\nimport { useParams } from \"react-router-dom\";\nimport { MyProfile } from \"./MyProfile\";\nimport { OtherProfile } from \"./OtherProfile\";\n\nexport default function Profile() {\n  const user = useStoreState((state) => state.user);\n  const params: { wallet: string } = useParams();\n\n  if (user.walletAddress === params.wallet) {\n    return <MyProfile />;\n  } else {\n    return <OtherProfile walletAddress={params.wallet} />;\n  }\n}\n"],"names":["ChangeImage","open","setOpen","user","useStoreState","state","setUser","fileRef","useRef","useState","imgSrc","setImgSrc","imgRef","crop","setCrop","blob","setBlob","Dialog","onClose","Box","DialogTitle","style","display","justifyContent","IconButton","onClick","Close","sx","typography","padding","width","height","alignItems","type","ref","accept","onChange","e","target","files","length","reader","FileReader","addEventListener","result","toString","readAsDataURL","Button","current","click","_","percentCrop","onComplete","canvas","document","createElement","pixelRatio","window","devicePixelRatio","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","setTransform","imageSmoothingQuality","drawImage","x","y","toBlob","console","error","minWidth","minHeight","alt","src","onLoad","currentTarget","mediaWidth","mediaHeight","aspect","centerCrop","makeAspectCrop","unit","centerAspectCrop","form","FormData","append","http","then","response","profileImage","data","catch","log","marginLeft","EditProfileModal","change","setChange","loading","setLoading","formik","useFormik","initialValues","firstName","lastName","description","isProfileOpen","isAssetsOpen","validate","values","errors","onSubmit","fd","httpWithAuth","put","respUser","finally","marginRight","flexDirection","borderRadius","defUserImage","href","preventDefault","handleSubmit","TextField","margin","label","name","variant","touched","helperText","handleChange","onBlur","handleBlur","value","FormControlLabel","checked","control","Checkbox","setFieldValue","labelPlacement","LoadingButton","UserCard","profile","React","edit","setEdit","marginTop","Card","fontWeight","NFMT_TRAITS","Free","color","Silver","Gold","Bronze","Rare","NftItem","item","walletAddress","theme","useTheme","history","useHistory","ListItem","ListItemButton","push","pathname","nftItem","ListItemAvatar","Avatar","backgroundColor","palette","primary","main","imagePreview","ListItemText","tokenName","textAlign","balance","total","nftId","NfmtItem","nftFileUrl","traits","map","trait","Chip","ItemsTable","nftItems","filter","tokenType","nfmtItems","produceNfmtItems","List","bgcolor","i","DocumentItem","file","locationPreview","documentName","secondary","format","Date","createdAt","QrCode","_id","DocumentsTable","documents","DocumentsCreateModal","props","post","fileUploadResp","fileLocation","results","location","documentUploadRest","setDocuments","maxWidth","flex","FormHelperText","inputProps","autoComplete","fullWidth","Boolean","MyProfile","transactions","setTransactions","store","items","showCreateDocument","setShowCreateDocument","useEffect","getTransactions","FullPageSpinner","Container","Typography","filterNftBalances","textDecoration","fontSize","Transactions","OtherProfile","setProfile","balances","setBalances","getDocuments","mappedDocuments","get","getPublicProfile","Profile","params","useParams","wallet"],"sourceRoot":""}
{"version":3,"file":"static/js/711.8a8e8003.chunk.js","mappings":"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","sources":["helpers/chat/createPrivateChat.ts","componets/Chat/Messages/Message.tsx","componets/Chat/Messages/SystemMessage.tsx","pages/ChatInRoom/Chat.tsx","pages/ChatInRoom/index.tsx"],"sourcesContent":["import xmpp from \"../../xmpp\";\n\nexport const underscoreManipulation = (str:string) => {\n    if(str){\n        return str.replace(/([A-Z])/g, '_$1').toLowerCase()\n    }else{\n        return 'invalid string passed'\n    }\n};\n\nexport const createPrivateChat = async (\n    myWalletAddress: string,\n    otherUserWalletAddress: string,\n    myFirstName: string,\n    otherFirstName: string,\n    CONFERENCEDOMAIN: string\n) => {\n    const combinedWalletAddress = [myWalletAddress, otherUserWalletAddress]\n        .sort()\n        .join('_');\n\n    const roomJid = combinedWalletAddress.toLowerCase() + CONFERENCEDOMAIN;\n    const combinedUsersName = [myFirstName, otherFirstName].sort().join(' and ');\n\n    xmpp.createNewRoom(combinedWalletAddress.toLowerCase());\n    xmpp.setOwner(combinedWalletAddress.toLowerCase());\n    xmpp.roomConfig(\n        combinedWalletAddress.toLowerCase(),\n        {roomName: combinedUsersName},\n    );\n    xmpp.subsribe(roomJid);\n    xmpp.presenceInRoom(roomJid);\n\n    setTimeout(() => {\n        xmpp.sendInvite(\n            underscoreManipulation(myWalletAddress),\n            roomJid.toLowerCase(),\n            underscoreManipulation(otherUserWalletAddress),\n        );\n    }, 1000);\n    return {roomJid, roomName: combinedUsersName};\n};\n","import React, {useEffect, useRef, useState} from \"react\";\nimport { Message as KitMessage, MessageModel, Button, MessageSeparator } from \"@chatscope/chat-ui-kit-react\";\nimport { differenceInHours, format, formatDistance, subDays } from \"date-fns\";\nimport {TMessageHistory, useStoreState} from \"../../../store\";\nimport {useHistory} from \"react-router\";\nimport {\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle, IconButton, Menu, MenuItem, TextField, useMediaQuery,\n  useTheme\n} from \"@mui/material\";\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Box from \"@mui/material/Box\";\nimport {getPublicProfile, transferCoin} from \"../../../http\";\nimport xmpp from \"../../../xmpp\";\nimport {TProfile} from \"../../../pages/Profile/types\";\nimport {createPrivateChat} from \"../../../helpers/chat/createPrivateChat\";\n\nexport interface IMessage {\n  message: TMessageHistory;\n  userJid: string;\n  position: {\n    type: string;\n    position: MessageModel['position'];\n    separator?: string;\n  };\n  is?: string;\n  buttonSender: any;\n  chooseDirectRoom: any;\n}\n\nexport interface IButtons {\n  name: string;\n  notDisplayedValue: string;\n  value: string\n}\n\ntype IDialog = \"transfer\" | \"direct\" | \"ban\" | \"error\";\n\nexport const Message: React.FC<IMessage> = ({\n  message,\n  userJid,\n  position,\n  buttonSender,\n  chooseDirectRoom\n}) => {\n  const firstName = message.data.senderFirstName;\n  const lastName = message.data.senderLastName;\n  const messageJid = message.data.senderJID;\n  const history = useHistory();\n  const [buttons, setButtons] = useState<IButtons[]>();\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n  const [openDialog, setOpenDialog] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [dialogMenuType, setDialogMenuType] = useState<IDialog>(\"transfer\");\n  const [dialogText, setDialogText] = useState(\"\");\n  const openMenu = Boolean(anchorEl);\n  const handleClickMenu = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const [coinAmount, setCoinAmount] = useState(\"\");\n  const balance = useStoreState((store) => store.balance);\n  const coinData = balance.filter(el => !el.tokenType && el.contractAddress.length > 10)\n  const [profile, setProfile] = useState<TProfile>();\n  const user = useStoreState((store) => store.user);\n  const loaderArchive = useStoreState((store) => store.loaderArchive);\n\n  const openDialogMenu = (type: IDialog) => {\n    setAnchorEl(null)\n    setOpenDialog(true);\n    setDialogMenuType(type);\n  }\n\n  const sendCoins = () => {\n    // @ts-ignore\n    transferCoin(coinData[0].tokenSymbol, coinData[0].tokenName, Number(coinAmount), message.data.senderWalletAddress).then(() => {\n      const textMessage = user.firstName + \" \" + user.lastName + \" -> \" + coinAmount + \" \" + coinData[0].tokenName + \" -> \" + message.data.senderFirstName + \" \" + message.data.senderLastName;\n\n      xmpp.sendSystemMessage(\n          message.roomJID,\n          user.firstName,\n          user.lastName,\n          user.walletAddress,\n          textMessage,\n          null,\n          message.id\n      );\n\n      setOpenDialog(false);\n    }).catch(error => {\n      console.log(error);\n      setDialogText(\"An error occurred during the coin transfer.\");\n      setDialogMenuType(\"error\");\n    })\n  }\n\n  const openPrivateRoom = () => {\n    createPrivateChat(\n        user.walletAddress,\n        message.data.senderWalletAddress,\n        user.firstName,\n        message.data.senderFirstName,\n        '@conference.dev.dxmpp.com').then(result => {\n          console.log(result);\n\n          xmpp.getRooms();\n          if(!loaderArchive){\n            chooseDirectRoom(result.roomJid)\n          }\n\n    }).catch(error => {\n      console.log(\"openPrivateRoom Error: \", error);\n    })\n  }\n\n  useEffect(() => {\n    if(message.data.quickReplies){\n      setButtons(JSON.parse(message.data.quickReplies));\n    }\n    getPublicProfile(user.walletAddress).then((result) => {\n      setProfile(result.data.result);\n    });\n  }, [])\n\n  return (\n  <div is={\"Message\"}>\n    {position.separator ?\n      <MessageSeparator>\n        {position.separator}\n      </MessageSeparator> : null\n    }\n    <KitMessage\n      key={message.key}\n      model={{\n        sender: firstName + \" \" + lastName,\n        direction: String(userJid).split(\"/\")[0] === String(messageJid).split(\"/\")[0] ? \"outgoing\" : \"incoming\",\n        position: position.position,\n      }}\n      avatarPosition={String(userJid).split(\"/\")[0] === String(messageJid).split(\"/\")[0] ? \"tr\" : \"tl\"}\n      avatarSpacer={position.type !== \"first\" && position.type !== \"single\"}\n    >\n      {(position.type === \"first\" || position.type === \"single\") && (\n        <img\n          style={{\n            borderRadius: \"50%\",\n            boxSizing: \"border-box\",\n            width: \"42px\",\n            height: \"42px\",\n            cursor: \"pointer\"\n          }}\n          onClick={() => history.push(\"/profile/\"+message.data.senderWalletAddress)}\n          is={\"Avatar\"}\n          src={message.data.photoURL}\n          onError={({ currentTarget }) => {\n            currentTarget.onerror = null;\n            currentTarget.src =\n              \"https://icotar.com/initials/\" + firstName + \" \" + lastName;\n          }}\n          alt={firstName}\n        />\n      )}\n\n      <KitMessage.CustomContent>\n        {(position.type === \"first\" || position.type === \"single\") && (\n            <span style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>\n              <strong style={{cursor: \"pointer\"}} onClick={() => history.push(\"/profile/\" + message.data.senderWalletAddress)}>\n                {firstName} {lastName}\n                <br />\n              </strong>\n              {String(userJid).split(\"/\")[0] !== String(messageJid).split(\"/\")[0] ?\n                  <IconButton\n                      aria-label=\"more\"\n                      id=\"long-button\"\n                      aria-controls={openMenu ? 'long-menu' : undefined}\n                      aria-expanded={openMenu ? 'true' : undefined}\n                      aria-haspopup=\"true\"\n                      onClick={handleClickMenu}\n                  >\n                    <MoreVertIcon />\n                  </IconButton>\n              :null\n              }\n            </span>\n        )}\n\n        {message.data.isMediafile && message.data.mimetype.split(\"/\")[0] === \"image\"?\n           <KitMessage.ImageContent src={message.data.location} alt={message.data.originalName} width={200} />\n            :null\n        }\n\n        {message.data.isMediafile && message.data.mimetype.split(\"/\")[0] === \"application\"?\n            <a target=\"_blank\" href={message.data.location}>\n              <KitMessage.ImageContent src={message.data.locationPreview} alt={message.data.originalName} width={150} />\n              {message.data.mimetype.split(\"/\")[1]}\n            </a>\n            :null\n        }\n\n        {message.data.isMediafile && message.data.mimetype.split(\"/\")[0] === \"video\" ?\n            <video controls width=\"200px\">\n              <source src={message.data.location} type={message.data.mimetype} title={message.data.originalName}/>\n              Sorry, your browser doesn't support videos.\n            </video>\n            : null\n        }\n\n        {!message.data.isMediafile ?\n            message.body\n            : null\n        }\n      </KitMessage.CustomContent>\n\n      {(position.type === \"last\" || position.type === \"single\") && (\n        <KitMessage.Footer\n          sentTime={\n            differenceInHours(new Date(), new Date(message.date)) > 5\n              ? format(new Date(message.date), \"h:mm:ss a\")\n              : formatDistance(subDays(new Date(message.date), 0), new Date(), {\n                  addSuffix: true,\n                })\n          }\n        />\n      )}\n    </KitMessage>\n        {buttons ?\n            <div style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              width: \"max-content\",\n              marginLeft: \"45px\"\n            }}>\n              {buttons.map((button, index) => {\n                return (\n                  <Button onClick={() => buttonSender(button)} key={index} border>{button.name}</Button>\n                );\n             })}\n            </div>\n          : null}\n    <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={openMenu}\n        onClose={() => setAnchorEl(null)}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n    >\n      <MenuItem onClick={() => openDialogMenu(\"transfer\")}>Transfer coins</MenuItem>\n      <MenuItem onClick={openPrivateRoom}>Direct message</MenuItem>\n      <MenuItem onClick={() => setAnchorEl(null)}>Ban this user</MenuItem>\n    </Menu>\n\n    <Dialog\n        fullScreen={fullScreen}\n        open={openDialog}\n        onClose={() => setOpenDialog(true)}\n        aria-labelledby=\"responsive-dialog-title\"\n    >\n      <DialogContent>\n        {dialogMenuType === \"error\" ?\n            <div>\n              {dialogText}\n            </div>\n            :null\n        }\n\n        {dialogMenuType === \"transfer\" ?\n            <div style={{display: \"flex\", flexDirection: \"column\"}}>\n              Rewards <strong>{coinData[0].tokenName}</strong> with coins\n              <TextField id=\"outlined-basic\" label=\"Outlined\" type={\"number\"} variant=\"outlined\" value={coinAmount} onChange={event => setCoinAmount(event.target.value)} />\n              <Button onClick={sendCoins}>Send</Button>\n            </div>\n        :null\n        }\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setOpenDialog(false)} autoFocus>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  </div>\n  );\n};\n","import {TMessageHistory} from \"../../../store\";\nimport React from \"react\";\n\nexport interface IMessage {\n    message: TMessageHistory;\n    userJid: string;\n    is?: string;\n}\n\nexport const SystemMessage: React.FC<IMessage> = ({message, userJid}) => {\n    return (\n        <div style={{\n            textAlign: \"center\",\n            color: \"#6ea9d7\",\n            fontSize: \".8em\",\n            boxSizing: \"border-box\",\n            fontFamily: \"Helvetica Neue,Segoe UI,Helvetica,Arial,sans-serif\"\n        }} key={message.key}>\n            {message.body}\n        </div>\n    );\n}","import React, {useEffect, useRef, useState} from \"react\";\nimport Box from \"@mui/material/Box\";\nimport xmpp from \"../../xmpp\";\nimport { TMessageHistory, useStoreState } from \"../../store\";\nimport {getPublicProfile, uploadFile} from \"../../http\";\nimport { TProfile } from \"../Profile/types\";\nimport BookmarkRemoveIcon from \"@mui/icons-material/BookmarkRemove\";\nimport { differenceInHours, format, formatDistance, subDays } from \"date-fns\";\n\nimport {\n  MainContainer,\n  Avatar,\n  ChatContainer,\n  MessageList,\n  MessageInput,\n  Conversation,\n  ConversationList,\n  Sidebar,\n  Search,\n  ConversationHeader,\n  TypingIndicator,\n  MessageModel,\n} from \"@chatscope/chat-ui-kit-react\";\nimport {Message} from \"../../componets/Chat/Messages/Message\";\nimport {SystemMessage} from \"../../componets/Chat/Messages/SystemMessage\";\nimport {\n  Button,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  useMediaQuery,\n  useTheme\n} from \"@mui/material\";\n\ntype IMessagePosition = {\n  position: MessageModel[\"position\"];\n  type: string;\n  separator?: string;\n};\n\nconst getPosition = (\n  arr: TMessageHistory[],\n  message: TMessageHistory,\n  index: number\n) => {\n  const previousJID = arr[index - 1]?.data.senderJID?.split(\"/\")[0];\n  const nextJID = arr[index + 1]?.data.senderJID?.split(\"/\")[0];\n  const currentJID = message.data.senderJID?.split(\"/\")[0];\n\n  let result: IMessagePosition = {\n    position: \"single\",\n    type: \"single\",\n  };\n\n  if(arr[index - 1] && message){\n    if(format(new Date(arr[index - 1]?.date), \"dd\") !== format(new Date(message.date), \"dd\")){\n      result.separator = format(new Date(message.date), \"EEEE, dd LLLL yyyy\");\n    }\n  }\n\n  if (previousJID !== currentJID && nextJID !== currentJID) {\n    return result;\n  }\n\n  if (previousJID !== currentJID && nextJID === currentJID) {\n    result.position = \"first\";\n    result.type = \"first\";\n    return result;\n  }\n\n  if (previousJID === currentJID && nextJID === currentJID) {\n    result.position = \"normal\";\n    result.type = \"normal\";\n    return result;\n  }\n\n  if (previousJID === currentJID && nextJID !== currentJID) {\n    result.position = \"single\";\n    result.type = \"last\";\n    return result;\n  }\n\n  return result;\n};\n\nexport function ChatInRoom() {\n  const messages = useStoreState((state) => state.historyMessages);\n  const user = useStoreState((store) => store.user);\n  const useChatRooms = useStoreState((store) => store.userChatRooms);\n  const loaderArchive = useStoreState((store) => store.loaderArchive);\n  const currentUntrackedChatRoom = useStoreState((store) => store.currentUntrackedChatRoom);\n  const [profile, setProfile] = useState<TProfile>();\n  const [myMessage, setMyMessage] = useState(\"\");\n  const [currentRoom, setCurrentRoom] = useState(\"\");\n  const [roomData, setRoomData] = useState<{\n    jid: string;\n    name: string;\n    room_background: string;\n    room_thumbnail: string;\n    users_cnt: string;\n  }>({\n    jid: \"\",\n    name: \"\",\n    room_background: \"\",\n    room_thumbnail: \"\",\n    users_cnt: \"\",\n  });\n  const fileRef = useRef(null);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n  const [openDialog, setOpenDialog] = useState(false);\n  const [showDialogTxt, setShowDialogTxt] = useState(false);\n  const [dialogTxt, setDialogTxt] = useState<{headline: string, description: string}>({headline: \"\", description: \"\"});\n\n  const onYReachStart = () => {\n    if (loaderArchive) {\n      return;\n    } else {\n      const lastMessageID = messages.filter(\n        (item: any) => item.roomJID === currentRoom\n      )[0].id;\n      xmpp.getPaginatedArchive(currentRoom, String(lastMessageID), 10);\n    }\n  };\n\n  useEffect(() => {\n    getPublicProfile(user.walletAddress).then((result) => {\n      setProfile(result.data.result);\n    });\n  }, []);\n\n  const chooseRoom = (jid: string) => {\n    setCurrentRoom(jid);\n    setRoomData(useChatRooms.filter((e) => e.jid === jid)[0]);\n    useStoreState.getState().clearCounterChatRoom(jid);\n    useStoreState.getState().setCurrentUntrackedChatRoom(jid);\n\n    const filteredMessages = messages.filter(\n      (item: any) => item.roomJID === jid\n    );\n\n    if (!loaderArchive && filteredMessages.length <= 10 && filteredMessages.length > 0) {\n      const lastMessageID = filteredMessages[0].id;\n      xmpp.getPaginatedArchive(jid, String(lastMessageID), 10);\n    }\n  };\n\n  const getConversationInfo = (roomJID: string) => {\n    const messagesInRoom = messages\n      .filter((item: any) => item.roomJID === roomJID)\n      .slice(-1);\n    if (loaderArchive && messagesInRoom.length <= 0) {\n      return \"Loading...\";\n    }\n\n    if (messagesInRoom.length > 0) {\n      return messagesInRoom[0].body;\n    }\n    return \"No messages yet\";\n  };\n\n  const getLastActiveTime = (roomJID: string) => {\n    const messagesInRoom = messages\n      .filter((item: any) => item.roomJID === roomJID)\n      .slice(-1);\n    if (messagesInRoom.length <= 0) {\n      return \"\";\n    }\n\n    if (differenceInHours(new Date(), new Date(messagesInRoom[0].date)) > 1) {\n      return format(new Date(messagesInRoom[0].date), \"hh:mm\");\n    } else {\n      return formatDistance(\n        subDays(new Date(messagesInRoom[0].date), 0),\n        new Date(),\n        { addSuffix: true }\n      );\n    }\n  };\n\n  const sendMessage = (button: any) => {\n    let userAvatar = \"\";\n    if (profile?.profileImage) {\n      userAvatar = profile?.profileImage;\n    }\n\n    xmpp.sendMessage(\n      currentRoom,\n      user.firstName,\n      user.lastName,\n      userAvatar,\n      user.walletAddress,\n      typeof button === 'object' ? button.value : myMessage,\n        typeof button === 'object' ? button.notDisplayedValue : null\n    );\n  };\n\n  const sendFile = (file: File) => {\n    setDialogTxt({headline: \"File is loading, please wait...\", description: \"\"})\n    setOpenDialog(true);\n\n    const formData = new FormData();\n    formData.append('files', file);\n\n    uploadFile(formData).then(result => {\n      let userAvatar = \"\";\n      if (profile?.profileImage) {\n        userAvatar = profile?.profileImage;\n      }\n\n      result.data.results.map(async (item: any) => {\n        const data = {\n          firstName: user.firstName,\n          lastName: user.lastName,\n          walletAddress: user.walletAddress,\n          chatName: roomData.name,\n          userAvatar: userAvatar,\n          createdAt: item.createdAt,\n          expiresAt: item.expiresAt,\n          fileName: item.filename,\n          isVisible: item.isVisible,\n          location: item.location,\n          locationPreview: item.locationPreview,\n          mimetype: item.mimetype,\n          originalName: item.originalname,\n          ownerKey: item.ownerKey,\n          size: item.size,\n          duration: item?.duration,\n          updatedAt: item.updatedAt,\n          userId: item.userId,\n          waveForm: \"\",\n          attachmentId: item._id,\n          wrappable: true,\n        };\n        xmpp.sendMediaMessageStanza(currentRoom, data);\n        setOpenDialog(false);\n      });\n    }).catch(error => {\n      console.log(error);\n      setDialogTxt({headline: \"Error\", description: \"An error occurred while uploading the file\"})\n      setShowDialogTxt(true);\n    })\n    fileRef.current.value = \"\";\n  }\n\n  const setMessage = (value) => {\n    setMyMessage(value);\n    xmpp.isComposing(user.walletAddress, roomData.jid, user.firstName+\" \"+user.lastName);\n  }\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      xmpp.pausedComposing(user.walletAddress, roomData.jid)\n    }, 1000);\n    return () => clearTimeout(timeoutId);\n  }, [myMessage]);\n\n  useEffect(() => {\n    if(currentUntrackedChatRoom){\n      chooseRoom(currentUntrackedChatRoom);\n    }\n\n    window.onblur = () => {\n      useStoreState.getState().setCurrentUntrackedChatRoom(\"\");\n    }\n\n    window.onfocus = () => {\n      if(currentRoom){\n        useStoreState.getState().setCurrentUntrackedChatRoom(currentRoom);\n        useStoreState.getState().clearCounterChatRoom(currentRoom);\n      }\n    }\n  }, [currentRoom])\n\n  return (\n    <Box style={{ height: \"500px\" }}>\n      <MainContainer responsive>\n        <Sidebar position=\"left\" scrollable={false}>\n          <Search placeholder=\"Search...\" />\n          <ConversationList loading={loaderArchive}>\n            {useChatRooms.map((room) => (\n              <Conversation\n                active={room.jid === currentRoom}\n                key={room.jid}\n                unreadCnt={room.unreadMessages}\n                onClick={() => chooseRoom(room.jid)}\n                name={room.name}\n                info={getConversationInfo(room.jid)}\n                lastActivityTime={getLastActiveTime(room.jid)}\n              >\n                <Avatar\n                  src={\n                    room.room_background !== \"none\"\n                      ? room.room_background\n                      : \"https://icotar.com/initials/\" + room.name\n                  }\n                />\n              </Conversation>\n            ))}\n          </ConversationList>\n        </Sidebar>\n\n        <ChatContainer>\n          {!!roomData.name && (\n            <ConversationHeader>\n              <ConversationHeader.Back />\n              {messages.filter((item: any) => item.roomJID === currentRoom)\n                .length > 0 && (\n                <ConversationHeader.Content\n                  userName={roomData.name}\n                  info={\n                    \"Active \" +\n                    formatDistance(\n                      subDays(\n                        new Date(\n                          messages\n                            .filter((item: any) => item.roomJID === currentRoom)\n                            .slice(-1)[0].date\n                        ),\n                        0\n                      ),\n                      new Date(),\n                      { addSuffix: true }\n                    )\n                  }\n                />\n              )}\n              <ConversationHeader.Actions>\n                <BookmarkRemoveIcon />\n              </ConversationHeader.Actions>\n            </ConversationHeader>\n          )}\n          <MessageList\n            loadingMore={loaderArchive}\n            onYReachStart={onYReachStart}\n            typingIndicator={\n              !!useChatRooms.filter((e) => e.jid === currentRoom)[0]\n                ?.composing && (\n                <TypingIndicator\n                  content={\n                    useChatRooms.filter((e) => e.jid === currentRoom)[0]\n                      ?.composing\n                  }\n                />\n              )\n            }\n          >\n            {messages\n              .filter((item: any) => item.roomJID === currentRoom)\n              .map((message, index, arr) => {\n                const position = getPosition(arr, message, index);\n                if(message.data.isSystemMessage === \"false\") {\n                  return (\n                      <Message\n                          key={message.id}\n                          is={\"Message\"}\n                          position={position}\n                          message={message}\n                          userJid={xmpp.client?.jid?.toString()}\n                          buttonSender={sendMessage}\n                          chooseDirectRoom={chooseRoom}\n                      />\n                  );\n                }else{\n                  return (\n                      <SystemMessage\n                          is={\"Message\"}\n                          message={message}\n                          userJid={xmpp.client?.jid?.toString()}\n                      />\n                  );\n                }\n              })}\n            {messages.length <= 0 ||\n              (!currentRoom && (\n                <MessageList.Content\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    height: \"100%\",\n                    textAlign: \"center\",\n                    fontSize: \"1.2em\",\n                  }}\n                >\n                  {!loaderArchive ? (\n                    <span>\n                      {!currentRoom &&\n                        \"To get started, please select a chat room.\"}\n                    </span>\n                  ) : (\n                    \"Loading...\"\n                  )}\n                </MessageList.Content>\n              ))}\n            {!loaderArchive &&\n              currentRoom &&\n              messages.filter((item: any) => item.roomJID === currentRoom)\n                .length <= 0 && (\n                <MessageList.Content\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    height: \"100%\",\n                    textAlign: \"center\",\n                    fontSize: \"1.2em\",\n                  }}\n                >\n                  Message list is empty\n                </MessageList.Content>\n              )}\n          </MessageList>\n          {!!roomData.name && (\n              <div is={\"MessageInput\"}>\n                <MessageInput\n                    placeholder=\"Type message here\"\n                    onChange={setMessage}\n                    onSend={sendMessage}\n                    onAttachClick={() => fileRef.current.click()}\n                />\n                <input type='file' name=\"file\" id='file' onChange={event => sendFile(event.target.files[0])} ref={fileRef} style={{display: 'none'}}/>\n              </div>\n          )}\n        </ChatContainer>\n      </MainContainer>\n\n      <Dialog\n          fullScreen={fullScreen}\n          open={openDialog}\n          onClose={() => setOpenDialog(true)}\n          aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {dialogTxt.headline}\n        </DialogTitle>\n        <DialogContent>\n          {showDialogTxt && dialogTxt.description.length > 0 ?\n              <DialogContentText>\n                {dialogTxt.description}\n              </DialogContentText>\n          :\n              <Box sx={{ display: 'flex', justifyContent: 'center' }}>\n                <CircularProgress />\n              </Box>\n          }\n        </DialogContent>\n        {showDialogTxt ?\n          <DialogActions>\n            <Button onClick={() => setOpenDialog(false)} autoFocus>\n              Close\n          </Button>\n        </DialogActions>\n        :null\n        }\n      </Dialog>\n    </Box>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport { useStoreState } from \"../../store\";\nimport { useHistory } from \"react-router-dom\";\nimport { ChatInRoom } from \"./Chat\";\n\nexport default function Chat() {\n  const user = useStoreState((state) => state.user);\n  const messages = useStoreState((state) => state.messages);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!user.firstName) {\n      history.push(\"/\");\n    }\n  }, [user.firstName, history]);\n  return (\n    <Container maxWidth=\"xl\" style={{ height: \"calc(100vh - 68px)\" }}>\n      <Box>Chat</Box>\n      <Box>{messages.length}</Box>\n      <ChatInRoom />\n    </Container>\n  );\n}\n"],"names":["underscoreManipulation","str","replace","toLowerCase","createPrivateChat","myWalletAddress","otherUserWalletAddress","myFirstName","otherFirstName","CONFERENCEDOMAIN","combinedWalletAddress","sort","join","roomJid","combinedUsersName","xmpp","roomName","setTimeout","Message","message","userJid","position","buttonSender","chooseDirectRoom","firstName","data","senderFirstName","lastName","senderLastName","messageJid","senderJID","history","useHistory","useState","buttons","setButtons","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","openDialog","setOpenDialog","React","anchorEl","setAnchorEl","dialogMenuType","setDialogMenuType","dialogText","setDialogText","openMenu","Boolean","coinAmount","setCoinAmount","coinData","useStoreState","store","balance","filter","el","tokenType","contractAddress","length","setProfile","user","loaderArchive","useEffect","quickReplies","JSON","parse","getPublicProfile","walletAddress","then","result","is","separator","model","sender","direction","String","split","avatarPosition","avatarSpacer","type","style","borderRadius","boxSizing","width","height","cursor","onClick","push","senderWalletAddress","src","photoURL","onError","currentTarget","onerror","alt","display","justifyContent","alignItems","IconButton","id","undefined","event","MoreVert","isMediafile","mimetype","location","originalName","target","href","locationPreview","controls","title","body","sentTime","differenceInHours","Date","date","format","formatDistance","subDays","addSuffix","key","flexDirection","marginLeft","map","button","index","border","name","Menu","open","onClose","MenuListProps","anchorOrigin","vertical","horizontal","MenuItem","console","log","catch","error","Dialog","DialogContent","tokenName","TextField","label","variant","value","onChange","transferCoin","tokenSymbol","Number","textMessage","roomJID","DialogActions","autoFocus","SystemMessage","textAlign","color","fontSize","fontFamily","ChatInRoom","messages","state","historyMessages","useChatRooms","userChatRooms","currentUntrackedChatRoom","profile","myMessage","setMyMessage","currentRoom","setCurrentRoom","jid","room_background","room_thumbnail","users_cnt","roomData","setRoomData","fileRef","useRef","showDialogTxt","setShowDialogTxt","headline","description","dialogTxt","setDialogTxt","chooseRoom","e","clearCounterChatRoom","setCurrentUntrackedChatRoom","filteredMessages","item","lastMessageID","getConversationInfo","messagesInRoom","slice","getLastActiveTime","sendMessage","userAvatar","profileImage","notDisplayedValue","timeoutId","clearTimeout","window","onblur","onfocus","Box","responsive","scrollable","placeholder","loading","room","active","unreadCnt","unreadMessages","info","lastActivityTime","userName","BookmarkRemove","loadingMore","onYReachStart","typingIndicator","composing","content","arr","previousJID","nextJID","currentJID","getPosition","isSystemMessage","toString","onSend","onAttachClick","current","click","file","formData","FormData","append","uploadFile","results","chatName","createdAt","expiresAt","fileName","filename","isVisible","originalname","ownerKey","size","duration","updatedAt","userId","waveForm","attachmentId","_id","wrappable","sendFile","files","ref","DialogTitle","DialogContentText","sx","CircularProgress","Button","Chat","Container","maxWidth"],"sourceRoot":""}
{"version":3,"file":"static/js/679.f81556a7.chunk.js","mappings":"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","sources":["pages/Transactions/Provenance.tsx","../node_modules/@mui/icons-material/ArrowRightAlt.js"],"sourcesContent":["import {\n  Avatar,\n  Collapse,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemButton,\n  Typography,\n} from \"@mui/material\";\nimport { Box, useTheme } from \"@mui/system\";\nimport { format } from \"date-fns\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { getProvenanceTransacitons, IDocument } from \"../../http\";\nimport { TBalance } from \"../../store\";\nimport { ITransaction } from \"../Profile/types\";\nimport ArrowRightAltIcon from \"@mui/icons-material/ArrowRightAlt\";\nimport { FullPageSpinner } from \"../../components/FullPageSpinner\";\n\nexport interface IProvenance {}\n\nconst tokenTypes = {\n  creation: \"Token Creation\",\n};\n\nconst UserBlock = ({\n  name,\n  balance,\n  total,\n}: {\n  name: string;\n  balance: string;\n  total: string;\n}) => {\n  const theme = useTheme();\n\n  return (\n    <Box sx={{ display: \"flex\", alignItems: \"center\", width: \"30%\" }}>\n      <Box>\n        <ListItemAvatar>\n          <Avatar style={{ backgroundColor: theme.palette.primary.main }}>\n            <Typography>{name.slice(0, 2)}</Typography>\n          </Avatar>\n        </ListItemAvatar>\n      </Box>\n      <Box ml={\"2\"}>\n        <Box>\n          <Typography>{name}</Typography>\n          {!!balance && (\n            <Typography>\n              {balance}/{total}\n            </Typography>\n          )}\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nconst TransactionItem: React.FC<{ item: ITransaction }> = ({ item }) => {\n  const [expanded, setExpanded] = useState(false);\n  const history = useHistory();\n  const senderName =\n    (item.senderFirstName || \"\") + \" \" + (item.senderLastName || \"\");\n  const receiverName =\n    (item.receiverFirstName || \"\") + \" \" + (item.receiverLastName || \"\");\n  return (\n    <>\n      <ListItem key={item.transactionHash}>\n        <ListItemButton\n          onClick={() => setExpanded((prev) => !prev)}\n          // sx={{ display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          {item.type === tokenTypes.creation ? (\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                alignItems: \"center\",\n                width: \"30%\",\n              }}\n            >\n              <Typography fontSize={14} color={\"black\"} fontWeight={\"bold\"}>\n                {item.tokenName || item.nftName || \"Item\"}\n              </Typography>\n            </Box>\n          ) : (\n            <UserBlock\n              balance={item.senderBalance}\n              total={item.nftTotal}\n              name={senderName}\n            />\n          )}\n\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              width: \"30%\",\n              paddingLeft: \"20px\",\n            }}\n          >\n            {item.type === tokenTypes.creation ? (\n              <Typography fontSize={14} color={\"black\"} fontWeight={\"bold\"}>\n                Was created by\n              </Typography>\n            ) : (\n              <ArrowRightAltIcon color={\"success\"} fontSize={\"small\"} />\n            )}\n          </Box>\n          <UserBlock\n            balance={item.receiverBalance}\n            total={item.nftTotal}\n            name={receiverName}\n          />\n          <Typography>{item.value}</Typography>\n        </ListItemButton>\n      </ListItem>\n\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <List dense>\n          {!!item.blockNumber && (\n            <ListItem disablePadding disableGutters style={{ paddingLeft: 25 }}>\n              <span style={{ fontWeight: \"bold\" }}>Block Number:</span>{\" \"}\n              {item.blockNumber}\n            </ListItem>\n          )}\n          <ListItem disablePadding disableGutters style={{ paddingLeft: 25 }}>\n            <span style={{ fontWeight: \"bold\" }}>From:</span>{\" \"}\n            <span>\n              <span\n                onClick={() => history.push(\"/explorer/address/\" + item.from)}\n                style={{ textDecoration: \"underline\", cursor: \"pointer\" }}\n              >\n                {item.from}\n              </span>\n            </span>\n          </ListItem>{\" \"}\n          {!!item.to && (\n            <ListItem disablePadding disableGutters style={{ paddingLeft: 25 }}>\n              <span style={{ fontWeight: \"bold\" }}>To:</span>\n              <span\n                onClick={() => history.push(\"/explorer/address/\" + item.to)}\n                style={{ textDecoration: \"underline\", cursor: \"pointer\" }}\n              >\n                {item.to}\n              </span>\n            </ListItem>\n          )}\n          {!!item.fromFirstName && (\n            <ListItem disablePadding disableGutters style={{ paddingLeft: 25 }}>\n              <span style={{ fontWeight: \"bold\" }}>Sender First Name:</span>\n              {item.fromFirstName}\n            </ListItem>\n          )}\n          {!!item.fromLastName && (\n            <ListItem disablePadding disableGutters style={{ paddingLeft: 25 }}>\n              <span style={{ fontWeight: \"bold\" }}>Sender Last Name:</span>\n              {item.fromLastName}\n            </ListItem>\n          )}\n          {!!item.timestamp && (\n            <ListItem disablePadding disableGutters style={{ paddingLeft: 25 }}>\n              <span style={{ fontWeight: \"bold\" }}>Timestamp:</span>{\" \"}\n              {format(new Date(item.timestamp), \"pp PP\")}\n            </ListItem>\n          )}\n          {!!item.toFirstName && (\n            <ListItem disablePadding disableGutters style={{ paddingLeft: 25 }}>\n              <span style={{ fontWeight: \"bold\" }}>Receiver First Name:</span>\n              {item.toFirstName}\n            </ListItem>\n          )}\n          {!!item.toLastName && (\n            <ListItem disablePadding disableGutters style={{ paddingLeft: 25 }}>\n              <span style={{ fontWeight: \"bold\" }}>Receiver Last Name:</span>\n              {item.toLastName}\n            </ListItem>\n          )}\n          {!!item.tokenName && (\n            <ListItem disablePadding disableGutters style={{ paddingLeft: 25 }}>\n              <span style={{ fontWeight: \"bold\" }}>Token Name:</span>\n              {item.tokenName}\n            </ListItem>\n          )}\n          {!!item.transactionIndex && (\n            <ListItem disablePadding disableGutters style={{ paddingLeft: 25 }}>\n              <span style={{ fontWeight: \"bold\" }}>Transaction Index:</span>\n              {item.transactionIndex}\n            </ListItem>\n          )}\n          {!!item.type && (\n            <ListItem disablePadding disableGutters style={{ paddingLeft: 25 }}>\n              <span style={{ fontWeight: \"bold\" }}>Type:</span>\n              {item.type}\n            </ListItem>\n          )}\n          {!!item.value && (\n            <ListItem disablePadding disableGutters style={{ paddingLeft: 25 }}>\n              <span style={{ fontWeight: \"bold\" }}>Value:</span>\n              {item.value}\n            </ListItem>\n          )}\n          {!!item.transactionHash && (\n            <ListItem disablePadding disableGutters style={{ paddingLeft: 25 }}>\n              <span style={{ fontWeight: \"bold\" }}>Transaction Hash:</span>\n              <span\n                onClick={() =>\n                  history.push(\"/explorer/transactions/\" + item.transactionHash)\n                }\n                style={{ textDecoration: \"underline\", cursor: \"pointer\" }}\n              >\n                {item.transactionHash}\n              </span>\n            </ListItem>\n          )}\n          <ListItem disablePadding disableGutters style={{ paddingLeft: 25 }}>\n            <span style={{ fontWeight: \"bold\" }}>Token Id:</span>\n            {item.tokenId}\n          </ListItem>\n          <ListItem disablePadding disableGutters style={{ paddingLeft: 25 }}>\n            <span style={{ fontWeight: \"bold\" }}>_id:</span>\n            {item._id}\n          </ListItem>\n        </List>\n      </Collapse>\n    </>\n  );\n};\n\nconst Provenance: React.FC<IProvenance> = ({}) => {\n  const location = useLocation<{\n    nftItem: TBalance & IDocument;\n    walletAddress: string;\n  }>();\n  const [transactions, setTransactions] = useState<ITransaction[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const nftItem = location.state.nftItem;\n  const getTransactions = async () => {\n    setLoading(true);\n    try {\n      const res = await getProvenanceTransacitons(\n        location.state.walletAddress,\n        nftItem.nftId || nftItem._id\n      );\n      setTransactions(res.data.items.reverse());\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    getTransactions();\n  }, []);\n  if (!location.state.walletAddress) return <p>No Data</p>;\n  if (loading) return <FullPageSpinner />;\n  return (\n    <Box>\n      <Box\n        sx={{\n          width: \"100%\",\n          height: \"300px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          padding: \"10px\",\n        }}\n      >\n        <img\n          style={{ maxWidth: \"100%\", maxHeight: \"100%\", objectFit: \"contain\" }}\n          src={\n            nftItem.nftFileUrl ||\n            nftItem?.file?.locationPreview ||\n            nftItem?.location\n          }\n          alt=\"image1\"\n        />\n        <Box sx={{ padding: \"10px\" }}>\n          <Typography sx={{ fontWeight: \"bold\", fontSize: 18 }}>\n            {nftItem.tokenName || nftItem.documentName}\n          </Typography>\n          {!!nftItem.balance && (\n            <Typography sx={{ fontWeight: \"bold\", fontSize: 18 }}>\n              {nftItem.balance}/{nftItem.total}\n            </Typography>\n          )}\n        </Box>\n      </Box>\n      <List>\n        {transactions.map((item) => {\n          return <TransactionItem item={item} key={item._id} />;\n        })}\n      </List>\n    </Box>\n  );\n};\nexport default Provenance;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.01 11H4v2h12.01v3L20 12l-3.99-4z\"\n}), 'ArrowRightAlt');\n\nexports.default = _default;"],"names":["tokenTypes","UserBlock","name","balance","total","theme","useTheme","sx","display","alignItems","width","style","backgroundColor","palette","primary","main","slice","ml","TransactionItem","item","useState","expanded","setExpanded","history","useHistory","senderName","senderFirstName","senderLastName","receiverName","receiverFirstName","receiverLastName","onClick","prev","type","justifyContent","fontSize","color","fontWeight","tokenName","nftName","senderBalance","nftTotal","paddingLeft","receiverBalance","value","transactionHash","in","timeout","unmountOnExit","dense","blockNumber","disablePadding","disableGutters","push","from","textDecoration","cursor","to","fromFirstName","fromLastName","timestamp","format","Date","toFirstName","toLastName","transactionIndex","tokenId","_id","location","useLocation","transactions","setTransactions","loading","setLoading","nftItem","state","getTransactions","getProvenanceTransacitons","walletAddress","nftId","res","data","items","reverse","console","log","useEffect","height","padding","maxWidth","maxHeight","objectFit","src","nftFileUrl","file","locationPreview","alt","documentName","map","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}